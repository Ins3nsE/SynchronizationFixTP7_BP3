
&ИзменениеИКонтроль("ПКО_СписаниеНекондицииОприходование_ПриОтправкеДанных")
Процедура ИО_ПКО_СписаниеНекондицииОприходование_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	НомерБезПрефикса = Прав(ДанныеИБ.Номер, 6);
	НомерДокумента = КомпонентыОбмена.УзелКорреспондента.ПрефиксНомераДокументов + "НО-" + НомерБезПрефикса;

	Если ЗначениеЗаполнено(ДанныеИБ.Фирма) Тогда
		Организация = ДанныеИБ.Фирма;
	Иначе
		Организация = КомпонентыОбмена.УзелКорреспондента.Организация;
	КонецЕсли;

	Если ЗначениеЗаполнено(ДанныеИБ.Склад.Подразделение) Тогда 
		Подразделение = ДанныеИБ.Склад.Подразделение;
	Иначе
		Подразделение = КомпонентыОбмена.УзелКорреспондента.Подразделение;
	КонецЕсли;

	СтатьяДоходов = КомпонентыОбмена.УзелКорреспондента.СтатьяДоходов;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.ЯвляетсяПлательщикомНДС КАК ЯвляетсяПлательщикомНДС
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&Период, ) КАК УчетнаяПолитикаОрганизацийСрезПоследних
	|ГДЕ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.Организация = &Организация";

	Запрос.УстановитьПараметр("Период", ДанныеИБ.Дата);
	Запрос.УстановитьПараметр("Организация", ДанныеИБ.Фирма);

	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если Выборка.ЯвляетсяПлательщикомНДС Тогда
			Налогообложение = "ПродажаОблагаетсяНДС";
		Иначе
			Налогообложение = "ПродажаНеОблагаетсяНДС";
		КонецЕсли;	
	Иначе
		Налогообложение = "ПродажаОблагаетсяНДС";
	КонецЕсли;	

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СписаниеНекондицииТовары.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента,
	|	ВЫБОР
	|		КОГДА &ЭтоНТТ
	|			ТОГДА СписаниеНекондицииТовары.РозничнаяСуммаНекондиция
	|		ИНАЧЕ СписаниеНекондицииТовары.ПриходнаяСумма
	|	КОНЕЦ КАК Сумма,
	|	СписаниеНекондицииТовары.КоличествоНекондиция КАК Количество,
	|	ВЫБОР
	|		КОГДА &ЭтоНТТ
	|			ТОГДА СписаниеНекондицииТовары.РозничнаяСуммаНекондиция / (СписаниеНекондицииТовары.КоличествоНекондиция * СписаниеНекондицииТовары.КоэффициентНекондиция)
	|		ИНАЧЕ СписаниеНекондицииТовары.ПриходнаяСумма / (СписаниеНекондицииТовары.КоличествоНекондиция * СписаниеНекондицииТовары.КоэффициентНекондиция)
	|	КОНЕЦ КАК Цена,
	|	СписаниеНекондицииТовары.КоэффициентНекондиция КАК Коэффициент,
	|	СписаниеНекондицииТовары.НоменклатураНекондиция.БазоваяЕдиницаПоКлассификатору КАК ЕдиницаИзмерения,
	|	СписаниеНекондицииТовары.Партия.ГТД КАК ГТД,
	|	СписаниеНекондицииТовары.Партия.СтранаПроисхождения КАК СтранаПроисхождения,
	|	СписаниеНекондицииТовары.Номенклатура.ЕдиницаПрослеживаемости КАК ЕдиницаИзмеренияПрослеживаемости,
	|	СписаниеНекондицииТовары.Номенклатура.ПодлежитПрослеживаемости КАК ПрослеживаемыйТовар,
	|	0 КАК КоличествоРНПТ
	|ПОМЕСТИТЬ ВТ_ТабличнаяЧасть
	|ИЗ
	|	Документ.СписаниеНекондиции.Товары КАК СписаниеНекондицииТовары
	|ГДЕ
	|	СписаниеНекондицииТовары.Ссылка = &Ссылка
	|	И СписаниеНекондицииТовары.Количество > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНоменклатуры.Номенклатура КАК Номенклатура,
	|	СУММА(ОстаткиНоменклатуры.Количество) КАК Количество,
	|	ВЫБОР
	|		КОГДА ОстаткиНоменклатуры.Партия.НаРеализации = ИСТИНА
	|			ТОГДА ""КомиссионныеТовары""
	|		ИНАЧЕ ""СобственныеТовары""
	|	КОНЕЦ КАК ТипЗапасов,
	|	ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента,
	|	ОстаткиНоменклатуры.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	|ПОМЕСТИТЬ ВТ_Движения
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|ГДЕ
	|	ОстаткиНоменклатуры.Регистратор = &Ссылка
	|	И ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента В
	|			(ВЫБРАТЬ
	|				ВТ_ТабличнаяЧасть.УникальныйНомерСтрокиДокумента
	|			ИЗ
	|				ВТ_ТабличнаяЧасть КАК ВТ_ТабличнаяЧасть)
	|	И ОстаткиНоменклатуры.Фирма = &Организация
	|	И ОстаткиНоменклатуры.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента,
	|	ОстаткиНоменклатуры.Номенклатура,
	|	ВЫБОР
	|		КОГДА ОстаткиНоменклатуры.Партия.НаРеализации = ИСТИНА
	|			ТОГДА ""КомиссионныеТовары""
	|		ИНАЧЕ ""СобственныеТовары""
	|	КОНЕЦ,
	|	ОстаткиНоменклатуры.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Движения.Номенклатура КАК Номенклатура,
	|	ВТ_Движения.Количество КАК Количество,
	|	ВЫРАЗИТЬ(ВТ_ТабличнаяЧасть.Цена КАК ЧИСЛО(15, 2)) КАК Цена,
	|	ВЫБОР
	|		КОГДА ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент = ВТ_Движения.Количество
	|			ТОГДА ВТ_ТабличнаяЧасть.Сумма
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТ_Движения.ТипЗапасов = ""СобственныеТовары""
	|					ТОГДА ВЫРАЗИТЬ(ВТ_ТабличнаяЧасть.Сумма * ВТ_Движения.Количество / (ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент) КАК ЧИСЛО(15, 2))
	|				ИНАЧЕ ВТ_ТабличнаяЧасть.Сумма - (ВЫРАЗИТЬ(ВТ_ТабличнаяЧасть.Сумма * (ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент - ВТ_Движения.Количество) / (ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент) КАК ЧИСЛО(15, 2)))
	|			КОНЕЦ
	|	КОНЕЦ КАК Сумма,
	|	ВТ_Движения.ТипЗапасов КАК ТипЗапасов,
	|	ВТ_ТабличнаяЧасть.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_Движения.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ТабличнаяЧасть.ГТД КАК ГТД,
	|	ВТ_ТабличнаяЧасть.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВТ_ТабличнаяЧасть.ЕдиницаИзмеренияПрослеживаемости КАК ЕдиницаИзмеренияПрослеживаемости,
	|	ВТ_ТабличнаяЧасть.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар,
	|	ВТ_ТабличнаяЧасть.КоличествоРНПТ КАК КоличествоРНПТ,
	|	ВТ_Движения.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента
	|ПОМЕСТИТЬ ВТ_Промежуточная
	|ИЗ
	|	ВТ_Движения КАК ВТ_Движения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧасть КАК ВТ_ТабличнаяЧасть
	|		ПО ВТ_Движения.УникальныйНомерСтрокиДокумента = ВТ_ТабличнаяЧасть.УникальныйНомерСтрокиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Промежуточная.Номенклатура КАК Номенклатура,
	|	ВТ_Промежуточная.Количество КАК Количество,
	|	ВТ_Промежуточная.Цена КАК Цена,
	|	ВТ_Промежуточная.Сумма КАК Сумма,
	|	ВТ_Промежуточная.ТипЗапасов КАК ТипЗапасов,
	|	ВТ_Промежуточная.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_Промежуточная.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ВТ_Промежуточная.ГТД КАК ГТД,
	|	ВТ_Промежуточная.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВТ_Промежуточная.ЕдиницаИзмеренияПрослеживаемости КАК ЕдиницаИзмеренияПрослеживаемости,
	|	ВТ_Промежуточная.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар,
	|	ВТ_Промежуточная.КоличествоРНПТ КАК КоличествоРНПТ,
	|	ВТ_Промежуточная.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента
	|ИЗ
	|	ВТ_Промежуточная КАК ВТ_Промежуточная
	|ГДЕ
	|	ВТ_Промежуточная.Количество > 0
	|	И ВТ_Промежуточная.Сумма > 0";

	Запрос.УстановитьПараметр("Организация", Организация); 
	Запрос.УстановитьПараметр("ЭтоНТТ", ЭтоНТТ(ДанныеИБ.Склад, ДанныеИБ.Дата)); 
	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	ТаблицаТоварыПромежуточная = Запрос.Выполнить().Выгрузить();  

	ТаблицаТоварыПромежуточная.Колонки.Добавить("НомерГТД");

	ТаблицаТовары = ТаблицаТоварыПромежуточная.СкопироватьКолонки();

	ТаблицаПрослеживаемости = ДанныеИБ.Ссылка.Прослеживаемости.Выгрузить();

	Для Каждого СторокаТаблицы Из ТаблицаТоварыПромежуточная Цикл

		СуммаПоПозиции = СторокаТаблицы.Сумма;
		НарастающийИтогСумма = 0;
		КоличествоПоПозиции = СторокаТаблицы.Количество; 
		УбывающийИтогКоличество = СторокаТаблицы.Количество;

		Если СторокаТаблицы.ПрослеживаемыйТовар = Истина Тогда
			СтрокиПрослеживаемости = ТаблицаПрослеживаемости.НайтиСтроки(Новый Структура("УникальныйНомерСтрокиДокумента", СторокаТаблицы.УникальныйНомерСтрокиДокумента));

			Для Каждого СтрокаТаблицыПрослежеваемости Из СтрокиПрослеживаемости Цикл

				Если СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0 Тогда
					Продолжить;
				КонецЕсли;	
				Если УбывающийИтогКоличество = 0 Тогда
					Прервать;
				КонецЕсли;	
				Если УбывающийИтогКоличество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					УбывающийИтогКоличество = 0;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
				ИначеЕсли УбывающийИтогКоличество > СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					УбывающийИтогКоличество = УбывающийИтогКоличество - СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
				ИначеЕсли УбывающийИтогКоличество < СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда	
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = УбывающийИтогКоличество;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = СтрокаТаблицыПрослежеваемости.КоличествоБазовое - УбывающийИтогКоличество; 
					УбывающийИтогКоличество = 0;
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
				КонецЕсли;
			КонецЦикла;	
		Иначе	
			НоваяСтрока = ТаблицаТовары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
			#Удаление
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СторокаТаблицы.ГТД, СторокаТаблицы.ГТД.НомерГТД, СторокаТаблицы.ГТД.СтранаПроисхождения, СторокаТаблицы.ГТД.ЭтоРНПТ));
			#КонецУдаления
			#Вставка
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ," 
													,?(СторокаТаблицы.ГТД = Null, Справочники.ГТД.ПустаяСсылка(), СторокаТаблицы.ГТД)
													,?(СторокаТаблицы.ГТД = Null, "", СторокаТаблицы.ГТД.НомерГТД), 
													,?(СторокаТаблицы.ГТД = Null, Справочники.СтраныМира.ПустаяСсылка(), СторокаТаблицы.ГТД.СтранаПроисхождения)
													,?(СторокаТаблицы.ГТД = Null, Ложь, СторокаТаблицы.ГТД.ЭтоРНПТ)));
			#КонецВставки
		КонецЕсли;	
	КонецЦикла;	

	Если КомпонентыОбмена.УзелКорреспондента.СворачиватьТЧДокументовПоТоварамИзСтавокНДС Или ЭтоНТТ(ДанныеИБ.Склад, ДанныеИБ.Дата) Тогда
		КолонкиГруппировок = "Номенклатура, ЕдиницаИзмерения, ТипЗапасов";
		КолонкиСуммирования = "Количество, Цена, Сумма";
		ТаблицаТовары = ПроизвестиСверткуКоллекцииОбъектовПоНоменклатуре(ТаблицаТовары, КолонкиГруппировок, КолонкиСуммирования, "СписаниеНекондицииОприходование", Неопределено);
	КонецЕсли;

	ТаблицаДопРеквизитов = Новый ТаблицаЗначений;
	ТаблицаДопРеквизитов.Колонки.Добавить("Свойство");
	ТаблицаДопРеквизитов.Колонки.Добавить("ЗначениеСвойства");

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Номер ТП7";
	НоваяСтрока.ЗначениеСвойства = ДанныеИБ.Номер;

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Вид документа ТП7";
	НоваяСтрока.ЗначениеСвойства = "Списание некондиции";

	Если КомпонентыОбмена.УзелКорреспондента.ВыгружатьНомерДокумента Тогда 
		ДанныеXDTO.Вставить("ДополнительныеРеквизиты", ТаблицаДопРеквизитов);
	КонецЕсли;

	ДанныеXDTO.КлючевыеСвойства.Вставить("Организация", Организация);
	Если ТаблицаТовары.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("Товары", ТаблицаТовары);
	КонецЕсли;	
	ДанныеXDTO.Вставить("СтатьяДоходов", СтатьяДоходов);
	ДанныеXDTO.КлючевыеСвойства.Вставить("Номер", НомерДокумента);
	ДанныеXDTO.Вставить("Подразделение", Подразделение);
	ДанныеXDTO.Вставить("Налогообложение", Налогообложение);
КонецПроцедуры

&ИзменениеИКонтроль("ПКО_ПриходнаяНакладная_ПриОтправкеДанных")
Процедура ИО_ПКО_ПриходнаяНакладная_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	НомерБезПрефикса = Прав(ДанныеИБ.Номер, 6);
	НомерДокумента = КомпонентыОбмена.УзелКорреспондента.ПрефиксНомераДокументов + "ПН-" + НомерБезПрефикса;
	ВидОперации = "ПокупкаУПоставщика"; 

	ВалютаВзаиморасчетов = ДанныеИБ.Договор.ВалютаВзаиморасчетов;

	Если ЗначениеЗаполнено(ДанныеИБ.Склад.Подразделение) Тогда 
		Подразделение = ДанныеИБ.Склад.Подразделение;
	Иначе
		Подразделение = КомпонентыОбмена.УзелКорреспондента.Подразделение;
	КонецЕсли;

	Если ДанныеИБ.ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.ВСумме Тогда
		СуммаВключаетНДС = Истина;
	Иначе
		СуммаВключаетНДС = Ложь;
	КонецЕсли;

	Если ДанныеИБ.ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.БезНДС Тогда
		Налогообложение = "НеОблагаетсяНДС";
	Иначе
		Налогообложение = "ОблагаетсяНДС";
	КонецЕсли;	

	ТаблицаТоварыПромежуточная = Запрос_ПриходнаяНакладная_Товары(ДанныеИБ.Ссылка, Налогообложение, КомпонентыОбмена.УзелКорреспондента.ВыгружатьТаруКакВозвратнуюТару);                  

	ТаблицаТоварыПромежуточная.Колонки.Добавить("НомерГТД");

	ТаблицаТовары = ТаблицаТоварыПромежуточная.СкопироватьКолонки();

	ТаблицаПрослеживаемости = ДанныеИБ.Ссылка.Прослеживаемости.Выгрузить();

	Для Каждого СторокаТаблицы Из ТаблицаТоварыПромежуточная Цикл

		СуммаПоПозиции = СторокаТаблицы.Сумма;
		НДСПоПозиции = СторокаТаблицы.СуммаНДС;
		СуммаВРозницеПоПозиции = СторокаТаблицы.СуммаВРознице; 
		НарастающийИтогНДС = 0;
		НарастающийИтогСумма = 0;
		НарастающийИтогСуммаВРознице = 0;
		КоличествоПоПозиции = СторокаТаблицы.Количество; 
		УбывающийИтогКоличество = СторокаТаблицы.Количество;

		Если СторокаТаблицы.ПрослеживаемыйТовар = Истина Тогда
			СтрокиПрослеживаемости = ТаблицаПрослеживаемости.НайтиСтроки(Новый Структура("УникальныйНомерСтрокиДокумента", СторокаТаблицы.УникальныйНомерСтрокиДокумента));

			Для Каждого СтрокаТаблицыПрослежеваемости Из СтрокиПрослеживаемости Цикл

				Если СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0 Тогда
					Продолжить;
				КонецЕсли;	
				Если УбывающийИтогКоличество = 0 Тогда
					Прервать;
				КонецЕсли;	
				Если УбывающийИтогКоличество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НоваяСтрока.СуммаВРознице = НоваяСтрока.Количество * НоваяСтрока.ЦенаВРознице;
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					НарастающийИтогСуммаВРознице = НарастающийИтогСуммаВРознице + НоваяСтрока.СуммаВРознице;
					УбывающийИтогКоличество = 0;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
					Если НарастающийИтогНДС <> НДСПоПозиции Тогда
						ДельтаНДС = НДСПоПозиции - НарастающийИтогНДС;
						НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2) + ДельтаНДС; 
					КонецЕсли;	
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
					Если НарастающийИтогСуммаВРознице <> СуммаВРозницеПоПозиции Тогда
						ДельтаСуммаВРознице = СуммаВРозницеПоПозиции - НарастающийИтогСуммаВРознице;
						НоваяСтрока.СуммаВРознице = НоваяСтрока.Количество * НоваяСтрока.ЦенаВРознице + ДельтаСуммаВРознице; 
					КонецЕсли;	
				ИначеЕсли УбывающийИтогКоличество > СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НоваяСтрока.СуммаВРознице = НоваяСтрока.Количество * НоваяСтрока.ЦенаВРознице;
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					НарастающийИтогСуммаВРознице = НарастающийИтогСуммаВРознице + НоваяСтрока.СуммаВРознице;
					УбывающийИтогКоличество = УбывающийИтогКоличество - СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
				ИначеЕсли УбывающийИтогКоличество < СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда	
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = УбывающийИтогКоличество;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НоваяСтрока.СуммаВРознице = НоваяСтрока.Количество * НоваяСтрока.ЦенаВРознице;
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					НарастающийИтогСуммаВРознице = НарастающийИтогСуммаВРознице + НоваяСтрока.СуммаВРознице;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = СтрокаТаблицыПрослежеваемости.КоличествоБазовое - УбывающийИтогКоличество; 
					УбывающийИтогКоличество = 0;
					Если НарастающийИтогНДС <> НДСПоПозиции Тогда
						ДельтаНДС = НДСПоПозиции - НарастающийИтогНДС;
						НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2) + ДельтаНДС; 
					КонецЕсли;	
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
					Если НарастающийИтогСуммаВРознице <> СуммаВРозницеПоПозиции Тогда
						ДельтаСуммаВРознице = СуммаВРозницеПоПозиции - НарастающийИтогСуммаВРознице;
						НоваяСтрока.СуммаВРознице = НоваяСтрока.Количество * НоваяСтрока.ЦенаВРознице + ДельтаСуммаВРознице; 
					КонецЕсли;	
				КонецЕсли;
			КонецЦикла;	
		Иначе	
			НоваяСтрока = ТаблицаТовары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
			#Удаление
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СторокаТаблицы.ГТД, СторокаТаблицы.ГТД.НомерГТД, СторокаТаблицы.ГТД.СтранаПроисхождения, СторокаТаблицы.ГТД.ЭтоРНПТ)); 
			#КонецУдаления
			#Вставка
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ," 
													,?(СторокаТаблицы.ГТД = Null, Справочники.ГТД.ПустаяСсылка(), СторокаТаблицы.ГТД)
													,?(СторокаТаблицы.ГТД = Null, "", СторокаТаблицы.ГТД.НомерГТД), 
													,?(СторокаТаблицы.ГТД = Null, Справочники.СтраныМира.ПустаяСсылка(), СторокаТаблицы.ГТД.СтранаПроисхождения)
													,?(СторокаТаблицы.ГТД = Null, Ложь, СторокаТаблицы.ГТД.ЭтоРНПТ)));
			#КонецВставки
		КонецЕсли;	
	КонецЦикла;	

	Если КомпонентыОбмена.УзелКорреспондента.СворачиватьТЧДокументовПоТоварамИзСтавокНДС Или ЭтоНТТ(ДанныеИБ.Склад, ДанныеИБ.Дата) Тогда
		КолонкиГруппировок = "Номенклатура, ЕдиницаИзмерения, СтавкаНДС, ТипЗапасов";
		КолонкиСуммирования = "Количество, Цена, Сумма, СуммаНДС, ЦенаВРознице, СуммаВРознице";
		ТаблицаТовары = ПроизвестиСверткуКоллекцииОбъектовПоНоменклатуре(ТаблицаТовары, КолонкиГруппировок, КолонкиСуммирования, "ПриходнаяНакладная", Неопределено);
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПриходнаяНакладнаяДопРасходы.Услуга КАК Номенклатура,
	|	ПриходнаяНакладнаяДопРасходы.Услуга.Наименование КАК Содержание,
	|	ПриходнаяНакладнаяДопРасходы.Количество КАК Количество,
	|	ПриходнаяНакладнаяДопРасходы.Цена КАК Цена,
	|	ПриходнаяНакладнаяДопРасходы.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ПриходнаяНакладнаяДопРасходы.Ссылка.ВариантРасчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаНДС.БезНДС)
	|			ТОГДА ""БезНДС""
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПриходнаяНакладнаяДопРасходы.СтавкаНДС.ПроцентНДС = 20
	|						ИЛИ ПриходнаяНакладнаяДопРасходы.СтавкаНДС.ПроцентНДС = 18
	|					ТОГДА ""НДС20""
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ПриходнаяНакладнаяДопРасходы.СтавкаНДС.ПроцентНДС = 10
	|							ТОГДА ""НДС10""
	|						ИНАЧЕ ""БезНДС""
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ПриходнаяНакладнаяДопРасходы.Ссылка.ВариантРасчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаНДС.БезНДС)
	|			ТОГДА 0
	|		ИНАЧЕ ПриходнаяНакладнаяДопРасходы.СуммаНДС
	|	КОНЕЦ КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА ПриходнаяНакладнаяДопРасходы.ОтноситьНаПрихСумму = ЛОЖЬ
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоДопРасходы
	|ИЗ
	|	Документ.ПриходнаяНакладная.ДопРасходы КАК ПриходнаяНакладнаяДопРасходы
	|ГДЕ
	|	ПриходнаяНакладнаяДопРасходы.Ссылка = &Ссылка
	|	И ПриходнаяНакладнаяДопРасходы.Количество > 0
	|	И ВЫБОР
	|			КОГДА &ЭтоНТТ
	|				ТОГДА ПриходнаяНакладнаяДопРасходы.ОтноситьНаПрихСумму = ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";

	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	Запрос.УстановитьПараметр("ЭтоНТТ", ЭтоНТТ(ДанныеИБ.Склад, ДанныеИБ.Дата));
	ТаблицаУслуги = Запрос.Выполнить().Выгрузить();

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ИсточникДанных.Номенклатура КАК Номенклатура,
	|	ИсточникДанных.ПризнакДвижения КАК ПризнакДвижения,
	|	СУММА(ИсточникДанных.Количество) КАК Количество,
	|	СУММА(ИсточникДанных.ПриходнаяСуммаВРеглВал) КАК Сумма,
	|	ИсточникДанных.ПриходнаяСуммаВРеглВал - ИсточникДанных.ПриходнаяСуммаБезНДСВРеглВал КАК СуммаНДС
	|ПОМЕСТИТЬ ДвиженияДокумента
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Регистратор = &Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсточникДанных.Номенклатура,
	|	ИсточникДанных.ПризнакДвижения,
	|	ИсточникДанных.Регистратор,
	|	ИсточникДанных.ПриходнаяСуммаВРеглВал - ИсточникДанных.ПриходнаяСуммаБезНДСВРеглВал
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПризнакДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДвиженияДокумента.Номенклатура КАК Номенклатура,
	|	ДвиженияДокумента.Сумма КАК Сумма,
	|	ДвиженияДокумента.СуммаНДС КАК СуммаНДС
	|ПОМЕСТИТЬ ДопРасходы
	|ИЗ
	|	ДвиженияДокумента КАК ДвиженияДокумента
	|ГДЕ
	|	ДвиженияДокумента.ПризнакДвижения = ЗНАЧЕНИЕ(Перечисление.ПризнакиДвижения.НачислениеДопРасходов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДвиженияДокумента.Номенклатура КАК Номенклатура,
	|	ДвиженияДокумента.Количество КАК Количество,
	|	ДвиженияДокумента.Сумма КАК Сумма
	|ПОМЕСТИТЬ ОстальныеДвижения
	|ИЗ
	|	ДвиженияДокумента КАК ДвиженияДокумента
	|ГДЕ
	|	ДвиженияДокумента.ПризнакДвижения <> ЗНАЧЕНИЕ(Перечисление.ПризнакиДвижения.НачислениеДопРасходов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДопРасходы.Номенклатура КАК Номенклатура,
	|	ДопРасходы.Сумма КАК Сумма,
	|	ЕСТЬNULL(ОстальныеДвижения.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(ОстальныеДвижения.Сумма, 0) КАК СтоимостьТоваров,
	|	ДопРасходы.СуммаНДС КАК СуммаНДС
	|ИЗ
	|	ДопРасходы КАК ДопРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстальныеДвижения КАК ОстальныеДвижения
	|		ПО ДопРасходы.Номенклатура = ОстальныеДвижения.Номенклатура";

	Запрос.УстановитьПараметр("Регистратор", ДанныеИБ.Ссылка);
	ТаблицаДопРасходы = Запрос.Выполнить().Выгрузить();

	Если ЭтоНТТ(ДанныеИБ.Склад, ДанныеИБ.Дата) Тогда  
		Если ТаблицаДопРасходы.Количество() > 0 Тогда   
			ТаблицаДопРасходы.Свернуть(, "Сумма, СуммаНДС");  
			Если ТаблицаТовары.Количество() > 0 Тогда  
				ТаблицаТовары[0].СуммаНДС = ТаблицаТовары[0].СуммаНДС + ТаблицаДопРасходы[0].СуммаНДС;
				ТаблицаТовары[0].Сумма = ТаблицаТовары[0].Сумма + ТаблицаДопРасходы[0].Сумма;
				Если ТаблицаТовары[0].Количество <> 0 Тогда 
					ТаблицаТовары[0].Цена = ТаблицаТовары[0].Сумма / ТаблицаТовары[0].Количество; 
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
		ТаблицаДопРасходы.Очистить();
	Иначе
		Если ТаблицаДопРасходы.Количество() > 0 Тогда
			ТаблицаДопРасходы.Колонки.Добавить("ДокументПоступления", Новый ОписаниеТипов("Структура"));
			ИнструкцияКонвертации = Новый Структура("Значение, ИмяПКО");
			ИнструкцияКонвертации.Значение = ДанныеИБ.Ссылка;
			ИнструкцияКонвертации.ИмяПКО = "ПриходнаяНакладная";
			Для Каждого СтрокаТаблицы Из ТаблицаДопРасходы Цикл
				СтрокаТаблицы.ДокументПоступления = ИнструкцияКонвертации;
			КонецЦикла;    
		КонецЕсли;	
	КонецЕсли;

	ТаблицаДопРеквизитов = Новый ТаблицаЗначений;
	ТаблицаДопРеквизитов.Колонки.Добавить("Свойство");
	ТаблицаДопРеквизитов.Колонки.Добавить("ЗначениеСвойства");

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Номер ТП7";
	НоваяСтрока.ЗначениеСвойства = ДанныеИБ.Номер;

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Вид документа ТП7";
	НоваяСтрока.ЗначениеСвойства = "Поступление товаров и услуг";

	Если ТаблицаТовары.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("Товары", ТаблицаТовары);
	КонецЕсли;	
	Если ТаблицаУслуги.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("Услуги", ТаблицаУслуги);
	КонецЕсли;	
	Если ТаблицаДопРасходы.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("РасшифровкаДопРасходов", ТаблицаДопРасходы);
	КонецЕсли;	
	ДанныеXDTO.КлючевыеСвойства.Вставить("Номер", НомерДокумента);
	ДанныеXDTO.Вставить("ВидОперации", ВидОперации);
	ДанныеXDTO.Вставить("ВалютаВзаиморасчетов", ВалютаВзаиморасчетов);
	ДанныеXDTO.Вставить("Подразделение", Подразделение);
	ДанныеXDTO.Вставить("СуммаВключаетНДС", СуммаВключаетНДС);   
	ДанныеXDTO.Вставить("Налогообложение", Налогообложение);  
	Если КомпонентыОбмена.УзелКорреспондента.ВыгружатьНомерДокумента Тогда 
		ДанныеXDTO.Вставить("ДополнительныеРеквизиты", ТаблицаДопРеквизитов);
	КонецЕсли;    

	Если ДанныеИБ.Договор.Владелец = Справочники.Контрагенты.РозничныйПокупатель Тогда  
		Если ДанныеXDTO.Свойство("Договор") Тогда
			ДанныеXDTO.Договор.Организация = ДанныеXDTO.КлючевыеСвойства.Организация; 
			ДанныеXDTO.Договор.ВидДоговора = "СПоставщиком";   
			ДанныеXDTO.Договор.Наименование = "Основной договор";
		КонецЕсли;	
	КонецЕсли;
	
	#Вставка
	Если ДанныеXDTO.Свойство("Договор") И Не ЗначениеЗаполнено(ДанныеXDTO.Договор) Тогда
		ДанныеXDTO.Договор.Организация = ДанныеXDTO.КлючевыеСвойства.Организация;
	КонецЕсли;
	#КонецВставки

	Если Не ЗначениеЗаполнено(ДанныеИБ.КурсВзаиморасчетов) Тогда
		ДанныеXDTO.Вставить("КурсВзаиморасчетов", 1);  
	КонецЕсли;	
	Если Не ЗначениеЗаполнено(ДанныеИБ.КратностьВзаиморасчетов) Тогда
		ДанныеXDTO.Вставить("КратностьВзаиморасчетов", 1);  
	КонецЕсли;
КонецПроцедуры

&ИзменениеИКонтроль("ПКО_Списание_ПриОтправкеДанных")
Процедура ИО_ПКО_Списание_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	НомерБезПрефикса = Прав(ДанныеИБ.Номер, 6);
	НомерДокумента = КомпонентыОбмена.УзелКорреспондента.ПрефиксНомераДокументов + "СТ-" + НомерБезПрефикса;

	Если ЗначениеЗаполнено(ДанныеИБ.Фирма) Тогда
		Организация = ДанныеИБ.Фирма;
	Иначе
		Организация = КомпонентыОбмена.УзелКорреспондента.Организация;
	КонецЕсли;	

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.ЯвляетсяПлательщикомНДС КАК ЯвляетсяПлательщикомНДС
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&Период, ) КАК УчетнаяПолитикаОрганизацийСрезПоследних
	|ГДЕ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.Организация = &Организация";

	Запрос.УстановитьПараметр("Период", ДанныеИБ.Дата);
	Запрос.УстановитьПараметр("Организация", Организация);

	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если Выборка.ЯвляетсяПлательщикомНДС Тогда
			Налогообложение = "ПродажаОблагаетсяНДС";
		Иначе
			Налогообложение = "ПродажаНеОблагаетсяНДС";
		КонецЕсли;	
	Иначе
		Налогообложение = "ПродажаОблагаетсяНДС";
	КонецЕсли;	

	Если ЗначениеЗаполнено(ДанныеИБ.Склад.Подразделение) Тогда 
		Подразделение = ДанныеИБ.Склад.Подразделение;
	Иначе
		Подразделение = КомпонентыОбмена.УзелКорреспондента.Подразделение;
	КонецЕсли;

	ТаблицаТоварыПромежуточная = Запрос_Списание_Товары(ДанныеИБ.Ссылка);

	ТаблицаТоварыПромежуточная.Колонки.Добавить("НомерГТД");     
	Если КомпонентыОбмена.УзелКорреспондента.ВыгружатьТаруКакВозвратнуюТару Тогда
		ТаблицаТоварыПромежуточная.Колонки.Добавить("Свертка");   
	КонецЕсли;	

	ТаблицаТовары = ТаблицаТоварыПромежуточная.СкопироватьКолонки();

	ТаблицаПрослеживаемости = ДанныеИБ.Ссылка.Прослеживаемости.Выгрузить();

	Для Каждого СторокаТаблицы Из ТаблицаТоварыПромежуточная Цикл    

		Если КомпонентыОбмена.УзелКорреспондента.ВыгружатьТаруКакВозвратнуюТару Тогда   
			Если СторокаТаблицы.Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Тара Тогда  
				СторокаТаблицы.ТипЗапасов = "ВозвратнаяТара";  
				СторокаТаблицы.Свертка = Ложь;
			Иначе
				СторокаТаблицы.Свертка = Истина;
			КонецЕсли;
		КонецЕсли; 

		СуммаПоПозиции = СторокаТаблицы.Сумма;
		НарастающийИтогСумма = 0;
		КоличествоПоПозиции = СторокаТаблицы.Количество; 
		УбывающийИтогКоличество = СторокаТаблицы.Количество;

		Если СторокаТаблицы.ПрослеживаемыйТовар = Истина Тогда
			СтрокиПрослеживаемости = ТаблицаПрослеживаемости.НайтиСтроки(Новый Структура("УникальныйНомерСтрокиДокумента", СторокаТаблицы.УникальныйНомерСтрокиДокумента));

			Для Каждого СтрокаТаблицыПрослежеваемости Из СтрокиПрослеживаемости Цикл

				Если СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0 Тогда
					Продолжить;
				КонецЕсли;	
				Если УбывающийИтогКоличество = 0 Тогда
					Прервать;
				КонецЕсли;	
				Если УбывающийИтогКоличество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					УбывающийИтогКоличество = 0;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
				ИначеЕсли УбывающийИтогКоличество > СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					УбывающийИтогКоличество = УбывающийИтогКоличество - СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
				ИначеЕсли УбывающийИтогКоличество < СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда	
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = УбывающийИтогКоличество;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = СтрокаТаблицыПрослежеваемости.КоличествоБазовое - УбывающийИтогКоличество; 
					УбывающийИтогКоличество = 0;
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
				КонецЕсли;
			КонецЦикла;	
		Иначе	
			НоваяСтрока = ТаблицаТовары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
			#Удаление
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СторокаТаблицы.ГТД, СторокаТаблицы.ГТД.НомерГТД, СторокаТаблицы.ГТД.СтранаПроисхождения, СторокаТаблицы.ГТД.ЭтоРНПТ)); 
			#КонецУдаления
			#Вставка
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ," 
													,?(СторокаТаблицы.ГТД = Null, Справочники.ГТД.ПустаяСсылка(), СторокаТаблицы.ГТД)
													,?(СторокаТаблицы.ГТД = Null, "", СторокаТаблицы.ГТД.НомерГТД), 
													,?(СторокаТаблицы.ГТД = Null, Справочники.СтраныМира.ПустаяСсылка(), СторокаТаблицы.ГТД.СтранаПроисхождения)
													,?(СторокаТаблицы.ГТД = Null, Ложь, СторокаТаблицы.ГТД.ЭтоРНПТ)));
			#КонецВставки
		КонецЕсли;	
	КонецЦикла;	

	Если КомпонентыОбмена.УзелКорреспондента.СворачиватьТЧДокументовПоТоварамИзСтавокНДС Или ЭтоНТТ(ДанныеИБ.Склад, ДанныеИБ.Дата) Тогда
		КолонкиГруппировок = "Номенклатура, ЕдиницаИзмерения, ТипЗапасов";
		КолонкиСуммирования = "Количество, Цена, Сумма";
		ТаблицаТовары = ПроизвестиСверткуКоллекцииОбъектовПоНоменклатуре(ТаблицаТовары, КолонкиГруппировок, КолонкиСуммирования, "Списание", Неопределено);
	КонецЕсли;

	ТаблицаДопРеквизитов = Новый ТаблицаЗначений;
	ТаблицаДопРеквизитов.Колонки.Добавить("Свойство");
	ТаблицаДопРеквизитов.Колонки.Добавить("ЗначениеСвойства");

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Номер ТП7";
	НоваяСтрока.ЗначениеСвойства = ДанныеИБ.Номер;

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Вид документа ТП7";
	НоваяСтрока.ЗначениеСвойства = "Списание";

	Если КомпонентыОбмена.УзелКорреспондента.ВыгружатьНомерДокумента Тогда 
		ДанныеXDTO.Вставить("ДополнительныеРеквизиты", ТаблицаДопРеквизитов);
	КонецЕсли;

	Если ТаблицаТовары.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("Товары", ТаблицаТовары);
	КонецЕсли;	
	ДанныеXDTO.КлючевыеСвойства.Вставить("Номер", НомерДокумента);
	ДанныеXDTO.КлючевыеСвойства.Вставить("Организация", Организация);
	ДанныеXDTO.Вставить("Подразделение", Подразделение);
	ДанныеXDTO.Вставить("Налогообложение", Налогообложение);
КонецПроцедуры

&ИзменениеИКонтроль("ПКО_ВозвратКомитенту_ПриОтправкеДанных")
Процедура ИО_ПКО_ВозвратКомитенту_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	НомерБезПрефикса = Прав(ДанныеИБ.Номер, 6);
	НомерДокумента = КомпонентыОбмена.УзелКорреспондента.ПрефиксНомераДокументов + "ВК-" + НомерБезПрефикса;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.ЯвляетсяПлательщикомНДС КАК ЯвляетсяПлательщикомНДС
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&Период, ) КАК УчетнаяПолитикаОрганизацийСрезПоследних
	|ГДЕ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.Организация = &Организация";

	Запрос.УстановитьПараметр("Период", ДанныеИБ.Дата);
	Запрос.УстановитьПараметр("Организация", ДанныеИБ.Фирма);

	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если Выборка.ЯвляетсяПлательщикомНДС Тогда
			Налогообложение = "ПродажаОблагаетсяНДС";
		Иначе
			Налогообложение = "ПродажаНеОблагаетсяНДС";
		КонецЕсли;	
	Иначе
		Налогообложение = "ПродажаОблагаетсяНДС";
	КонецЕсли;	

	Если ЗначениеЗаполнено(ДанныеИБ.Склад.Подразделение) Тогда 
		Подразделение = ДанныеИБ.Склад.Подразделение;
	Иначе
		Подразделение = КомпонентыОбмена.УзелКорреспондента.Подразделение;
	КонецЕсли;

	Если ТипЗнч(ДанныеИБ.Грузоотправитель) = Тип("СправочникСсылка.Контрагенты") Тогда
		Грузоотправитель = ДанныеИБ.Грузоотправитель;
	Иначе
		Грузоотправитель = Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;

	Если ТипЗнч(ДанныеИБ.Грузополучатель) = Тип("СправочникСсылка.Контрагенты") Тогда
		Грузополучатель = ДанныеИБ.Грузополучатель;
	Иначе
		Грузополучатель = Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;	

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВозвратКомитентуТовары.Номенклатура КАК Номенклатура,
	|	ВозвратКомитентуТовары.Номенклатура.БазоваяЕдиницаПоКлассификатору КАК ЕдиницаИзмерения,
	|	ВозвратКомитентуТовары.Количество * ВозвратКомитентуТовары.Коэффициент КАК Количество,
	|	ВозвратКомитентуТовары.ПриходнаяЦена КАК Цена,
	|	ВозвратКомитентуТовары.ПриходнаяСумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ВозвратКомитентуТовары.Ссылка.ВариантРасчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаНДС.БезНДС)
	|			ТОГДА ""БезНДС""
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВозвратКомитентуТовары.СтавкаНДС.ПроцентНДС = 20
	|						ИЛИ ВозвратКомитентуТовары.СтавкаНДС.ПроцентНДС = 18
	|					ТОГДА ""НДС20""
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ВозвратКомитентуТовары.СтавкаНДС.ПроцентНДС = 10
	|							ТОГДА ""НДС10""
	|						ИНАЧЕ ""БезНДС""
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ВозвратКомитентуТовары.Ссылка.ВариантРасчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаНДС.БезНДС)
	|			ТОГДА 0
	|		ИНАЧЕ ВозвратКомитентуТовары.СуммаНДС
	|	КОНЕЦ КАК СуммаНДС,
	|	ВозвратКомитентуТовары.ГТД КАК ГТД,
	|	ВозвратКомитентуТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	""КомиссионныеТовары"" КАК ТипЗапасов,
	|	ВозвратКомитентуТовары.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ВозвратКомитентуТовары.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента,
	|	ВозвратКомитентуТовары.Номенклатура.ЕдиницаПрослеживаемости КАК ЕдиницаИзмеренияПрослеживаемости,
	|	ВозвратКомитентуТовары.Номенклатура.ПодлежитПрослеживаемости КАК ПрослеживаемыйТовар,
	|	0 КАК КоличествоРНПТ
	|ИЗ
	|	Документ.ВозвратКомитенту.Товары КАК ВозвратКомитентуТовары
	|ГДЕ
	|	ВозвратКомитентуТовары.Ссылка = &Ссылка
	|	И ВозвратКомитентуТовары.Количество > 0";

	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	ТаблицаТоварыПромежуточная = Запрос.Выполнить().Выгрузить(); 

	ТаблицаТоварыПромежуточная.Колонки.Добавить("НомерГТД");

	ТаблицаТовары = ТаблицаТоварыПромежуточная.СкопироватьКолонки();

	ТаблицаПрослеживаемости = ДанныеИБ.Ссылка.Прослеживаемости.Выгрузить();

	Для Каждого СторокаТаблицы Из ТаблицаТоварыПромежуточная Цикл

		СуммаПоПозиции = СторокаТаблицы.Сумма;
		НДСПоПозиции = СторокаТаблицы.СуммаНДС;
		НарастающийИтогНДС = 0;
		НарастающийИтогСумма = 0;
		КоличествоПоПозиции = СторокаТаблицы.Количество; 
		УбывающийИтогКоличество = СторокаТаблицы.Количество;

		Если СторокаТаблицы.ПрослеживаемыйТовар = Истина Тогда
			СтрокиПрослеживаемости = ТаблицаПрослеживаемости.НайтиСтроки(Новый Структура("УникальныйНомерСтрокиДокумента", СторокаТаблицы.УникальныйНомерСтрокиДокумента));

			Для Каждого СтрокаТаблицыПрослежеваемости Из СтрокиПрослеживаемости Цикл

				Если СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0 Тогда
					Продолжить;
				КонецЕсли;	
				Если УбывающийИтогКоличество = 0 Тогда
					Прервать;
				КонецЕсли;	
				Если УбывающийИтогКоличество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					УбывающийИтогКоличество = 0;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
					Если НарастающийИтогНДС <> НДСПоПозиции Тогда
						ДельтаНДС = НДСПоПозиции - НарастающийИтогНДС;
						НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2) + ДельтаНДС; 
					КонецЕсли;	
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
				ИначеЕсли УбывающийИтогКоличество > СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					УбывающийИтогКоличество = УбывающийИтогКоличество - СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
				ИначеЕсли УбывающийИтогКоличество < СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда	
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = УбывающийИтогКоличество;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = СтрокаТаблицыПрослежеваемости.КоличествоБазовое - УбывающийИтогКоличество; 
					УбывающийИтогКоличество = 0;
					Если НарастающийИтогНДС <> НДСПоПозиции Тогда
						ДельтаНДС = НДСПоПозиции - НарастающийИтогНДС;
						НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2) + ДельтаНДС; 
					КонецЕсли;	
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
				КонецЕсли;
			КонецЦикла;	
		Иначе	
			НоваяСтрока = ТаблицаТовары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
			#Удаление
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СторокаТаблицы.ГТД, СторокаТаблицы.ГТД.НомерГТД, СторокаТаблицы.ГТД.СтранаПроисхождения, СторокаТаблицы.ГТД.ЭтоРНПТ)); 
			#КонецУдаления
			#Вставка
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ," 
													,?(СторокаТаблицы.ГТД = Null, Справочники.ГТД.ПустаяСсылка(), СторокаТаблицы.ГТД)
													,?(СторокаТаблицы.ГТД = Null, "", СторокаТаблицы.ГТД.НомерГТД), 
													,?(СторокаТаблицы.ГТД = Null, Справочники.СтраныМира.ПустаяСсылка(), СторокаТаблицы.ГТД.СтранаПроисхождения)
													,?(СторокаТаблицы.ГТД = Null, Ложь, СторокаТаблицы.ГТД.ЭтоРНПТ)));
			#КонецВставки
		КонецЕсли;	
	КонецЦикла;	

	Если КомпонентыОбмена.УзелКорреспондента.СворачиватьТЧДокументовПоТоварамИзСтавокНДС Или ЭтоНТТ(ДанныеИБ.Склад, ДанныеИБ.Дата) Тогда
		КолонкиГруппировок = "Номенклатура, ЕдиницаИзмерения, СтавкаНДС, ТипЗапасов";
		КолонкиСуммирования = "Количество, Цена, Сумма, СуммаНДС";
		ТаблицаТовары = ПроизвестиСверткуКоллекцииОбъектовПоНоменклатуре(ТаблицаТовары, КолонкиГруппировок, КолонкиСуммирования, "ВозвратКомитенту", Неопределено);
	КонецЕсли;

	Если ДанныеИБ.ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.ВСумме Тогда
		СуммаВключаетНДС = Истина;
	Иначе
		СуммаВключаетНДС = Ложь;
	КонецЕсли;

	Если ТипЗнч(ДанныеИБ.ДокументОснование) = Тип("ДокументСсылка.ПриходнаяНакладнаяРеализации") Тогда
		ДанныеXDTO.Вставить("ДокументПоступления", ДанныеИБ.ДокументОснование);  
	КонецЕсли; 

	ТаблицаДопРеквизитов = Новый ТаблицаЗначений;
	ТаблицаДопРеквизитов.Колонки.Добавить("Свойство");
	ТаблицаДопРеквизитов.Колонки.Добавить("ЗначениеСвойства");

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Номер ТП7";
	НоваяСтрока.ЗначениеСвойства = ДанныеИБ.Номер;

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Вид документа ТП7";
	НоваяСтрока.ЗначениеСвойства = "Возврат комитенту";

	ДанныеXDTO.Вставить("ВидОперации", "ВозвратКомитенту");  
	ДанныеXDTO.КлючевыеСвойства.Вставить("Номер", НомерДокумента);
	Если ТаблицаТовары.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("Товары", ТаблицаТовары);
	КонецЕсли;	
	ДанныеXDTO.Вставить("СуммаВключаетНДС", СуммаВключаетНДС);
	ДанныеXDTO.Вставить("Налогообложение", Налогообложение);  
	ДанныеXDTO.Вставить("Подразделение", Подразделение);  
	ДанныеXDTO.Вставить("Грузоотправитель", Грузоотправитель);
	ДанныеXDTO.Вставить("Грузополучатель", Грузополучатель);

	Если КомпонентыОбмена.УзелКорреспондента.ВыгружатьНомерДокумента Тогда 
		ДанныеXDTO.Вставить("ДополнительныеРеквизиты", ТаблицаДопРеквизитов);
	КонецЕсли;   

	Если ДанныеИБ.Договор.Владелец = Справочники.Контрагенты.РозничныйПокупатель Тогда  
		Структура = Новый Структура("Организация, ВидДоговора, Контрагент", ДанныеИБ.Фирма, Перечисления.ВидыДоговоровКонтрагентов.СПокупателем,  Справочники.Контрагенты.РозничныйПокупатель);
		ДанныеXDTO.КлючевыеСвойства.Вставить("Договор", Структура);
	Иначе
		ДанныеXDTO.КлючевыеСвойства.Вставить("Договор", ДанныеИБ.Договор);
	КонецЕсли;

	Если Не ЗначениеЗаполнено(ДанныеИБ.КурсВзаиморасчетов) Тогда
		ДанныеXDTO.Вставить("КурсВзаиморасчетов", 1);  
	КонецЕсли;	
	Если Не ЗначениеЗаполнено(ДанныеИБ.КратностьВзаиморасчетов) Тогда
		ДанныеXDTO.Вставить("КратностьВзаиморасчетов", 1);  
	КонецЕсли;	

	Если ДанныеИБ.Договор.Владелец = Справочники.Контрагенты.РозничныйПокупатель Тогда  
		Если ДанныеXDTO.Свойство("Договор") Тогда
			ДанныеXDTO.Договор.Организация = ДанныеXDTO.КлючевыеСвойства.Организация; 
			ДанныеXDTO.Договор.ВидДоговора = "СПоставщиком";   
			ДанныеXDTO.Договор.Наименование = "Основной договор";
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

&ИзменениеИКонтроль("ПКО_ВозвратОтКомиссионера_ПриОтправкеДанных")
Процедура ИО_ПКО_ВозвратОтКомиссионера_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	НомерБезПрефикса = Прав(ДанныеИБ.Номер, 6);
	НомерДокумента = КомпонентыОбмена.УзелКорреспондента.ПрефиксНомераДокументов + "ВК-" + НомерБезПрефикса;

	ВидОперации = "ВозвратОтКомиссионера"; 

	Если ЗначениеЗаполнено(ДанныеИБ.Склад.Подразделение) Тогда 
		Подразделение = ДанныеИБ.Склад.Подразделение;
	Иначе
		Подразделение = КомпонентыОбмена.УзелКорреспондента.Подразделение;
	КонецЕсли;  

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.ЯвляетсяПлательщикомНДС КАК ЯвляетсяПлательщикомНДС
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&Период, ) КАК УчетнаяПолитикаОрганизацийСрезПоследних
	|ГДЕ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.Организация = &Организация";

	Запрос.УстановитьПараметр("Период", ДанныеИБ.Дата);
	Запрос.УстановитьПараметр("Организация", ДанныеИБ.Фирма);

	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если Выборка.ЯвляетсяПлательщикомНДС Тогда
			Налогообложение = "ОблагаетсяНДС";
			ВозвратПодДеятельность = "ОблагаетсяНДС";
		Иначе
			Налогообложение = "НеОблагаетсяНДС";
			ВозвратПодДеятельность = "НеОблагаетсяНДС";
		КонецЕсли;	
	Иначе
		Налогообложение = "ОблагаетсяНДС";
		ВозвратПодДеятельность = "ОблагаетсяНДС";
	КонецЕсли;	

	Если ЗначениеЗаполнено(ДанныеИБ.ДокументОснование) Тогда
		Если ТипЗнч(ДанныеИБ.ДокументОснование) = Тип("ДокументСсылка.РасходнаяНакладнаяРеализации") Тогда
			ИнструкцияКонвертации = Новый Структура("Значение, ИмяПКО");
			ИнструкцияКонвертации.Значение = ДанныеИБ.ДокументОснование;
			ИнструкцияКонвертации.ИмяПКО = "РасходнаяНакладнаяРеализации";
			ДанныеXDTO.Вставить("ДокументРеализации", ИнструкцияКонвертации);
		КонецЕсли;	
	КонецЕсли;	

	Если ЗначениеЗаполнено(ДанныеИБ.ДокументОснование) Тогда 
		ВыгружатьСебестоимость = Ложь;
	Иначе
		ВыгружатьСебестоимость = Истина;
	КонецЕсли;		             

	ТаблицаТоварыПромежуточная = Запрос_ВозвратОтКомиссионера_Товары(ДанныеИБ.Ссылка, ВозвратПодДеятельность, ВыгружатьСебестоимость);   

	ТаблицаТоварыПромежуточная.Колонки.Добавить("НомерГТД");

	ТаблицаТовары = ТаблицаТоварыПромежуточная.СкопироватьКолонки();

	ТаблицаПрослеживаемости = ДанныеИБ.Ссылка.Прослеживаемости.Выгрузить();

	Для Каждого СторокаТаблицы Из ТаблицаТоварыПромежуточная Цикл

		СуммаПоПозиции = СторокаТаблицы.Сумма;
		НДСПоПозиции = СторокаТаблицы.СуммаНДС;
		НарастающийИтогНДС = 0;
		НарастающийИтогСумма = 0;
		КоличествоПоПозиции = СторокаТаблицы.Количество; 
		УбывающийИтогКоличество = СторокаТаблицы.Количество;

		Если СторокаТаблицы.ПрослеживаемыйТовар = Истина Тогда
			СтрокиПрослеживаемости = ТаблицаПрослеживаемости.НайтиСтроки(Новый Структура("УникальныйНомерСтрокиДокумента", СторокаТаблицы.УникальныйНомерСтрокиДокумента));

			Для Каждого СтрокаТаблицыПрослежеваемости Из СтрокиПрослеживаемости Цикл

				Если СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0 Тогда
					Продолжить;
				КонецЕсли;	
				Если УбывающийИтогКоличество = 0 Тогда
					Прервать;
				КонецЕсли;	
				Если УбывающийИтогКоличество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					УбывающийИтогКоличество = 0;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
					Если НарастающийИтогНДС <> НДСПоПозиции Тогда
						ДельтаНДС = НДСПоПозиции - НарастающийИтогНДС;
						НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2) + ДельтаНДС; 
					КонецЕсли;	
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
				ИначеЕсли УбывающийИтогКоличество > СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					УбывающийИтогКоличество = УбывающийИтогКоличество - СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
				ИначеЕсли УбывающийИтогКоличество < СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда	
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = УбывающийИтогКоличество;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = СтрокаТаблицыПрослежеваемости.КоличествоБазовое - УбывающийИтогКоличество; 
					УбывающийИтогКоличество = 0;
					Если НарастающийИтогНДС <> НДСПоПозиции Тогда
						ДельтаНДС = НДСПоПозиции - НарастающийИтогНДС;
						НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2) + ДельтаНДС; 
					КонецЕсли;	
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
				КонецЕсли;
			КонецЦикла;	
		Иначе	
			НоваяСтрока = ТаблицаТовары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
			#Удаление
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СторокаТаблицы.ГТД, СторокаТаблицы.ГТД.НомерГТД, СторокаТаблицы.ГТД.СтранаПроисхождения, СторокаТаблицы.ГТД.ЭтоРНПТ)); 
			#КонецУдаления
			#Вставка
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ," 
													,?(СторокаТаблицы.ГТД = Null, Справочники.ГТД.ПустаяСсылка(), СторокаТаблицы.ГТД)
													,?(СторокаТаблицы.ГТД = Null, "", СторокаТаблицы.ГТД.НомерГТД), 
													,?(СторокаТаблицы.ГТД = Null, Справочники.СтраныМира.ПустаяСсылка(), СторокаТаблицы.ГТД.СтранаПроисхождения)
													,?(СторокаТаблицы.ГТД = Null, Ложь, СторокаТаблицы.ГТД.ЭтоРНПТ)));
			#КонецВставки
		КонецЕсли;	
	КонецЦикла;	

	Если КомпонентыОбмена.УзелКорреспондента.СворачиватьТЧДокументовПоТоварамИзСтавокНДС Или ЭтоНТТ(ДанныеИБ.Склад, ДанныеИБ.Дата) Тогда
		КолонкиГруппировок = "Номенклатура, ЕдиницаИзмерения, СтавкаНДС, ТипЗапасов, ВозвратПодДеятельность";
		КолонкиСуммирования = "Количество, Цена, Сумма, СуммаНДС, Себестоимость";
		ТаблицаТовары = ПроизвестиСверткуКоллекцииОбъектовПоНоменклатуре(ТаблицаТовары, КолонкиГруппировок, КолонкиСуммирования, "ВозвратОтКомиссионера", Неопределено);
	КонецЕсли;

	ТаблицаДопРеквизитов = Новый ТаблицаЗначений;
	ТаблицаДопРеквизитов.Колонки.Добавить("Свойство");
	ТаблицаДопРеквизитов.Колонки.Добавить("ЗначениеСвойства");

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Номер ТП7";
	НоваяСтрока.ЗначениеСвойства = ДанныеИБ.Номер;

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Вид документа ТП7";
	НоваяСтрока.ЗначениеСвойства = "Возврат от комиссионера";


	Если ТаблицаТовары.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("Товары", ТаблицаТовары);  
	КонецЕсли;	
	ДанныеXDTO.Вставить("ВидОперации", ВидОперации);  
	ДанныеXDTO.КлючевыеСвойства.Вставить("Номер", НомерДокумента);
	ДанныеXDTO.Вставить("Подразделение", Подразделение);
	ДанныеXDTO.Вставить("Налогообложение", Налогообложение);
	Если КомпонентыОбмена.УзелКорреспондента.ВыгружатьНомерДокумента Тогда 
		ДанныеXDTO.Вставить("ДополнительныеРеквизиты", ТаблицаДопРеквизитов);
	КонецЕсли;

	Если ДанныеИБ.Договор.Владелец = Справочники.Контрагенты.РозничныйПокупатель Тогда  
		Если ДанныеXDTO.Свойство("Договор") Тогда
			ДанныеXDTO.Договор.Организация = ДанныеXDTO.КлючевыеСвойства.Организация; 
			ДанныеXDTO.Договор.ВидДоговора = "СПокупателем";   
			ДанныеXDTO.Договор.Наименование = "Основной договор";
		КонецЕсли;	
	КонецЕсли;	

	Если Не ЗначениеЗаполнено(ДанныеИБ.КурсВзаиморасчетов) Тогда
		ДанныеXDTO.Вставить("КурсВзаиморасчетов", 1);  
	КонецЕсли;	
	Если Не ЗначениеЗаполнено(ДанныеИБ.КратностьВзаиморасчетов) Тогда
		ДанныеXDTO.Вставить("КратностьВзаиморасчетов", 1);  
	КонецЕсли;
КонецПроцедуры

&ИзменениеИКонтроль("ПКО_ВозвратОтПокупателя_ПриОтправкеДанных")
Процедура ИО_ПКО_ВозвратОтПокупателя_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	Если ЗначениеЗаполнено(ДанныеИБ.ДокументОснование) и ТипЗнч(ДанныеИБ.ДокументОснование) = Тип("ДокументСсылка.ОтчетОтдела") Тогда
		ДатаДокумента = ДанныеИБ.ДокументОснование.Дата + 1;
	Иначе
		ДатаДокумента = ДанныеИБ.Дата;
	КонецЕсли;	

	НомерБезПрефикса = Прав(ДанныеИБ.Номер, 6);
	НомерДокумента = КомпонентыОбмена.УзелКорреспондента.ПрефиксНомераДокументов + "ВП-" + НомерБезПрефикса;

	Если ДанныеИБ.ВозвратОтРозничногоПокупателя Тогда
		ВидОперации = "ВозвратОтРозничногоПокупателя"; 
	Иначе
		ВидОперации = "ВозвратОтКлиента"; 
	КонецЕсли;	

	Если ДанныеИБ.ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.ВСумме Тогда
		СуммаВключаетНДС = Истина;
	Иначе
		СуммаВключаетНДС = Ложь;
	КонецЕсли;

	Если ДанныеИБ.ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.БезНДС Тогда
		Налогообложение = "НеОблагаетсяНДС";
		ВозвратПодДеятельность = "НеОблагаетсяНДС";
	Иначе
		Налогообложение = "ОблагаетсяНДС";
		ВозвратПодДеятельность = "ОблагаетсяНДС";
	КонецЕсли;

	Если ЗначениеЗаполнено(ДанныеИБ.Склад.Подразделение) Тогда 
		Подразделение = ДанныеИБ.Склад.Подразделение;
	Иначе
		Подразделение = КомпонентыОбмена.УзелКорреспондента.Подразделение;
	КонецЕсли;

	Если ЗначениеЗаполнено(ДанныеИБ.ДокументОснование) Тогда 
		ВыгружатьСебестоимость = Ложь;
	Иначе
		ВыгружатьСебестоимость = Истина;
	КонецЕсли;		             

	ТаблицаТоварыПромежуточная = Запрос_ВозвратОтПокупателя_Товары(ДанныеИБ.Ссылка, ВозвратПодДеятельность, ВыгружатьСебестоимость); 

	ТаблицаТоварыПромежуточная.Колонки.Добавить("НомерГТД");

	ТаблицаТовары = ТаблицаТоварыПромежуточная.СкопироватьКолонки();

	ТаблицаПрослеживаемости = ДанныеИБ.Ссылка.Прослеживаемости.Выгрузить();

	Для Каждого СторокаТаблицы Из ТаблицаТоварыПромежуточная Цикл

		СуммаПоПозиции = СторокаТаблицы.Сумма;
		НДСПоПозиции = СторокаТаблицы.СуммаНДС;
		НарастающийИтогНДС = 0;
		НарастающийИтогСумма = 0;
		КоличествоПоПозиции = СторокаТаблицы.Количество; 
		УбывающийИтогКоличество = СторокаТаблицы.Количество;

		Если СторокаТаблицы.ПрослеживаемыйТовар = Истина Тогда
			СтрокиПрослеживаемости = ТаблицаПрослеживаемости.НайтиСтроки(Новый Структура("УникальныйНомерСтрокиДокумента", СторокаТаблицы.УникальныйНомерСтрокиДокумента));

			Для Каждого СтрокаТаблицыПрослежеваемости Из СтрокиПрослеживаемости Цикл

				Если СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0 Тогда
					Продолжить;
				КонецЕсли;	
				Если УбывающийИтогКоличество = 0 Тогда
					Прервать;
				КонецЕсли;	
				Если УбывающийИтогКоличество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					УбывающийИтогКоличество = 0;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
					Если НарастающийИтогНДС <> НДСПоПозиции Тогда
						ДельтаНДС = НДСПоПозиции - НарастающийИтогНДС;
						НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2) + ДельтаНДС; 
					КонецЕсли;	
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
				ИначеЕсли УбывающийИтогКоличество > СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					УбывающийИтогКоличество = УбывающийИтогКоличество - СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
				ИначеЕсли УбывающийИтогКоличество < СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда	
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = УбывающийИтогКоличество;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = СтрокаТаблицыПрослежеваемости.КоличествоБазовое - УбывающийИтогКоличество; 
					УбывающийИтогКоличество = 0;
					Если НарастающийИтогНДС <> НДСПоПозиции Тогда
						ДельтаНДС = НДСПоПозиции - НарастающийИтогНДС;
						НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2) + ДельтаНДС; 
					КонецЕсли;	
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
				КонецЕсли;
			КонецЦикла;	
		Иначе	
			НоваяСтрока = ТаблицаТовары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
			#Удаление
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СторокаТаблицы.ГТД, СторокаТаблицы.ГТД.НомерГТД, СторокаТаблицы.ГТД.СтранаПроисхождения, СторокаТаблицы.ГТД.ЭтоРНПТ)); 
			#КонецУдаления
			#Вставка
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ," 
													,?(СторокаТаблицы.ГТД = Null, Справочники.ГТД.ПустаяСсылка(), СторокаТаблицы.ГТД)
													,?(СторокаТаблицы.ГТД = Null, "", СторокаТаблицы.ГТД.НомерГТД), 
													,?(СторокаТаблицы.ГТД = Null, Справочники.СтраныМира.ПустаяСсылка(), СторокаТаблицы.ГТД.СтранаПроисхождения)
													,?(СторокаТаблицы.ГТД = Null, Ложь, СторокаТаблицы.ГТД.ЭтоРНПТ)));
			#КонецВставки
		КонецЕсли;	
	КонецЦикла;	

	Если КомпонентыОбмена.УзелКорреспондента.СворачиватьТЧДокументовПоТоварамИзСтавокНДС Или ЭтоНТТ(ДанныеИБ.Склад, ДанныеИБ.Дата) Тогда
		КолонкиГруппировок = "Номенклатура, ЕдиницаИзмерения, СтавкаНДС, ТипЗапасов, ВозвратПодДеятельность";
		КолонкиСуммирования = "Количество, Цена, Сумма, СуммаНДС, Себестоимость";
		ТаблицаТовары = ПроизвестиСверткуКоллекцииОбъектовПоНоменклатуре(ТаблицаТовары, КолонкиГруппировок, КолонкиСуммирования, "ВозвратОтПокупателя", Неопределено);
	КонецЕсли;

	Если ЗначениеЗаполнено(ДанныеИБ.ДокументОснование) Тогда
		Если ТипЗнч(ДанныеИБ.ДокументОснование) = Тип("ДокументСсылка.РасходнаяНакладная") Тогда
			ИнструкцияКонвертации = Новый Структура("Значение, ИмяПКО");
			ИнструкцияКонвертации.Значение = ДанныеИБ.ДокументОснование;
			ИнструкцияКонвертации.ИмяПКО = "РасходнаяНакладная";
			ДанныеXDTO.Вставить("ДокументРеализации", ИнструкцияКонвертации);
		ИначеЕсли ТипЗнч(ДанныеИБ.ДокументОснование) = Тип("ДокументСсылка.ОтчетОтдела") Тогда	
			ИнструкцияКонвертации = Новый Структура("Значение, ИмяПКО");  

			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	СинхронизацияДокументовСБухгалтериейСлужебный.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.СинхронизацияДокументовСБухгалтериейСлужебный КАК СинхронизацияДокументовСБухгалтериейСлужебный
			|ГДЕ
			|	СинхронизацияДокументовСБухгалтериейСлужебный.Организация = &Организация
			|	И СинхронизацияДокументовСБухгалтериейСлужебный.Документ = &Документ";

			Запрос.УстановитьПараметр("Организация", ДанныеИБ.Фирма);
			Запрос.УстановитьПараметр("Документ", ДанныеИБ.ДокументОснование);

			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				ДокументОснование = Выборка.Ссылка;
			Иначе
				ДокументОснование = Документы.СинхронизацияДокументовСБухгалтериейСлужебный.ПустаяСсылка();
			КонецЕсли;	
			ИнструкцияКонвертации.Значение = ДокументОснование;
			ИнструкцияКонвертации.ИмяПКО = "ОтчетОтдела";
			ДанныеXDTO.Вставить("ДокументРеализации", ИнструкцияКонвертации);
		КонецЕсли;
	КонецЕсли;

	ТаблицаДопРеквизитов = Новый ТаблицаЗначений;
	ТаблицаДопРеквизитов.Колонки.Добавить("Свойство");
	ТаблицаДопРеквизитов.Колонки.Добавить("ЗначениеСвойства");

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Номер ТП7";
	НоваяСтрока.ЗначениеСвойства = ДанныеИБ.Номер;

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Вид документа ТП7";
	НоваяСтрока.ЗначениеСвойства = "Возврат от покупателя";

	Если КомпонентыОбмена.УзелКорреспондента.ВыгружатьНомерДокумента Тогда 
		ДанныеXDTO.Вставить("ДополнительныеРеквизиты", ТаблицаДопРеквизитов);
	КонецЕсли;
	Если ТаблицаТовары.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("Товары", ТаблицаТовары);  
	КонецЕсли;	
	ДанныеXDTO.Вставить("ВидОперации", ВидОперации);  
	ДанныеXDTO.КлючевыеСвойства.Вставить("Номер", НомерДокумента);
	ДанныеXDTO.КлючевыеСвойства.Вставить("Дата", ДатаДокумента);
	ДанныеXDTO.Вставить("СуммаВключаетНДС", СуммаВключаетНДС);
	ДанныеXDTO.Вставить("Налогообложение", Налогообложение);
	ДанныеXDTO.Вставить("Подразделение", Подразделение);

	Если ДанныеИБ.Договор.Владелец = Справочники.Контрагенты.РозничныйПокупатель Тогда  
		Если ДанныеXDTO.Свойство("Договор") Тогда
			ДанныеXDTO.Договор.Организация = ДанныеXDTO.КлючевыеСвойства.Организация; 
			ДанныеXDTO.Договор.ВидДоговора = "СПокупателем";   
			ДанныеXDTO.Договор.Наименование = "Основной договор";
		КонецЕсли;	
	КонецЕсли;	

	Если Не ЗначениеЗаполнено(ДанныеИБ.КурсВзаиморасчетов) Тогда
		ДанныеXDTO.Вставить("КурсВзаиморасчетов", 1);  
	КонецЕсли;	
	Если Не ЗначениеЗаполнено(ДанныеИБ.КратностьВзаиморасчетов) Тогда
		ДанныеXDTO.Вставить("КратностьВзаиморасчетов", 1);  
	КонецЕсли;
КонецПроцедуры

&ИзменениеИКонтроль("ПКО_ВозвратПоставщику_ПриОтправкеДанных")
Процедура ИО_ПКО_ВозвратПоставщику_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	НомерБезПрефикса = Прав(ДанныеИБ.Номер, 6);
	НомерДокумента = КомпонентыОбмена.УзелКорреспондента.ПрефиксНомераДокументов + "ВП-" + НомерБезПрефикса;

	Если ЗначениеЗаполнено(ДанныеИБ.Склад.Подразделение) Тогда 
		Подразделение = ДанныеИБ.Склад.Подразделение;
	Иначе
		Подразделение = КомпонентыОбмена.УзелКорреспондента.Подразделение;
	КонецЕсли;

	ПодготовитьДанныеНалогообложение(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);

	Если ТипЗнч(ДанныеИБ.Грузоотправитель) = Тип("СправочникСсылка.Контрагенты") Тогда
		Грузоотправитель = ДанныеИБ.Грузоотправитель;
	Иначе
		Грузоотправитель = Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;

	Если ТипЗнч(ДанныеИБ.Грузополучатель) = Тип("СправочникСсылка.Контрагенты") Тогда
		Грузополучатель = ДанныеИБ.Грузополучатель;
	Иначе
		Грузополучатель = Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;	

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.ЯвляетсяПлательщикомНДС КАК ЯвляетсяПлательщикомНДС
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&Период, ) КАК УчетнаяПолитикаОрганизацийСрезПоследних
	|ГДЕ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.Организация = &Организация";

	Запрос.УстановитьПараметр("Период", ДанныеИБ.Дата);
	Запрос.УстановитьПараметр("Организация", ДанныеИБ.Фирма);

	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если Выборка.ЯвляетсяПлательщикомНДС Тогда
			Налогообложение = "ПродажаОблагаетсяНДС";
		Иначе
			Налогообложение = "ПродажаНеОблагаетсяНДС";
		КонецЕсли;	
	Иначе
		Налогообложение = "ПродажаОблагаетсяНДС";
	КонецЕсли;	

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВозвратПоставщикуТовары.Номенклатура КАК Номенклатура,
	|	ВозвратПоставщикуТовары.Номенклатура.БазоваяЕдиницаПоКлассификатору КАК ЕдиницаИзмерения,
	|	ВозвратПоставщикуТовары.Количество * ВозвратПоставщикуТовары.Коэффициент КАК Количество,
	|	ВЫБОР
	|		КОГДА &ЭтоНТТ
	|			ТОГДА ВозвратПоставщикуТовары.РозничнаяЦена
	|		ИНАЧЕ ВозвратПоставщикуТовары.ПриходнаяЦена
	|	КОНЕЦ КАК Цена,
	|	ВЫБОР
	|		КОГДА &ЭтоНТТ
	|			ТОГДА ВозвратПоставщикуТовары.РозничнаяСумма
	|		ИНАЧЕ ВозвратПоставщикуТовары.ПриходнаяСумма
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА ВозвратПоставщикуТовары.Ссылка.ВариантРасчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаНДС.БезНДС)
	|			ТОГДА ""БезНДС""
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВозвратПоставщикуТовары.СтавкаНДС.ПроцентНДС = 20
	|						ИЛИ ВозвратПоставщикуТовары.СтавкаНДС.ПроцентНДС = 18
	|					ТОГДА ""НДС20""
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ВозвратПоставщикуТовары.СтавкаНДС.ПроцентНДС = 10
	|							ТОГДА ""НДС10""
	|						ИНАЧЕ ""БезНДС""
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ВозвратПоставщикуТовары.Ссылка.ВариантРасчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаНДС.БезНДС)
	|			ТОГДА 0
	|		ИНАЧЕ ВозвратПоставщикуТовары.СуммаНДС
	|	КОНЕЦ КАК СуммаНДС,
	|	ВозвратПоставщикуТовары.ГТД КАК ГТД,
	|	ВозвратПоставщикуТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВЫБОР
	|		КОГДА ВозвратПоставщикуТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Тара)
	|				И &ВыгружатьТару
	|			ТОГДА ""ВозвратнаяТара""
	|		ИНАЧЕ ""СобственныеТовары""
	|	КОНЕЦ КАК ТипЗапасов,
	|	ВЫБОР
	|		КОГДА ВозвратПоставщикуТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Тара)
	|				И &ВыгружатьТару
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Свертка,
	|	ВозвратПоставщикуТовары.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ВозвратПоставщикуТовары.Номенклатура.ЕдиницаПрослеживаемости КАК ЕдиницаИзмеренияПрослеживаемости,
	|	ВозвратПоставщикуТовары.Номенклатура.ПодлежитПрослеживаемости КАК ПрослеживаемыйТовар,
	|	0 КАК КоличествоРНПТ,
	|	ВозвратПоставщикуТовары.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента
	|ИЗ
	|	Документ.ВозвратПоставщику.Товары КАК ВозвратПоставщикуТовары
	|ГДЕ
	|	ВозвратПоставщикуТовары.Ссылка = &Ссылка
	|	И ВозвратПоставщикуТовары.Количество > 0";

	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	Запрос.УстановитьПараметр("ЭтоНТТ", ЭтоНТТ(ДанныеИБ.Склад, ДанныеИБ.Дата));
	Запрос.УстановитьПараметр("ВыгружатьТару", КомпонентыОбмена.УзелКорреспондента.ВыгружатьТаруКакВозвратнуюТару);
	ТаблицаТоварыПромежуточная = Запрос.Выполнить().Выгрузить();   

	ТаблицаТоварыПромежуточная.Колонки.Добавить("НомерГТД");

	ТаблицаТовары = ТаблицаТоварыПромежуточная.СкопироватьКолонки();

	ТаблицаПрослеживаемости = ДанныеИБ.Ссылка.Прослеживаемости.Выгрузить();

	Для Каждого СторокаТаблицы Из ТаблицаТоварыПромежуточная Цикл

		СуммаПоПозиции = СторокаТаблицы.Сумма;
		НДСПоПозиции = СторокаТаблицы.СуммаНДС;
		НарастающийИтогНДС = 0;
		НарастающийИтогСумма = 0;
		КоличествоПоПозиции = СторокаТаблицы.Количество; 
		УбывающийИтогКоличество = СторокаТаблицы.Количество;

		Если СторокаТаблицы.ПрослеживаемыйТовар = Истина Тогда
			СтрокиПрослеживаемости = ТаблицаПрослеживаемости.НайтиСтроки(Новый Структура("УникальныйНомерСтрокиДокумента", СторокаТаблицы.УникальныйНомерСтрокиДокумента));

			Для Каждого СтрокаТаблицыПрослежеваемости Из СтрокиПрослеживаемости Цикл

				Если СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0 Тогда
					Продолжить;
				КонецЕсли;	
				Если УбывающийИтогКоличество = 0 Тогда
					Прервать;
				КонецЕсли;	
				Если УбывающийИтогКоличество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					УбывающийИтогКоличество = 0;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
					Если НарастающийИтогНДС <> НДСПоПозиции Тогда
						ДельтаНДС = НДСПоПозиции - НарастающийИтогНДС;
						НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2) + ДельтаНДС; 
					КонецЕсли;	
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
				ИначеЕсли УбывающийИтогКоличество > СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					УбывающийИтогКоличество = УбывающийИтогКоличество - СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
				ИначеЕсли УбывающийИтогКоличество < СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда	
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = УбывающийИтогКоличество;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = СтрокаТаблицыПрослежеваемости.КоличествоБазовое - УбывающийИтогКоличество; 
					УбывающийИтогКоличество = 0;
					Если НарастающийИтогНДС <> НДСПоПозиции Тогда
						ДельтаНДС = НДСПоПозиции - НарастающийИтогНДС;
						НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2) + ДельтаНДС; 
					КонецЕсли;	
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
				КонецЕсли;
			КонецЦикла;	
		Иначе	
			НоваяСтрока = ТаблицаТовары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
			#Удаление
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СторокаТаблицы.ГТД, СторокаТаблицы.ГТД.НомерГТД, СторокаТаблицы.ГТД.СтранаПроисхождения, СторокаТаблицы.ГТД.ЭтоРНПТ)); 
			#КонецУдаления
			#Вставка
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ," 
													,?(СторокаТаблицы.ГТД = Null, Справочники.ГТД.ПустаяСсылка(), СторокаТаблицы.ГТД)
													,?(СторокаТаблицы.ГТД = Null, "", СторокаТаблицы.ГТД.НомерГТД), 
													,?(СторокаТаблицы.ГТД = Null, Справочники.СтраныМира.ПустаяСсылка(), СторокаТаблицы.ГТД.СтранаПроисхождения)
													,?(СторокаТаблицы.ГТД = Null, Ложь, СторокаТаблицы.ГТД.ЭтоРНПТ)));
			#КонецВставки
		КонецЕсли;	
	КонецЦикла;	

	Если КомпонентыОбмена.УзелКорреспондента.СворачиватьТЧДокументовПоТоварамИзСтавокНДС Или ЭтоНТТ(ДанныеИБ.Склад, ДанныеИБ.Дата) Тогда
		КолонкиГруппировок = "Номенклатура, ЕдиницаИзмерения, СтавкаНДС, ТипЗапасов";
		КолонкиСуммирования = "Количество, Цена, Сумма, СуммаНДС";
		ТаблицаТовары = ПроизвестиСверткуКоллекцииОбъектовПоНоменклатуре(ТаблицаТовары, КолонкиГруппировок, КолонкиСуммирования, "ВозвратПоставщику", Неопределено);
	КонецЕсли;

	Если ДанныеИБ.ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.ВСумме Тогда
		СуммаВключаетНДС = Истина;
	Иначе
		СуммаВключаетНДС = Ложь;
	КонецЕсли;

	ТаблицаДопРеквизитов = Новый ТаблицаЗначений;
	ТаблицаДопРеквизитов.Колонки.Добавить("Свойство");
	ТаблицаДопРеквизитов.Колонки.Добавить("ЗначениеСвойства");

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Номер ТП7";
	НоваяСтрока.ЗначениеСвойства = ДанныеИБ.Номер;

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Вид документа ТП7";
	НоваяСтрока.ЗначениеСвойства = "Возврат поставщику";

	Если КомпонентыОбмена.УзелКорреспондента.ВыгружатьНомерДокумента Тогда 
		ДанныеXDTO.Вставить("ДополнительныеРеквизиты", ТаблицаДопРеквизитов);
	КонецЕсли;


	Если ТипЗнч(ДанныеИБ.ДокументОснование) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
		ДанныеXDTO.Вставить("ДокументПоступления", ДанныеИБ.ДокументОснование);  
	КонецЕсли;
	ДанныеXDTO.Вставить("ВидОперации", "ВозвратПоставщику");  
	ДанныеXDTO.КлючевыеСвойства.Вставить("Номер", НомерДокумента);
	Если ТаблицаТовары.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("Товары", ТаблицаТовары);
	КонецЕсли;	
	ДанныеXDTO.Вставить("СуммаВключаетНДС", СуммаВключаетНДС);
	ДанныеXDTO.Вставить("Подразделение", Подразделение);  
	ДанныеXDTO.Вставить("Грузоотправитель", Грузоотправитель);
	ДанныеXDTO.Вставить("Грузополучатель", Грузополучатель);
	ДанныеXDTO.Вставить("Грузополучатель", Грузополучатель);
	ДанныеXDTO.Вставить("Налогообложение", Налогообложение);

	Если ДанныеИБ.Договор.Владелец = Справочники.Контрагенты.РозничныйПокупатель Тогда  
		Если ДанныеXDTO.Свойство("Договор") Тогда
			ДанныеXDTO.Договор.Организация = ДанныеXDTO.КлючевыеСвойства.Организация; 
			ДанныеXDTO.Договор.ВидДоговора = "СПоставщиком";   
			ДанныеXDTO.Договор.Наименование = "Основной договор";
		КонецЕсли;	
	КонецЕсли;	

	Если Не ЗначениеЗаполнено(ДанныеИБ.КурсВзаиморасчетов) Тогда
		ДанныеXDTO.Вставить("КурсВзаиморасчетов", 1);  
	КонецЕсли;	
	Если Не ЗначениеЗаполнено(ДанныеИБ.КратностьВзаиморасчетов) Тогда
		ДанныеXDTO.Вставить("КратностьВзаиморасчетов", 1);  
	КонецЕсли;
КонецПроцедуры

&ИзменениеИКонтроль("ПКО_ОтчетКомиссионера_ПриОтправкеДанных")
Процедура ИО_ПКО_ОтчетКомиссионера_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	НомерБезПрефикса = Прав(ДанныеИБ.Номер, 6);
	НомерДокумента = КомпонентыОбмена.УзелКорреспондента.ПрефиксНомераДокументов + "ПН-" + НомерБезПрефикса;

	СпособРасчетаКомиссионногоВознаграждения = "НеРассчитывается";
	УдержатьКомиссионноеВознаграждение = Не ДанныеИБ.ВыделитьСуммуВознагражденияВоВзаиморасчетах;

	Если ЗначениеЗаполнено(ДанныеИБ.Подразделение) Тогда 
		Подразделение = ДанныеИБ.Подразделение;
	Иначе
		Подразделение = КомпонентыОбмена.УзелКорреспондента.Подразделение;
	КонецЕсли;

	ТаблицаТоварыПромежуточная = Запрос_ОтчетКомиссионера_Товары(ДанныеИБ.Ссылка);   

	ТаблицаТоварыПромежуточная.Колонки.Добавить("НомерГТД");

	ТаблицаТовары = ТаблицаТоварыПромежуточная.СкопироватьКолонки();

	ТаблицаПрослеживаемости = ДанныеИБ.Ссылка.Прослеживаемости.Выгрузить();

	Для Каждого СторокаТаблицы Из ТаблицаТоварыПромежуточная Цикл

		СуммаПоПозиции = СторокаТаблицы.Сумма;
		НДСПоПозиции = СторокаТаблицы.СуммаНДС;
		НарастающийИтогНДС = 0;
		НарастающийИтогСумма = 0;
		КоличествоПоПозиции = СторокаТаблицы.Количество; 
		УбывающийИтогКоличество = СторокаТаблицы.Количество;
		СуммаВознагражденияПоПозиции = СторокаТаблицы.СуммаВознаграждения;
		СуммаНДСВознагражденияПоПозиции = СторокаТаблицы.СуммаНДСВознаграждения; 

		Если СторокаТаблицы.ПрослеживаемыйТовар = Истина Тогда
			СтрокиПрослеживаемости = ТаблицаПрослеживаемости.НайтиСтроки(Новый Структура("УникальныйНомерСтрокиДокумента", СторокаТаблицы.УникальныйНомерСтрокиДокумента));

			Для Каждого СтрокаТаблицыПрослежеваемости Из СтрокиПрослеживаемости Цикл

				Если СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0 Тогда
					Продолжить;
				КонецЕсли;	
				Если УбывающийИтогКоличество = 0 Тогда
					Прервать;
				КонецЕсли;	
				Если УбывающийИтогКоличество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					УбывающийИтогКоличество = 0;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
					Если НарастающийИтогНДС <> НДСПоПозиции Тогда
						ДельтаНДС = НДСПоПозиции - НарастающийИтогНДС;
						НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2) + ДельтаНДС; 
					КонецЕсли;	
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
					НоваяСтрока.СуммаВознаграждения = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДСВознаграждения = СуммаНДСВознагражденияПоПозиции; 
					СуммаВознагражденияПоПозиции = 0;
					СуммаНДСВознагражденияПоПозиции = 0; 
				ИначеЕсли УбывающийИтогКоличество > СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					УбывающийИтогКоличество = УбывающийИтогКоличество - СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
					НоваяСтрока.СуммаВознаграждения = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДСВознаграждения = СуммаНДСВознагражденияПоПозиции; 
					СуммаВознагражденияПоПозиции = 0;
					СуммаНДСВознагражденияПоПозиции = 0; 
				ИначеЕсли УбывающийИтогКоличество < СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда	
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = УбывающийИтогКоличество;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = СтрокаТаблицыПрослежеваемости.КоличествоБазовое - УбывающийИтогКоличество; 
					УбывающийИтогКоличество = 0;
					Если НарастающийИтогНДС <> НДСПоПозиции Тогда
						ДельтаНДС = НДСПоПозиции - НарастающийИтогНДС;
						НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2) + ДельтаНДС; 
					КонецЕсли;	
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
					НоваяСтрока.СуммаВознаграждения = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДСВознаграждения = СуммаНДСВознагражденияПоПозиции; 
					СуммаВознагражденияПоПозиции = 0;
					СуммаНДСВознагражденияПоПозиции = 0; 
				КонецЕсли;
			КонецЦикла;	
		Иначе	
			НоваяСтрока = ТаблицаТовары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
			#Удаление
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СторокаТаблицы.ГТД, СторокаТаблицы.ГТД.НомерГТД, СторокаТаблицы.ГТД.СтранаПроисхождения, СторокаТаблицы.ГТД.ЭтоРНПТ)); 
			#КонецУдаления
			#Вставка
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ," 
													,?(СторокаТаблицы.ГТД = Null, Справочники.ГТД.ПустаяСсылка(), СторокаТаблицы.ГТД)
													,?(СторокаТаблицы.ГТД = Null, "", СторокаТаблицы.ГТД.НомерГТД), 
													,?(СторокаТаблицы.ГТД = Null, Справочники.СтраныМира.ПустаяСсылка(), СторокаТаблицы.ГТД.СтранаПроисхождения)
													,?(СторокаТаблицы.ГТД = Null, Ложь, СторокаТаблицы.ГТД.ЭтоРНПТ)));
			#КонецВставки
		КонецЕсли;	
	КонецЦикла;	

	Если КомпонентыОбмена.УзелКорреспондента.СворачиватьТЧДокументовПоТоварамИзСтавокНДС Тогда
		КолонкиГруппировок = "Номенклатура, ЕдиницаИзмерения, СтавкаНДС, ТипЗапасов";
		КолонкиСуммирования = "Количество, Цена, Сумма, СуммаНДС, КлючСтроки";
		ТаблицаТовары = ПроизвестиСверткуКоллекцииОбъектовПоНоменклатуре(ТаблицаТовары, КолонкиГруппировок, КолонкиСуммирования, "ОтчетКомиссионера", Неопределено);
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	АВТОНОМЕРЗАПИСИ() КАК КлючСтроки,
	|	Реализация.Договор.Владелец КАК Покупатель
	|ПОМЕСТИТЬ ВТ_Промежуточная
	|ИЗ
	|	РегистрНакопления.Реализация КАК Реализация
	|ГДЕ
	|	Реализация.Регистратор = &Ссылка
	|	И Реализация.Количество > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Промежуточная.КлючСтроки КАК КлючСтроки,
	|	ВТ_Промежуточная.Покупатель КАК Покупатель
	|ИЗ
	|	ВТ_Промежуточная КАК ВТ_Промежуточная";

	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	ТаблицаПокупатели = Запрос.Выполнить().Выгрузить();

	ТаблицаДопРеквизитов = Новый ТаблицаЗначений;
	ТаблицаДопРеквизитов.Колонки.Добавить("Свойство");
	ТаблицаДопРеквизитов.Колонки.Добавить("ЗначениеСвойства");

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Номер ТП7";
	НоваяСтрока.ЗначениеСвойства = ДанныеИБ.Номер;

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Вид документа ТП7";
	НоваяСтрока.ЗначениеСвойства = "Отчет комиссионера";

	Если КомпонентыОбмена.УзелКорреспондента.ВыгружатьНомерДокумента Тогда 
		ДанныеXDTO.Вставить("ДополнительныеРеквизиты", ТаблицаДопРеквизитов);
	КонецЕсли;

	Если ТаблицаТовары.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("Товары", ТаблицаТовары);
	КонецЕсли;	
	Если ТаблицаПокупатели.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("Покупатели", ТаблицаПокупатели);
	КонецЕсли;	
	ДанныеXDTO.КлючевыеСвойства.Вставить("Номер", НомерДокумента);
	ДанныеXDTO.Вставить("СпособРасчетаКомиссионногоВознаграждения", СпособРасчетаКомиссионногоВознаграждения);
	ДанныеXDTO.Вставить("Подразделение", Подразделение);  
	ДанныеXDTO.Вставить("УдержатьКомиссионноеВознаграждение", УдержатьКомиссионноеВознаграждение);  


	Если ДанныеИБ.Договор.Владелец = Справочники.Контрагенты.РозничныйПокупатель Тогда  
		Если ДанныеXDTO.Свойство("Договор") Тогда
			ДанныеXDTO.Договор.Организация = ДанныеXDTO.КлючевыеСвойства.Организация; 
			ДанныеXDTO.Договор.ВидДоговора = "СКомиссионером";   
			ДанныеXDTO.Договор.Наименование = "Основной договор";
		КонецЕсли;	
	КонецЕсли;	

	Если Не ЗначениеЗаполнено(ДанныеИБ.КурсВзаиморасчетов) Тогда
		ДанныеXDTO.Вставить("КурсВзаиморасчетов", 1);  
	КонецЕсли;	
	Если Не ЗначениеЗаполнено(ДанныеИБ.КратностьВзаиморасчетов) Тогда
		ДанныеXDTO.Вставить("КратностьВзаиморасчетов", 1);  
	КонецЕсли;
КонецПроцедуры

&ИзменениеИКонтроль("ПКО_ОтчетКомитенту_ПриОтправкеДанных")
Процедура ИО_ПКО_ОтчетКомитенту_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	НомерБезПрефикса = Прав(ДанныеИБ.Номер, 6);
	НомерДокумента = КомпонентыОбмена.УзелКорреспондента.ПрефиксНомераДокументов + "ПН-" + НомерБезПрефикса;

	Если ЗначениеЗаполнено(ДанныеИБ.Подразделение) Тогда 
		Подразделение = ДанныеИБ.Подразделение;
	Иначе
		Подразделение = КомпонентыОбмена.УзелКорреспондента.Подразделение;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ОтчетКомитентуТовары.Номенклатура КАК Номенклатура,
	|	ОтчетКомитентуТовары.Номенклатура.БазоваяЕдиницаПоКлассификатору КАК ЕдиницаИзмерения,
	|	ОтчетКомитентуТовары.Количество * ОтчетКомитентуТовары.Коэффициент КАК Количество,
	|	ВЫРАЗИТЬ(ОтчетКомитентуТовары.Сумма / ОтчетКомитентуТовары.Количество КАК ЧИСЛО(15, 2)) КАК ЦенаПоступления,
	|	ОтчетКомитентуТовары.Сумма КАК СуммаПоступления,
	|	ВЫРАЗИТЬ(ОтчетКомитентуТовары.Сумма / ОтчетКомитентуТовары.Количество КАК ЧИСЛО(15, 2)) КАК Цена,
	|	ОтчетКомитентуТовары.Сумма КАК Сумма,
	|	ОтчетКомитентуТовары.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ОтчетКомитентуТовары.Партия.ГТД КАК ГТД,
	|	ОтчетКомитентуТовары.Номенклатура.ЕдиницаПрослеживаемости КАК ЕдиницаИзмеренияПрослеживаемости,
	|	ОтчетКомитентуТовары.Номенклатура.ПодлежитПрослеживаемости КАК ПрослеживаемыйТовар,
	|	0 КАК КоличествоРНПТ,
	|	ОтчетКомитентуТовары.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента,
	|	ОтчетКомитентуТовары.Партия.СтранаПроисхождения КАК СтранаПроисхождения
	|ИЗ
	|	Документ.ОтчетКомитенту.Товары КАК ОтчетКомитентуТовары
	|ГДЕ
	|	ОтчетКомитентуТовары.Ссылка = &Ссылка
	|	И ОтчетКомитентуТовары.Количество > 0
	|	И ОтчетКомитентуТовары.Сумма > 0";

	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	ТаблицаТоварыПромежуточная = Запрос.Выполнить().Выгрузить();  

	ТаблицаТоварыПромежуточная.Колонки.Добавить("НомерГТД");

	ТаблицаТовары = ТаблицаТоварыПромежуточная.СкопироватьКолонки();

	ТаблицаПрослеживаемости = ДанныеИБ.Ссылка.Прослеживаемости.Выгрузить();

	Для Каждого СторокаТаблицы Из ТаблицаТоварыПромежуточная Цикл

		СуммаПоПозиции = СторокаТаблицы.Сумма;
		НарастающийИтогСумма = 0;
		КоличествоПоПозиции = СторокаТаблицы.Количество; 
		УбывающийИтогКоличество = СторокаТаблицы.Количество;

		Если СторокаТаблицы.ПрослеживаемыйТовар = Истина Тогда
			СтрокиПрослеживаемости = ТаблицаПрослеживаемости.НайтиСтроки(Новый Структура("УникальныйНомерСтрокиДокумента", СторокаТаблицы.УникальныйНомерСтрокиДокумента));

			Для Каждого СтрокаТаблицыПрослежеваемости Из СтрокиПрослеживаемости Цикл

				Если СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0 Тогда
					Продолжить;
				КонецЕсли;	
				Если УбывающийИтогКоличество = 0 Тогда
					Прервать;
				КонецЕсли;	
				Если УбывающийИтогКоличество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаПоступления = НоваяСтрока.Сумма;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					УбывающийИтогКоличество = 0;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
						НоваяСтрока.СуммаПоступления = НоваяСтрока.Сумма;
					КонецЕсли;	
				ИначеЕсли УбывающийИтогКоличество > СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаПоступления = НоваяСтрока.Сумма;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					УбывающийИтогКоличество = УбывающийИтогКоличество - СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
				ИначеЕсли УбывающийИтогКоличество < СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда	
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = УбывающийИтогКоличество;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаПоступления = НоваяСтрока.Сумма;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = СтрокаТаблицыПрослежеваемости.КоличествоБазовое - УбывающийИтогКоличество; 
					УбывающийИтогКоличество = 0;
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
						НоваяСтрока.СуммаПоступления = НоваяСтрока.Сумма;
					КонецЕсли;	
				КонецЕсли;
			КонецЦикла;	
		Иначе	
			НоваяСтрока = ТаблицаТовары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
			#Удаление
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СторокаТаблицы.ГТД, СторокаТаблицы.ГТД.НомерГТД, СторокаТаблицы.ГТД.СтранаПроисхождения, СторокаТаблицы.ГТД.ЭтоРНПТ)); 
			#КонецУдаления
			#Вставка
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ," 
													,?(СторокаТаблицы.ГТД = Null, Справочники.ГТД.ПустаяСсылка(), СторокаТаблицы.ГТД)
													,?(СторокаТаблицы.ГТД = Null, "", СторокаТаблицы.ГТД.НомерГТД), 
													,?(СторокаТаблицы.ГТД = Null, Справочники.СтраныМира.ПустаяСсылка(), СторокаТаблицы.ГТД.СтранаПроисхождения)
													,?(СторокаТаблицы.ГТД = Null, Ложь, СторокаТаблицы.ГТД.ЭтоРНПТ)));
			#КонецВставки
		КонецЕсли;	
	КонецЦикла;	

	Если КомпонентыОбмена.УзелКорреспондента.СворачиватьТЧДокументовПоТоварамИзСтавокНДС Тогда
		КолонкиГруппировок = "Номенклатура, ЕдиницаИзмерения";
		КолонкиСуммирования = "Количество, Цена, ЦенаПоступления, Сумма, СуммаПоступления";
		ТаблицаТовары = ПроизвестиСверткуКоллекцииОбъектовПоНоменклатуре(ТаблицаТовары, КолонкиГруппировок, КолонкиСуммирования, "ОтчетКомитенту", Неопределено);
	КонецЕсли;

	ТаблицаДопРеквизитов = Новый ТаблицаЗначений;
	ТаблицаДопРеквизитов.Колонки.Добавить("Свойство");
	ТаблицаДопРеквизитов.Колонки.Добавить("ЗначениеСвойства");

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Номер ТП7";
	НоваяСтрока.ЗначениеСвойства = ДанныеИБ.Номер;

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Вид документа ТП7";
	НоваяСтрока.ЗначениеСвойства = "Отчет комитенту";

	Если КомпонентыОбмена.УзелКорреспондента.ВыгружатьНомерДокумента Тогда 
		ДанныеXDTO.Вставить("ДополнительныеРеквизиты", ТаблицаДопРеквизитов);
	КонецЕсли;

	ДанныеXDTO.КлючевыеСвойства.Вставить("Номер", НомерДокумента);
	Если ТаблицаТовары.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("Товары", ТаблицаТовары);
	КонецЕсли;	
	ДанныеXDTO.Вставить("Подразделение", Подразделение);

	Если ДанныеИБ.Договор.Владелец = Справочники.Контрагенты.РозничныйПокупатель Тогда  
		Если ДанныеXDTO.Свойство("Договор") Тогда
			ДанныеXDTO.Договор.Организация = ДанныеXDTO.КлючевыеСвойства.Организация; 
			ДанныеXDTO.Договор.ВидДоговора = "СКомитентом";   
			ДанныеXDTO.Договор.Наименование = "Основной договор";
		КонецЕсли;	
	КонецЕсли;	

	Если Не ЗначениеЗаполнено(ДанныеИБ.КурсВзаиморасчетов) Тогда
		ДанныеXDTO.Вставить("КурсВзаиморасчетов", 1);  
	КонецЕсли;	
	Если Не ЗначениеЗаполнено(ДанныеИБ.КратностьВзаиморасчетов) Тогда
		ДанныеXDTO.Вставить("КратностьВзаиморасчетов", 1);  
	КонецЕсли;	

	ДанныеXDTO.Вставить("СпособРасчетаКомиссионногоВознаграждения", "НеРассчитывается");  
	ДанныеXDTO.Вставить("СтавкаНДСВознаграждения", "БезНДС");
КонецПроцедуры

&ИзменениеИКонтроль("ПКО_ОтчетОтдела_ПриОтправкеДанных")
Процедура ИО_ПКО_ОтчетОтдела_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	ДатаДокумента = ДанныеИБ.Документ.Дата;

	НомерБезПрефикса = Прав(ДанныеИБ.Документ.Номер, 6);
	НомерДокумента = КомпонентыОбмена.УзелКорреспондента.ПрефиксНомераДокументов + Лев(ДанныеИБ.Организация.Префикс, 2) + "-" + НомерБезПрефикса;  

	Если ДанныеИБ.Документ.ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.ВСумме Тогда
		СуммаВключаетНДС = Истина;
	Иначе
		СуммаВключаетНДС = Ложь;
	КонецЕсли;

	Склад = ДанныеИБ.Документ.Склад;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.ЯвляетсяПлательщикомНДС КАК ЯвляетсяПлательщикомНДС
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&Период, ) КАК УчетнаяПолитикаОрганизацийСрезПоследних
	|ГДЕ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.Организация = &Организация";

	Запрос.УстановитьПараметр("Период", ДатаДокумента);
	Запрос.УстановитьПараметр("Организация", ДанныеИБ.Организация);

	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если Выборка.ЯвляетсяПлательщикомНДС Тогда
			Налогообложение = "ПродажаОблагаетсяНДС";
		Иначе
			Налогообложение = "ПродажаНеОблагаетсяНДС";
		КонецЕсли;	
	Иначе
		Налогообложение = "ПродажаОблагаетсяНДС";
	КонецЕсли;	

	Если ЗначениеЗаполнено(ДанныеИБ.Документ.Склад.Подразделение) Тогда 
		Подразделение = ДанныеИБ.Документ.Склад.Подразделение;
	Иначе
		Подразделение = КомпонентыОбмена.УзелКорреспондента.Подразделение;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.ЯвляетсяПлательщикомНДС КАК ЯвляетсяПлательщикомНДС
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&Период, ) КАК УчетнаяПолитикаОрганизацийСрезПоследних
	|ГДЕ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.Организация = &Организация";

	Запрос.УстановитьПараметр("Период", ДатаДокумента);
	Запрос.УстановитьПараметр("Организация", ДанныеИБ.Организация);

	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		НеВыделятьНДСВДокументахРозничнойПродажи = Не Выборка.ЯвляетсяПлательщикомНДС;
	Иначе
		НеВыделятьНДСВДокументахРозничнойПродажи = Ложь;
	КонецЕсли;	

	КассаККМ = ДанныеИБ.Документ.ККМ;
	Валюта = ДанныеИБ.Документ.Валюта;
	Сумма = ДанныеИБ.Документ.СуммаДокумента;
	Патент = ДанныеИБ.Документ.Патент; 
	Ответственный = ДанныеИБ.Документ.Автор;
	Комментарий = ДанныеИБ.Документ.Комментарий;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ОтчетОтделаТовары.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента,
	|	ОтчетОтделаТовары.Всего КАК Сумма,
	|	ОтчетОтделаТовары.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА &НеВыделятьНДСВДокументахРозничнойПродажи
	|				ИЛИ ОтчетОтделаТовары.Ссылка.ВариантРасчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаНДС.БезНДС)
	|			ТОГДА ""БезНДС""
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ОтчетОтделаТовары.СтавкаНДС.ПроцентНДС = 20
	|						ИЛИ ОтчетОтделаТовары.СтавкаНДС.ПроцентНДС = 18
	|					ТОГДА ""НДС20""
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ОтчетОтделаТовары.СтавкаНДС.ПроцентНДС = 10
	|							ТОГДА ""НДС10""
	|						ИНАЧЕ ""БезНДС""
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА &НеВыделятьНДСВДокументахРозничнойПродажи
	|				ИЛИ ОтчетОтделаТовары.Ссылка.ВариантРасчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаНДС.БезНДС)
	|			ТОГДА 0
	|		ИНАЧЕ ОтчетОтделаТовары.СуммаНДС
	|	КОНЕЦ КАК СуммаНДС,
	|	ОтчетОтделаТовары.РозничнаяЦена КАК Цена,
	|	ОтчетОтделаТовары.Коэффициент КАК Коэффициент,
	|	ОтчетОтделаТовары.Номенклатура.БазоваяЕдиницаПоКлассификатору КАК ЕдиницаИзмерения,
	|	ОтчетОтделаТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	|ПОМЕСТИТЬ ВТ_ТабличнаяЧасть
	|ИЗ
	|	Документ.ОтчетОтдела.Товары КАК ОтчетОтделаТовары
	|ГДЕ
	|	ОтчетОтделаТовары.Ссылка = &Ссылка
	|	И ОтчетОтделаТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Набор)
	|	И ОтчетОтделаТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И ОтчетОтделаТовары.Количество > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ОстаткиНоменклатуры.Количество) КАК КоличествоПоУНСД,
	|	ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента
	|ПОМЕСТИТЬ ВТ_КоличествоПоУНСД
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|ГДЕ
	|	ОстаткиНоменклатуры.Регистратор = &Ссылка
	|	И ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента В
	|			(ВЫБРАТЬ
	|				ВТ_ТабличнаяЧасть.УникальныйНомерСтрокиДокумента
	|			ИЗ
	|				ВТ_ТабличнаяЧасть КАК ВТ_ТабличнаяЧасть)
	|	И ОстаткиНоменклатуры.ТипОперации <> ЗНАЧЕНИЕ(Перечисление.ТипыОпераций.ВозвратОтПокупателяРозница)
	|	И ОстаткиНоменклатуры.Фирма = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНоменклатуры.Номенклатура КАК Номенклатура,
	|	СУММА(ОстаткиНоменклатуры.Количество) КАК Количество,
	|	ВЫБОР
	|		КОГДА ОстаткиНоменклатуры.Партия.НаРеализации = ИСТИНА
	|			ТОГДА ""КомиссионныеТовары""
	|		ИНАЧЕ ""СобственныеТовары""
	|	КОНЕЦ КАК ТипЗапасов,
	|	ОстаткиНоменклатуры.Партия.ГТД КАК ГТД,
	|	ОстаткиНоменклатуры.Партия.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента,
	|	ВТ_КоличествоПоУНСД.КоличествоПоУНСД КАК КоличествоПоУНСД
	|ПОМЕСТИТЬ ВТ_Движения
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоличествоПоУНСД КАК ВТ_КоличествоПоУНСД
	|		ПО ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента = ВТ_КоличествоПоУНСД.УникальныйНомерСтрокиДокумента
	|ГДЕ
	|	ОстаткиНоменклатуры.Регистратор = &Ссылка
	|	И ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента В
	|			(ВЫБРАТЬ
	|				ВТ_ТабличнаяЧасть.УникальныйНомерСтрокиДокумента
	|			ИЗ
	|				ВТ_ТабличнаяЧасть КАК ВТ_ТабличнаяЧасть)
	|	И ОстаткиНоменклатуры.ТипОперации <> ЗНАЧЕНИЕ(Перечисление.ТипыОпераций.ВозвратОтПокупателяРозница)
	|	И ОстаткиНоменклатуры.Фирма = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента,
	|	ОстаткиНоменклатуры.Номенклатура,
	|	ВЫБОР
	|		КОГДА ОстаткиНоменклатуры.Партия.НаРеализации = ИСТИНА
	|			ТОГДА ""КомиссионныеТовары""
	|		ИНАЧЕ ""СобственныеТовары""
	|	КОНЕЦ,
	|	ОстаткиНоменклатуры.Партия.ГТД,
	|	ОстаткиНоменклатуры.Партия.СтранаПроисхождения,
	|	ВТ_КоличествоПоУНСД.КоличествоПоУНСД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Движения.Номенклатура КАК Номенклатура,
	|	ВТ_Движения.Количество КАК Количество,
	|	ВТ_ТабличнаяЧасть.Цена КАК Цена,
	|	ВЫБОР
	|		КОГДА ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент = ВТ_Движения.КоличествоПоУНСД
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент = ВТ_Движения.Количество
	|						ТОГДА ВТ_ТабличнаяЧасть.Сумма
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ВТ_Движения.ТипЗапасов = ""СобственныеТовары""
	|								ТОГДА ВЫРАЗИТЬ(ВТ_ТабличнаяЧасть.Сумма * ВТ_Движения.Количество / (ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент) КАК ЧИСЛО(15, 2))
	|							ИНАЧЕ ВТ_ТабличнаяЧасть.Сумма - (ВЫРАЗИТЬ(ВТ_ТабличнаяЧасть.Сумма * (ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент - ВТ_Движения.Количество) / (ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент) КАК ЧИСЛО(15, 2)))
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ ВЫРАЗИТЬ(ВТ_ТабличнаяЧасть.Сумма * ВТ_Движения.Количество / (ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК Сумма,
	|	ВТ_ТабличнаяЧасть.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент = ВТ_Движения.КоличествоПоУНСД
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент = ВТ_Движения.Количество
	|						ТОГДА ВТ_ТабличнаяЧасть.СуммаНДС
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ВТ_Движения.ТипЗапасов = ""СобственныеТовары""
	|								ТОГДА ВЫРАЗИТЬ(ВТ_ТабличнаяЧасть.СуммаНДС * ВТ_Движения.Количество / (ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент) КАК ЧИСЛО(15, 2))
	|							ИНАЧЕ ВТ_ТабличнаяЧасть.СуммаНДС - (ВЫРАЗИТЬ(ВТ_ТабличнаяЧасть.СуммаНДС * (ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент - ВТ_Движения.Количество) / (ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент) КАК ЧИСЛО(15, 2)))
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ ВЫРАЗИТЬ(ВТ_ТабличнаяЧасть.СуммаНДС * ВТ_Движения.Количество / (ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаНДС,
	|	ВТ_Движения.ГТД КАК ГТД,
	|	ВТ_Движения.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВТ_Движения.ТипЗапасов КАК ТипЗапасов,
	|	ВТ_ТабличнаяЧасть.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ТабличнаяЧасть.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	ВТ_Движения КАК ВТ_Движения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧасть КАК ВТ_ТабличнаяЧасть
	|		ПО ВТ_Движения.УникальныйНомерСтрокиДокумента = ВТ_ТабличнаяЧасть.УникальныйНомерСтрокиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетОтделаТовары.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента,
	|	ОтчетОтделаТовары.Всего КАК Сумма,
	|	ВЫБОР
	|		КОГДА &НеВыделятьНДСВДокументахРозничнойПродажи
	|				ИЛИ ОтчетОтделаТовары.Ссылка.ВариантРасчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаНДС.БезНДС)
	|			ТОГДА ""БезНДС""
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ОтчетОтделаТовары.СтавкаНДС.ПроцентНДС = 20
	|						ИЛИ ОтчетОтделаТовары.СтавкаНДС.ПроцентНДС = 18
	|					ТОГДА ""НДС20""
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ОтчетОтделаТовары.СтавкаНДС.ПроцентНДС = 10
	|							ТОГДА ""НДС10""
	|						ИНАЧЕ ""БезНДС""
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА &НеВыделятьНДСВДокументахРозничнойПродажи
	|				ИЛИ ОтчетОтделаТовары.Ссылка.ВариантРасчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаНДС.БезНДС)
	|			ТОГДА 0
	|		ИНАЧЕ ОтчетОтделаТовары.СуммаНДС
	|	КОНЕЦ КАК СуммаНДС,
	|	ОтчетОтделаТовары.Номенклатура.БазоваяЕдиницаПоКлассификатору КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ ВТ_ТабличнаяЧастьНаборы
	|ИЗ
	|	Документ.ОтчетОтдела.Товары КАК ОтчетОтделаТовары
	|ГДЕ
	|	ОтчетОтделаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Набор)
	|	И ОтчетОтделаТовары.Ссылка = &Ссылка
	|	И ОтчетОтделаТовары.Количество > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНоменклатуры.Номенклатура КАК Номенклатура,
	|	СУММА(ОстаткиНоменклатуры.Количество) КАК Количество,
	|	ВЫБОР
	|		КОГДА ОстаткиНоменклатуры.Партия.НаРеализации = ИСТИНА
	|			ТОГДА ""КомиссионныеТовары""
	|		ИНАЧЕ ""СобственныеТовары""
	|	КОНЕЦ КАК ТипЗапасов,
	|	ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента,
	|	СУММА(ОстаткиНоменклатуры.ПриходнаяСуммаВРеглВал) КАК ПриходнаяСумма,
	|	ОстаткиНоменклатуры.Партия.ГТД КАК НомерГТД,
	|	ОстаткиНоменклатуры.Партия.СтранаПроисхождения КАК СтранаПроисхождения,
	|	АВТОНОМЕРЗАПИСИ() КАК НомерСтроки,
	|	ОстаткиНоменклатуры.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	|ПОМЕСТИТЬ ВТ_ДвиженияНаборы
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|ГДЕ
	|	ОстаткиНоменклатуры.Регистратор = &Ссылка
	|	И ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента В
	|			(ВЫБРАТЬ
	|				ВТ_ТабличнаяЧастьНаборы.УникальныйНомерСтрокиДокумента
	|			ИЗ
	|				ВТ_ТабличнаяЧастьНаборы КАК ВТ_ТабличнаяЧастьНаборы)
	|	И ОстаткиНоменклатуры.ТипОперации <> ЗНАЧЕНИЕ(Перечисление.ТипыОпераций.ВозвратОтПокупателяРозница)
	|	И ОстаткиНоменклатуры.Фирма = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента,
	|	ОстаткиНоменклатуры.Номенклатура,
	|	ВЫБОР
	|		КОГДА ОстаткиНоменклатуры.Партия.НаРеализации = ИСТИНА
	|			ТОГДА ""КомиссионныеТовары""
	|		ИНАЧЕ ""СобственныеТовары""
	|	КОНЕЦ,
	|	ОстаткиНоменклатуры.Партия.ГТД,
	|	ОстаткиНоменклатуры.Партия.СтранаПроисхождения,
	|	ОстаткиНоменклатуры.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ОстаткиНоменклатуры.ПриходнаяСуммаВРеглВал) КАК СуммаПоНабору,
	|	ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента
	|ПОМЕСТИТЬ ВТ_СуммаПоНабору
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|ГДЕ
	|	ОстаткиНоменклатуры.Регистратор = &Ссылка
	|	И ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента В
	|			(ВЫБРАТЬ
	|				ВТ_ТабличнаяЧастьНаборы.УникальныйНомерСтрокиДокумента
	|			ИЗ
	|				ВТ_ТабличнаяЧастьНаборы КАК ВТ_ТабличнаяЧастьНаборы)
	|	И ОстаткиНоменклатуры.ТипОперации <> ЗНАЧЕНИЕ(Перечисление.ТипыОпераций.ВозвратОтПокупателяРозница)
	|	И ОстаткиНоменклатуры.Фирма = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 100000
	|	ВТ_ДвиженияНаборы.Номенклатура КАК Номенклатура,
	|	ВТ_ДвиженияНаборы.Количество КАК Количество,
	|	ВТ_ДвиженияНаборы.ТипЗапасов КАК ТипЗапасов,
	|	ВТ_ДвиженияНаборы.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента,
	|	ВТ_ДвиженияНаборы.ПриходнаяСумма КАК ПриходнаяСумма,
	|	ВЫБОР
	|		КОГДА ВТ_СуммаПоНабору.СуммаПоНабору <> 0
	|			ТОГДА ВТ_СуммаПоНабору.СуммаПоНабору
	|		ИНАЧЕ ВТ_ТабличнаяЧастьНаборы.Сумма
	|	КОНЕЦ КАК СуммаПоНабору,
	|	ВТ_ТабличнаяЧастьНаборы.Сумма КАК Сумма,
	|	ВТ_ДвиженияНаборы.НомерСтроки КАК НомерСтроки,
	|	ВТ_ТабличнаяЧастьНаборы.СтавкаНДС КАК СтавкаНДС,
	|	ВТ_ТабличнаяЧастьНаборы.СуммаНДС КАК СуммаНДС,
	|	ВТ_ДвиженияНаборы.НомерГТД КАК НомерГТД,
	|	ВТ_ДвиженияНаборы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВТ_ТабличнаяЧастьНаборы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ДвиженияНаборы.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	|ПОМЕСТИТЬ ВТ_ОбъедененныеДанные
	|ИЗ
	|	ВТ_ДвиженияНаборы КАК ВТ_ДвиженияНаборы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СуммаПоНабору КАК ВТ_СуммаПоНабору
	|		ПО ВТ_ДвиженияНаборы.УникальныйНомерСтрокиДокумента = ВТ_СуммаПоНабору.УникальныйНомерСтрокиДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧастьНаборы КАК ВТ_ТабличнаяЧастьНаборы
	|		ПО ВТ_ДвиженияНаборы.УникальныйНомерСтрокиДокумента = ВТ_ТабличнаяЧастьНаборы.УникальныйНомерСтрокиДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	УникальныйНомерСтрокиДокумента,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Данные1.Номенклатура КАК Номенклатура,
	|	ВТ_Данные1.Количество КАК Количество,
	|	ВТ_Данные1.ТипЗапасов КАК ТипЗапасов,
	|	ВТ_Данные1.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента,
	|	ВТ_Данные1.ПриходнаяСумма КАК ПриходнаяСумма,
	|	ВТ_Данные1.СуммаПоНабору КАК СуммаПоНабору,
	|	ВТ_Данные1.Сумма КАК Сумма,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(ВТ_Данные2.ПриходнаяСумма), 0) КАК ЧИСЛО(15, 2)) КАК БазаНакопленная,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(ВТ_Данные2.СуммаНДС), 0) КАК ЧИСЛО(15, 2)) КАК БазаНакопленнаяНДС,
	|	ВТ_Данные1.НомерСтроки КАК НомерСтроки,
	|	ВТ_Данные1.СтавкаНДС КАК СтавкаНДС,
	|	ВТ_Данные1.СуммаНДС КАК СуммаНДС,
	|	ВТ_Данные1.НомерГТД КАК НомерГТД,
	|	ВТ_Данные1.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВТ_Данные1.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_Данные1.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	|ПОМЕСТИТЬ ВТ_ДанныеДляРасчета
	|ИЗ
	|	ВТ_ОбъедененныеДанные КАК ВТ_Данные1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОбъедененныеДанные КАК ВТ_Данные2
	|		ПО ВТ_Данные1.НомерСтроки > ВТ_Данные2.НомерСтроки
	|			И ВТ_Данные1.УникальныйНомерСтрокиДокумента = ВТ_Данные2.УникальныйНомерСтрокиДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Данные1.НомерСтроки,
	|	ВТ_Данные1.ПриходнаяСумма,
	|	ВТ_Данные1.Номенклатура,
	|	ВТ_Данные1.Количество,
	|	ВТ_Данные1.ТипЗапасов,
	|	ВТ_Данные1.УникальныйНомерСтрокиДокумента,
	|	ВТ_Данные1.СуммаПоНабору,
	|	ВТ_Данные1.Сумма,
	|	ВТ_Данные1.СтавкаНДС,
	|	ВТ_Данные1.СуммаНДС,
	|	ВТ_Данные1.НомерГТД,
	|	ВТ_Данные1.СтранаПроисхождения,
	|	ВТ_Данные1.ЕдиницаИзмерения,
	|	ВТ_Данные1.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеДляРасчета.Номенклатура КАК Номенклатура,
	|	ВТ_ДанныеДляРасчета.Количество КАК Количество,
	|	ВТ_ДанныеДляРасчета.ТипЗапасов КАК ТипЗапасов,
	|	ВТ_ДанныеДляРасчета.НомерСтроки КАК НомерСтроки,
	|	(ВЫРАЗИТЬ(ВТ_ДанныеДляРасчета.Сумма * (ВТ_ДанныеДляРасчета.БазаНакопленная + ВТ_ДанныеДляРасчета.ПриходнаяСумма) / ВТ_ДанныеДляРасчета.СуммаПоНабору КАК ЧИСЛО(15, 2))) - (ВЫРАЗИТЬ(ВТ_ДанныеДляРасчета.Сумма * ВТ_ДанныеДляРасчета.БазаНакопленная / ВТ_ДанныеДляРасчета.СуммаПоНабору КАК ЧИСЛО(15, 2))) КАК Сумма,
	|	(ВЫРАЗИТЬ(ВТ_ДанныеДляРасчета.СуммаНДС * (ВТ_ДанныеДляРасчета.БазаНакопленнаяНДС + ВТ_ДанныеДляРасчета.ПриходнаяСумма) / ВТ_ДанныеДляРасчета.СуммаПоНабору КАК ЧИСЛО(15, 2))) - (ВЫРАЗИТЬ(ВТ_ДанныеДляРасчета.СуммаНДС * ВТ_ДанныеДляРасчета.БазаНакопленнаяНДС / ВТ_ДанныеДляРасчета.СуммаПоНабору КАК ЧИСЛО(15, 2))) КАК СуммаНДС,
	|	ВТ_ДанныеДляРасчета.СтавкаНДС КАК СтавкаНДС,
	|	ВТ_ДанныеДляРасчета.НомерГТД КАК НомерГТД,
	|	ВТ_ДанныеДляРасчета.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВТ_ДанныеДляРасчета.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ДанныеДляРасчета.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_ДанныеДляРасчета.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента
	|ПОМЕСТИТЬ ВТ_РасчитанныеДанные
	|ИЗ
	|	ВТ_ДанныеДляРасчета КАК ВТ_ДанныеДляРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_РасчитанныеДанные.Номенклатура КАК Номенклатура,
	|	ВТ_РасчитанныеДанные.Количество КАК Количество,
	|	ВЫРАЗИТЬ(ВТ_РасчитанныеДанные.Сумма / ВТ_РасчитанныеДанные.Количество КАК ЧИСЛО(15, 2)) КАК Цена,
	|	ВТ_РасчитанныеДанные.Сумма КАК Сумма,
	|	ВТ_РасчитанныеДанные.СтавкаНДС КАК СтавкаНДС,
	|	ВТ_РасчитанныеДанные.СуммаНДС КАК СуммаНДС,
	|	ВТ_РасчитанныеДанные.НомерГТД КАК ГТД,
	|	ВТ_РасчитанныеДанные.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВТ_РасчитанныеДанные.ТипЗапасов КАК ТипЗапасов,
	|	ВТ_РасчитанныеДанные.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_РасчитанныеДанные.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВТ_РасчитанныеДанные.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента
	|ПОМЕСТИТЬ ВТ_Наборы
	|ИЗ
	|	ВТ_РасчитанныеДанные КАК ВТ_РасчитанныеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВТ_Товары.Количество КАК Количество,
	|	ВТ_Товары.Цена КАК Цена,
	|	ВТ_Товары.Сумма КАК Сумма,
	|	ВТ_Товары.СтавкаНДС КАК СтавкаНДС,
	|	ВТ_Товары.СуммаНДС КАК СуммаНДС,
	|	ВТ_Товары.ГТД КАК ГТД,
	|	ВТ_Товары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВТ_Товары.ТипЗапасов КАК ТипЗапасов,
	|	ВТ_Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_Товары.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ВТ_Товары.Номенклатура.ЕдиницаПрослеживаемости КАК ЕдиницаИзмеренияПрослеживаемости,
	|	ВТ_Товары.Номенклатура.ПодлежитПрослеживаемости КАК ПрослеживаемыйТовар,
	|	ИСТИНА КАК ЭтоТовар,
	|	0 КАК КоличествоРНПТ,
	|	ВТ_Товары.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Наборы.Номенклатура,
	|	ВТ_Наборы.Количество,
	|	ВТ_Наборы.Цена,
	|	ВТ_Наборы.Сумма,
	|	ВТ_Наборы.СтавкаНДС,
	|	ВТ_Наборы.СуммаНДС,
	|	ВТ_Наборы.ГТД,
	|	ВТ_Наборы.СтранаПроисхождения,
	|	ВТ_Наборы.ТипЗапасов,
	|	ВТ_Наборы.ЕдиницаИзмерения,
	|	ВТ_Наборы.ХарактеристикаНоменклатуры,
	|	ВТ_Наборы.Номенклатура.ЕдиницаПрослеживаемости,
	|	ВТ_Наборы.Номенклатура.ПодлежитПрослеживаемости,
	|	ЛОЖЬ,
	|	0,
	|	ВТ_Наборы.УникальныйНомерСтрокиДокумента
	|ИЗ
	|	ВТ_Наборы КАК ВТ_Наборы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтчетОтделаТовары.Номенклатура,
	|	ОтчетОтделаТовары.Количество * ОтчетОтделаТовары.Коэффициент,
	|	ОтчетОтделаТовары.РозничнаяЦена,
	|	ОтчетОтделаТовары.Всего,
	|	ВЫБОР
	|		КОГДА &НеВыделятьНДСВДокументахРозничнойПродажи
	|			ТОГДА ""БезНДС""
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ОтчетОтделаТовары.СтавкаНДС.ПроцентНДС = 20
	|						ИЛИ ОтчетОтделаТовары.СтавкаНДС.ПроцентНДС = 18
	|					ТОГДА ""НДС20""
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ОтчетОтделаТовары.СтавкаНДС.ПроцентНДС = 10
	|							ТОГДА ""НДС10""
	|						ИНАЧЕ ""БезНДС""
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &НеВыделятьНДСВДокументахРозничнойПродажи
	|			ТОГДА 0
	|		ИНАЧЕ ОтчетОтделаТовары.СуммаНДС
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(Справочник.ГТД.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка),
	|	"""",
	|	ОтчетОтделаТовары.Единица.ЕдиницаПоКлассификатору,
	|	"""",
	|	ОтчетОтделаТовары.Номенклатура.ЕдиницаПрослеживаемости,
	|	ОтчетОтделаТовары.Номенклатура.ПодлежитПрослеживаемости,
	|	ЛОЖЬ,
	|	0,
	|	ОтчетОтделаТовары.УникальныйНомерСтрокиДокумента
	|ИЗ
	|	Документ.ОтчетОтдела.Товары КАК ОтчетОтделаТовары
	|ГДЕ
	|	ОтчетОтделаТовары.Ссылка = &Ссылка
	|	И ОтчетОтделаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И &ОрганизацияОтчетОтдела = &ОрганизацияСлужебныйДокумент";

	Если ЗначениеЗаполнено(ДанныеИБ.Документ.Фирма) Тогда
		ОрганизацияОтчетОтдела = ДанныеИБ.Документ.Фирма;
	Иначе
		ОрганизацияОтчетОтдела = Константы.ОсновнаяФирма.Получить();
	КонецЕсли;	

	Запрос.УстановитьПараметр("ОрганизацияОтчетОтдела", ОрганизацияОтчетОтдела);
	Запрос.УстановитьПараметр("ОрганизацияСлужебныйДокумент", ДанныеИБ.Организация);

	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Документ);
	Запрос.УстановитьПараметр("Организация", ДанныеИБ.Организация);
	Запрос.УстановитьПараметр("НеВыделятьНДСВДокументахРозничнойПродажи", НеВыделятьНДСВДокументахРозничнойПродажи); 

	ТаблицаПродажПромежуточная = Запрос.Выполнить().Выгрузить();   
	ТаблицаПродажПромежуточная.Колонки.Добавить("НомерГТД"); 
	Если КомпонентыОбмена.УзелКорреспондента.ВыгружатьТаруКакВозвратнуюТару Тогда
		ТаблицаПродажПромежуточная.Колонки.Добавить("Свертка");   
	КонецЕсли;	

	ТаблицаПродаж = ТаблицаПродажПромежуточная.СкопироватьКолонки(); 

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Прослеживаемость_ОстаткиНоменклатуры.КоличествоБазовое КАК КоличествоБазовое,
	|	Прослеживаемость_ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента,
	|	Прослеживаемость_ОстаткиНоменклатуры.РНПТ КАК РНПТ
	|ИЗ
	|	РегистрНакопления.Прослеживаемость_ОстаткиНоменклатуры КАК Прослеживаемость_ОстаткиНоменклатуры
	|ГДЕ
	|	Прослеживаемость_ОстаткиНоменклатуры.ДокументОперации = &ДокументОперации"; 

	Запрос.УстановитьПараметр("ДокументОперации", ДанныеИБ.Документ); 
	ТаблицаПрослеживаемости = Запрос.Выполнить().Выгрузить();

	Для Каждого СторокаТаблицы Из ТаблицаПродажПромежуточная Цикл

		Если КомпонентыОбмена.УзелКорреспондента.ВыгружатьТаруКакВозвратнуюТару Тогда   
			Если СторокаТаблицы.Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Тара Тогда  
				СторокаТаблицы.ТипЗапасов = "ВозвратнаяТара";  
				СторокаТаблицы.Свертка = Ложь;
			Иначе
				СторокаТаблицы.Свертка = Истина;
			КонецЕсли;
		КонецЕсли; 

		СуммаПоПозиции = СторокаТаблицы.Сумма;
		НДСПоПозиции = СторокаТаблицы.СуммаНДС;
		НарастающийИтогНДС = 0;
		НарастающийИтогСумма = 0;
		КоличествоПоПозиции = СторокаТаблицы.Количество; 
		УбывающийИтогКоличество = СторокаТаблицы.Количество;

		Если СторокаТаблицы.ПрослеживаемыйТовар = Истина И СторокаТаблицы.ЭтоТовар = Истина Тогда
			СтрокиПрослеживаемости = ТаблицаПрослеживаемости.НайтиСтроки(Новый Структура("УникальныйНомерСтрокиДокумента", СторокаТаблицы.УникальныйНомерСтрокиДокумента));

			Для Каждого СтрокаТаблицыПрослежеваемости Из СтрокиПрослеживаемости Цикл

				Если СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0 Тогда
					Продолжить;
				КонецЕсли;	
				Если УбывающийИтогКоличество = 0 Тогда
					Прервать;
				КонецЕсли;	
				Если УбывающийИтогКоличество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаПродаж.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					УбывающийИтогКоличество = 0;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
					Если НарастающийИтогНДС <> НДСПоПозиции Тогда
						ДельтаНДС = НДСПоПозиции - НарастающийИтогНДС;
						НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2) + ДельтаНДС; 
					КонецЕсли;	
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
				ИначеЕсли УбывающийИтогКоличество > СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаПродаж.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					УбывающийИтогКоличество = УбывающийИтогКоличество - СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
				ИначеЕсли УбывающийИтогКоличество < СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда	
					НоваяСтрока = ТаблицаПродаж.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = УбывающийИтогКоличество;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = СтрокаТаблицыПрослежеваемости.КоличествоБазовое - УбывающийИтогКоличество; 
					УбывающийИтогКоличество = 0;
					Если НарастающийИтогНДС <> НДСПоПозиции Тогда
						ДельтаНДС = НДСПоПозиции - НарастающийИтогНДС;
						НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2) + ДельтаНДС; 
					КонецЕсли;	
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
				КонецЕсли;
			КонецЦикла;	
		Иначе	
			НоваяСтрока = ТаблицаПродаж.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
			#Удаление
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СторокаТаблицы.ГТД, СторокаТаблицы.ГТД.НомерГТД, СторокаТаблицы.ГТД.СтранаПроисхождения, СторокаТаблицы.ГТД.ЭтоРНПТ)); 
			#КонецУдаления
			#Вставка
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ," 
													,?(СторокаТаблицы.ГТД = Null, Справочники.ГТД.ПустаяСсылка(), СторокаТаблицы.ГТД)
													,?(СторокаТаблицы.ГТД = Null, "", СторокаТаблицы.ГТД.НомерГТД), 
													,?(СторокаТаблицы.ГТД = Null, Справочники.СтраныМира.ПустаяСсылка(), СторокаТаблицы.ГТД.СтранаПроисхождения)
													,?(СторокаТаблицы.ГТД = Null, Ложь, СторокаТаблицы.ГТД.ЭтоРНПТ)));
			#КонецВставки
		КонецЕсли;	
	КонецЦикла;	 

	Если КомпонентыОбмена.УзелКорреспондента.СворачиватьТЧДокументовПоТоварамИзСтавокНДС Тогда
		КолонкиГруппировок = "Номенклатура, ЕдиницаИзмерения, СтавкаНДС, ТипЗапасов";
		КолонкиСуммирования = "Количество, Цена, Сумма, СуммаНДС";
		ТаблицаПродаж = ПроизвестиСверткуКоллекцииОбъектовПоНоменклатуре(ТаблицаПродаж, КолонкиГруппировок, КолонкиСуммирования, "ОтчетОтдела", Неопределено);
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ОтчетОтделаВозвраты.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента,
	|	ОтчетОтделаВозвраты.Всего КАК Сумма,
	|	ОтчетОтделаВозвраты.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА &НеВыделятьНДСВДокументахРозничнойПродажи
	|				ИЛИ ОтчетОтделаВозвраты.Ссылка.ВариантРасчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаНДС.БезНДС)
	|			ТОГДА ""БезНДС""
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ОтчетОтделаВозвраты.СтавкаНДС.ПроцентНДС = 20
	|						ИЛИ ОтчетОтделаВозвраты.СтавкаНДС.ПроцентНДС = 18
	|					ТОГДА ""НДС20""
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ОтчетОтделаВозвраты.СтавкаНДС.ПроцентНДС = 10
	|							ТОГДА ""НДС10""
	|						ИНАЧЕ ""БезНДС""
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА &НеВыделятьНДСВДокументахРозничнойПродажи
	|				ИЛИ ОтчетОтделаВозвраты.Ссылка.ВариантРасчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаНДС.БезНДС)
	|			ТОГДА 0
	|		ИНАЧЕ ОтчетОтделаВозвраты.СуммаНДС
	|	КОНЕЦ КАК СуммаНДС,
	|	ОтчетОтделаВозвраты.РозничнаяЦена КАК Цена,
	|	ОтчетОтделаВозвраты.Коэффициент КАК Коэффициент,
	|	ОтчетОтделаВозвраты.Единица.ЕдиницаПоКлассификатору КАК ЕдиницаИзмерения,
	|	ОтчетОтделаВозвраты.НомерЧекаПродажи КАК НомерЧекаПродажи,
	|	ОтчетОтделаВозвраты.ДатаЧекаПродажи КАК ДатаЧекаПродажи,
	|	ОтчетОтделаВозвраты.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	|ПОМЕСТИТЬ ВТ_ТабличнаяЧасть
	|ИЗ
	|	Документ.ОтчетОтдела.Возвраты КАК ОтчетОтделаВозвраты
	|ГДЕ
	|	ОтчетОтделаВозвраты.Ссылка = &Ссылка
	|	И ОтчетОтделаВозвраты.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Набор)
	|	И ОтчетОтделаВозвраты.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И ОтчетОтделаВозвраты.Количество > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ОстаткиНоменклатуры.Количество) КАК КоличествоПоУНСД,
	|	ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента
	|ПОМЕСТИТЬ ВТ_КоличествоПоУНСД
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|ГДЕ
	|	ОстаткиНоменклатуры.Регистратор = &Ссылка
	|	И ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента В
	|			(ВЫБРАТЬ
	|				ВТ_ТабличнаяЧасть.УникальныйНомерСтрокиДокумента
	|			ИЗ
	|				ВТ_ТабличнаяЧасть КАК ВТ_ТабличнаяЧасть)
	|	И ОстаткиНоменклатуры.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОпераций.ВозвратОтПокупателяРозница)
	|	И ОстаткиНоменклатуры.Фирма = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНоменклатуры.Номенклатура КАК Номенклатура,
	|	СУММА(ОстаткиНоменклатуры.Количество) КАК Количество,
	|	ВЫБОР
	|		КОГДА ОстаткиНоменклатуры.Партия.НаРеализации = ИСТИНА
	|			ТОГДА ""КомиссионныеТовары""
	|		ИНАЧЕ ""СобственныеТовары""
	|	КОНЕЦ КАК ТипЗапасов,
	|	ОстаткиНоменклатуры.Партия.ГТД КАК ГТД,
	|	ОстаткиНоменклатуры.Партия.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента,
	|	ВТ_КоличествоПоУНСД.КоличествоПоУНСД КАК КоличествоПоУНСД
	|ПОМЕСТИТЬ ВТ_Движения
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоличествоПоУНСД КАК ВТ_КоличествоПоУНСД
	|		ПО ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента = ВТ_КоличествоПоУНСД.УникальныйНомерСтрокиДокумента
	|ГДЕ
	|	ОстаткиНоменклатуры.Регистратор = &Ссылка
	|	И ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента В
	|			(ВЫБРАТЬ
	|				ВТ_ТабличнаяЧасть.УникальныйНомерСтрокиДокумента
	|			ИЗ
	|				ВТ_ТабличнаяЧасть КАК ВТ_ТабличнаяЧасть)
	|	И ОстаткиНоменклатуры.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОпераций.ВозвратОтПокупателяРозница)
	|	И ОстаткиНоменклатуры.Фирма = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента,
	|	ОстаткиНоменклатуры.Номенклатура,
	|	ВЫБОР
	|		КОГДА ОстаткиНоменклатуры.Партия.НаРеализации = ИСТИНА
	|			ТОГДА ""КомиссионныеТовары""
	|		ИНАЧЕ ""СобственныеТовары""
	|	КОНЕЦ,
	|	ОстаткиНоменклатуры.Партия.ГТД,
	|	ОстаткиНоменклатуры.Партия.СтранаПроисхождения,
	|	ВТ_КоличествоПоУНСД.КоличествоПоУНСД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Движения.Номенклатура КАК Номенклатура,
	|	ВТ_Движения.Количество КАК Количество,
	|	ВТ_ТабличнаяЧасть.Цена КАК Цена,
	|	ВЫБОР
	|		КОГДА ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент = ВТ_Движения.КоличествоПоУНСД
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент = ВТ_Движения.Количество
	|						ТОГДА ВТ_ТабличнаяЧасть.Сумма
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ВТ_Движения.ТипЗапасов = ""СобственныеТовары""
	|								ТОГДА ВЫРАЗИТЬ(ВТ_ТабличнаяЧасть.Сумма * ВТ_Движения.Количество / (ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент) КАК ЧИСЛО(15, 2))
	|							ИНАЧЕ ВТ_ТабличнаяЧасть.Сумма - (ВЫРАЗИТЬ(ВТ_ТабличнаяЧасть.Сумма * (ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент - ВТ_Движения.Количество) / (ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент) КАК ЧИСЛО(15, 2)))
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ ВЫРАЗИТЬ(ВТ_ТабличнаяЧасть.Сумма * ВТ_Движения.Количество / (ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК Сумма,
	|	ВТ_ТабличнаяЧасть.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент = ВТ_Движения.КоличествоПоУНСД
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент = ВТ_Движения.Количество
	|						ТОГДА ВТ_ТабличнаяЧасть.СуммаНДС
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ВТ_Движения.ТипЗапасов = ""СобственныеТовары""
	|								ТОГДА ВЫРАЗИТЬ(ВТ_ТабличнаяЧасть.СуммаНДС * ВТ_Движения.Количество / (ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент) КАК ЧИСЛО(15, 2))
	|							ИНАЧЕ ВТ_ТабличнаяЧасть.СуммаНДС - (ВЫРАЗИТЬ(ВТ_ТабличнаяЧасть.СуммаНДС * (ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент - ВТ_Движения.Количество) / (ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент) КАК ЧИСЛО(15, 2)))
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ ВЫРАЗИТЬ(ВТ_ТабличнаяЧасть.СуммаНДС * ВТ_Движения.Количество / (ВТ_ТабличнаяЧасть.Количество * ВТ_ТабличнаяЧасть.Коэффициент) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаНДС,
	|	ВТ_Движения.ГТД КАК ГТД,
	|	ВТ_Движения.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВТ_Движения.ТипЗапасов КАК ТипЗапасов,
	|	ВТ_ТабличнаяЧасть.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ТабличнаяЧасть.НомерЧекаПродажи КАК НомерЧекаПродажи,
	|	ВТ_ТабличнаяЧасть.ДатаЧекаПродажи КАК ДатаЧекаПродажи,
	|	ВТ_ТабличнаяЧасть.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	ВТ_Движения КАК ВТ_Движения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧасть КАК ВТ_ТабличнаяЧасть
	|		ПО ВТ_Движения.УникальныйНомерСтрокиДокумента = ВТ_ТабличнаяЧасть.УникальныйНомерСтрокиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетОтделаВозвраты.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента,
	|	ОтчетОтделаВозвраты.Всего КАК Сумма,
	|	ВЫБОР
	|		КОГДА &НеВыделятьНДСВДокументахРозничнойПродажи
	|				ИЛИ ОтчетОтделаВозвраты.Ссылка.ВариантРасчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаНДС.БезНДС)
	|			ТОГДА ""БезНДС""
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ОтчетОтделаВозвраты.СтавкаНДС.ПроцентНДС = 20
	|						ИЛИ ОтчетОтделаВозвраты.СтавкаНДС.ПроцентНДС = 18
	|					ТОГДА ""НДС20""
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ОтчетОтделаВозвраты.СтавкаНДС.ПроцентНДС = 10
	|							ТОГДА ""НДС10""
	|						ИНАЧЕ ""БезНДС""
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА &НеВыделятьНДСВДокументахРозничнойПродажи
	|				ИЛИ ОтчетОтделаВозвраты.Ссылка.ВариантРасчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаНДС.БезНДС)
	|			ТОГДА 0
	|		ИНАЧЕ ОтчетОтделаВозвраты.СуммаНДС
	|	КОНЕЦ КАК СуммаНДС,
	|	ОтчетОтделаВозвраты.Единица.ЕдиницаПоКлассификатору КАК ЕдиницаИзмерения,
	|	ОтчетОтделаВозвраты.НомерЧекаПродажи КАК НомерЧекаПродажи,
	|	ОтчетОтделаВозвраты.ДатаЧекаПродажи КАК ДатаЧекаПродажи
	|ПОМЕСТИТЬ ВТ_ТабличнаяЧастьНаборы
	|ИЗ
	|	Документ.ОтчетОтдела.Возвраты КАК ОтчетОтделаВозвраты
	|ГДЕ
	|	ОтчетОтделаВозвраты.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Набор)
	|	И ОтчетОтделаВозвраты.Ссылка = &Ссылка
	|	И ОтчетОтделаВозвраты.Количество > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНоменклатуры.Номенклатура КАК Номенклатура,
	|	СУММА(ОстаткиНоменклатуры.Количество) КАК Количество,
	|	ВЫБОР
	|		КОГДА ОстаткиНоменклатуры.Партия.НаРеализации = ИСТИНА
	|			ТОГДА ""КомиссионныеТовары""
	|		ИНАЧЕ ""СобственныеТовары""
	|	КОНЕЦ КАК ТипЗапасов,
	|	ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента,
	|	СУММА(ОстаткиНоменклатуры.ПриходнаяСуммаВРеглВал) КАК ПриходнаяСумма,
	|	ОстаткиНоменклатуры.Партия.ГТД КАК НомерГТД,
	|	ОстаткиНоменклатуры.Партия.СтранаПроисхождения КАК СтранаПроисхождения,
	|	АВТОНОМЕРЗАПИСИ() КАК НомерСтроки,
	|	ОстаткиНоменклатуры.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	|ПОМЕСТИТЬ ВТ_ДвиженияНаборы
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|ГДЕ
	|	ОстаткиНоменклатуры.Регистратор = &Ссылка
	|	И ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента В
	|			(ВЫБРАТЬ
	|				ВТ_ТабличнаяЧастьНаборы.УникальныйНомерСтрокиДокумента
	|			ИЗ
	|				ВТ_ТабличнаяЧастьНаборы КАК ВТ_ТабличнаяЧастьНаборы)
	|	И ОстаткиНоменклатуры.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОпераций.ВозвратОтПокупателяРозница)
	|	И ОстаткиНоменклатуры.Фирма = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента,
	|	ОстаткиНоменклатуры.Номенклатура,
	|	ВЫБОР
	|		КОГДА ОстаткиНоменклатуры.Партия.НаРеализации = ИСТИНА
	|			ТОГДА ""КомиссионныеТовары""
	|		ИНАЧЕ ""СобственныеТовары""
	|	КОНЕЦ,
	|	ОстаткиНоменклатуры.Партия.ГТД,
	|	ОстаткиНоменклатуры.Партия.СтранаПроисхождения,
	|	ОстаткиНоменклатуры.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ОстаткиНоменклатуры.ПриходнаяСуммаВРеглВал) КАК СуммаПоНабору,
	|	ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента
	|ПОМЕСТИТЬ ВТ_СуммаПоНабору
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|ГДЕ
	|	ОстаткиНоменклатуры.Регистратор = &Ссылка
	|	И ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента В
	|			(ВЫБРАТЬ
	|				ВТ_ТабличнаяЧастьНаборы.УникальныйНомерСтрокиДокумента
	|			ИЗ
	|				ВТ_ТабличнаяЧастьНаборы КАК ВТ_ТабличнаяЧастьНаборы)
	|	И ОстаткиНоменклатуры.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОпераций.ВозвратОтПокупателяРозница)
	|	И ОстаткиНоменклатуры.Фирма = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 100000
	|	ВТ_ДвиженияНаборы.Номенклатура КАК Номенклатура,
	|	ВТ_ДвиженияНаборы.Количество КАК Количество,
	|	ВТ_ДвиженияНаборы.ТипЗапасов КАК ТипЗапасов,
	|	ВТ_ДвиженияНаборы.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента,
	|	ВТ_ДвиженияНаборы.ПриходнаяСумма КАК ПриходнаяСумма,
	|	ВЫБОР
	|		КОГДА ВТ_СуммаПоНабору.СуммаПоНабору <> 0
	|			ТОГДА ВТ_СуммаПоНабору.СуммаПоНабору
	|		ИНАЧЕ ВТ_ТабличнаяЧастьНаборы.Сумма
	|	КОНЕЦ КАК СуммаПоНабору,
	|	ВТ_ТабличнаяЧастьНаборы.Сумма КАК Сумма,
	|	ВТ_ДвиженияНаборы.НомерСтроки КАК НомерСтроки,
	|	ВТ_ТабличнаяЧастьНаборы.СтавкаНДС КАК СтавкаНДС,
	|	ВТ_ТабличнаяЧастьНаборы.СуммаНДС КАК СуммаНДС,
	|	ВТ_ДвиженияНаборы.НомерГТД КАК НомерГТД,
	|	ВТ_ДвиженияНаборы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВТ_ТабличнаяЧастьНаборы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ТабличнаяЧастьНаборы.НомерЧекаПродажи КАК НомерЧекаПродажи,
	|	ВТ_ТабличнаяЧастьНаборы.ДатаЧекаПродажи КАК ДатаЧекаПродажи,
	|	ВТ_ДвиженияНаборы.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	|ПОМЕСТИТЬ ВТ_ОбъедененныеДанные
	|ИЗ
	|	ВТ_ДвиженияНаборы КАК ВТ_ДвиженияНаборы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СуммаПоНабору КАК ВТ_СуммаПоНабору
	|		ПО ВТ_ДвиженияНаборы.УникальныйНомерСтрокиДокумента = ВТ_СуммаПоНабору.УникальныйНомерСтрокиДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТабличнаяЧастьНаборы КАК ВТ_ТабличнаяЧастьНаборы
	|		ПО ВТ_ДвиженияНаборы.УникальныйНомерСтрокиДокумента = ВТ_ТабличнаяЧастьНаборы.УникальныйНомерСтрокиДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	УникальныйНомерСтрокиДокумента,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Данные1.Номенклатура КАК Номенклатура,
	|	ВТ_Данные1.Количество КАК Количество,
	|	ВТ_Данные1.ТипЗапасов КАК ТипЗапасов,
	|	ВТ_Данные1.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента,
	|	ВТ_Данные1.ПриходнаяСумма КАК ПриходнаяСумма,
	|	ВТ_Данные1.СуммаПоНабору КАК СуммаПоНабору,
	|	ВТ_Данные1.Сумма КАК Сумма,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(ВТ_Данные2.ПриходнаяСумма), 0) КАК ЧИСЛО(15, 2)) КАК БазаНакопленная,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(ВТ_Данные2.СуммаНДС), 0) КАК ЧИСЛО(15, 2)) КАК БазаНакопленнаяНДС,
	|	ВТ_Данные1.НомерСтроки КАК НомерСтроки,
	|	ВТ_Данные1.СтавкаНДС КАК СтавкаНДС,
	|	ВТ_Данные1.СуммаНДС КАК СуммаНДС,
	|	ВТ_Данные1.НомерГТД КАК НомерГТД,
	|	ВТ_Данные1.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВТ_Данные1.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_Данные1.НомерЧекаПродажи КАК НомерЧекаПродажи,
	|	ВТ_Данные1.ДатаЧекаПродажи КАК ДатаЧекаПродажи,
	|	ВТ_Данные1.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	|ПОМЕСТИТЬ ВТ_ДанныеДляРасчета
	|ИЗ
	|	ВТ_ОбъедененныеДанные КАК ВТ_Данные1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОбъедененныеДанные КАК ВТ_Данные2
	|		ПО ВТ_Данные1.НомерСтроки > ВТ_Данные2.НомерСтроки
	|			И ВТ_Данные1.УникальныйНомерСтрокиДокумента = ВТ_Данные2.УникальныйНомерСтрокиДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Данные1.НомерСтроки,
	|	ВТ_Данные1.ПриходнаяСумма,
	|	ВТ_Данные1.Номенклатура,
	|	ВТ_Данные1.Количество,
	|	ВТ_Данные1.ТипЗапасов,
	|	ВТ_Данные1.УникальныйНомерСтрокиДокумента,
	|	ВТ_Данные1.СуммаПоНабору,
	|	ВТ_Данные1.Сумма,
	|	ВТ_Данные1.СтавкаНДС,
	|	ВТ_Данные1.СуммаНДС,
	|	ВТ_Данные1.НомерГТД,
	|	ВТ_Данные1.СтранаПроисхождения,
	|	ВТ_Данные1.ЕдиницаИзмерения,
	|	ВТ_Данные1.НомерЧекаПродажи,
	|	ВТ_Данные1.ДатаЧекаПродажи,
	|	ВТ_Данные1.ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеДляРасчета.Номенклатура КАК Номенклатура,
	|	ВТ_ДанныеДляРасчета.Количество КАК Количество,
	|	ВТ_ДанныеДляРасчета.ТипЗапасов КАК ТипЗапасов,
	|	ВТ_ДанныеДляРасчета.НомерСтроки КАК НомерСтроки,
	|	(ВЫРАЗИТЬ(ВТ_ДанныеДляРасчета.Сумма * (ВТ_ДанныеДляРасчета.БазаНакопленная + ВТ_ДанныеДляРасчета.ПриходнаяСумма) / ВТ_ДанныеДляРасчета.СуммаПоНабору КАК ЧИСЛО(15, 2))) - (ВЫРАЗИТЬ(ВТ_ДанныеДляРасчета.Сумма * ВТ_ДанныеДляРасчета.БазаНакопленная / ВТ_ДанныеДляРасчета.СуммаПоНабору КАК ЧИСЛО(15, 2))) КАК Сумма,
	|	(ВЫРАЗИТЬ(ВТ_ДанныеДляРасчета.СуммаНДС * (ВТ_ДанныеДляРасчета.БазаНакопленнаяНДС + ВТ_ДанныеДляРасчета.ПриходнаяСумма) / ВТ_ДанныеДляРасчета.СуммаПоНабору КАК ЧИСЛО(15, 2))) - (ВЫРАЗИТЬ(ВТ_ДанныеДляРасчета.СуммаНДС * ВТ_ДанныеДляРасчета.БазаНакопленнаяНДС / ВТ_ДанныеДляРасчета.СуммаПоНабору КАК ЧИСЛО(15, 2))) КАК СуммаНДС,
	|	ВТ_ДанныеДляРасчета.СтавкаНДС КАК СтавкаНДС,
	|	ВТ_ДанныеДляРасчета.НомерГТД КАК НомерГТД,
	|	ВТ_ДанныеДляРасчета.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВТ_ДанныеДляРасчета.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_ДанныеДляРасчета.НомерЧекаПродажи КАК НомерЧекаПродажи,
	|	ВТ_ДанныеДляРасчета.ДатаЧекаПродажи КАК ДатаЧекаПродажи,
	|	ВТ_ДанныеДляРасчета.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	|ПОМЕСТИТЬ ВТ_РасчитанныеДанные
	|ИЗ
	|	ВТ_ДанныеДляРасчета КАК ВТ_ДанныеДляРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_РасчитанныеДанные.Номенклатура КАК Номенклатура,
	|	ВТ_РасчитанныеДанные.Количество КАК Количество,
	|	ВЫРАЗИТЬ(ВТ_РасчитанныеДанные.Сумма / ВТ_РасчитанныеДанные.Количество КАК ЧИСЛО(15, 2)) КАК Цена,
	|	ВТ_РасчитанныеДанные.Сумма КАК Сумма,
	|	ВТ_РасчитанныеДанные.СтавкаНДС КАК СтавкаНДС,
	|	ВТ_РасчитанныеДанные.СуммаНДС КАК СуммаНДС,
	|	ВТ_РасчитанныеДанные.НомерГТД КАК ГТД,
	|	ВТ_РасчитанныеДанные.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВТ_РасчитанныеДанные.ТипЗапасов КАК ТипЗапасов,
	|	ВТ_РасчитанныеДанные.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_РасчитанныеДанные.НомерЧекаПродажи КАК НомерЧекаПродажи,
	|	ВТ_РасчитанныеДанные.ДатаЧекаПродажи КАК ДатаЧекаПродажи,
	|	ВТ_РасчитанныеДанные.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	|ПОМЕСТИТЬ ВТ_Наборы
	|ИЗ
	|	ВТ_РасчитанныеДанные КАК ВТ_РасчитанныеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВТ_Товары.Количество КАК Количество,
	|	ВТ_Товары.Цена КАК Цена,
	|	ВТ_Товары.Сумма КАК Сумма,
	|	ВТ_Товары.СтавкаНДС КАК СтавкаНДС,
	|	ВТ_Товары.СуммаНДС КАК СуммаНДС,
	|	ВТ_Товары.ГТД КАК НомерГТД,
	|	ВТ_Товары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВТ_Товары.ТипЗапасов КАК ТипЗапасов,
	|	ВТ_Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_Товары.НомерЧекаПродажи КАК НомерЧекаККМПродажи,
	|	ВТ_Товары.ДатаЧекаПродажи КАК ДатаПродажи,
	|	ВТ_Товары.ХарактеристикаНоменклатуры КАК Характеристика
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Наборы.Номенклатура,
	|	ВТ_Наборы.Количество,
	|	ВТ_Наборы.Цена,
	|	ВТ_Наборы.Сумма,
	|	ВТ_Наборы.СтавкаНДС,
	|	ВТ_Наборы.СуммаНДС,
	|	ВТ_Наборы.ГТД,
	|	ВТ_Наборы.СтранаПроисхождения,
	|	ВТ_Наборы.ТипЗапасов,
	|	ВТ_Наборы.ЕдиницаИзмерения,
	|	ВТ_Наборы.НомерЧекаПродажи,
	|	ВТ_Наборы.ДатаЧекаПродажи,
	|	ВТ_Наборы.ХарактеристикаНоменклатуры
	|ИЗ
	|	ВТ_Наборы КАК ВТ_Наборы";	

	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Документ);
	Запрос.УстановитьПараметр("Организация", ДанныеИБ.Организация);
	Запрос.УстановитьПараметр("НеВыделятьНДСВДокументахРозничнойПродажи", НеВыделятьНДСВДокументахРозничнойПродажи);
	ТаблицаВозвратов = Запрос.Выполнить().Выгрузить();  

	Для Каждого Строка Из ТаблицаВозвратов Цикл  
		СтруктураГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", Строка.НомерГТД, Строка.НомерГТД.НомерГТД, Строка.НомерГТД.СтранаПроисхождения, Строка.НомерГТД.ЭтоРНПТ)); 
		НоваяСтрока.НомерГТД = СтруктураГТД;
	КонецЦикла;

	Если КомпонентыОбмена.УзелКорреспондента.СворачиватьТЧДокументовПоТоварамИзСтавокНДС Тогда
		Для Каждого Строка Из ТаблицаВозвратов Цикл
			Строка.Номенклатура = Строка.Номенклатура.СтавкаНДС.НоменклатураДляВыгрузкиВБухгалтерии;
		КонецЦикла;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	""б/н"" КАК НомерКарты,
	|	ОтчетОтделаВидыОплат.Сумма КАК СуммаОплаты,
	|	ВЫБОР
	|		КОГДА ОтчетОтделаВидыОплат.ВидОплатыБух <> ЗНАЧЕНИЕ(Справочник.ВидыОплат.ПустаяСсылка)
	|			ТОГДА ОтчетОтделаВидыОплат.ВидОплатыБух
	|		ИНАЧЕ ОтчетОтделаВидыОплат.ВидОплаты
	|	КОНЕЦ КАК ВидыОплат,
	|	ВЫБОР
	|		КОГДА ОтчетОтделаВидыОплат.ВидОплатыБух <> ЗНАЧЕНИЕ(Справочник.ВидыОплат.ПустаяСсылка)
	|			ТОГДА ОтчетОтделаВидыОплат.ВидОплатыБух.Контрагент
	|		ИНАЧЕ ОтчетОтделаВидыОплат.ВидОплаты.Контрагент
	|	КОНЕЦ КАК Эквайрер,
	|	ОтчетОтделаВидыОплат.ВидОплатыБух.Договор КАК ДоговорЭквайринга
	|ПОМЕСТИТЬ ВТ_ТабличнаяЧасть
	|ИЗ
	|	Документ.ОтчетОтдела.ВидыОплат КАК ОтчетОтделаВидыОплат
	|ГДЕ
	|	ОтчетОтделаВидыОплат.Ссылка = &ДокументСсылка
	|	И ОтчетОтделаВидыОплат.НеФискальный = ЛОЖЬ
	|	И ОтчетОтделаВидыОплат.Сумма <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТабличнаяЧасть.СуммаОплаты КАК СуммаОплаты,
	|	ВТ_ТабличнаяЧасть.НомерКарты КАК НомерКарты,
	|	ВТ_ТабличнаяЧасть.Эквайрер КАК Эквайрер,
	|	ВТ_ТабличнаяЧасть.ДоговорЭквайринга КАК ДоговорЭквайринга
	|ИЗ
	|	ВТ_ТабличнаяЧасть КАК ВТ_ТабличнаяЧасть
	|ГДЕ
	|	(ВТ_ТабличнаяЧасть.ВидыОплат.ТипОплатыККМ = ЗНАЧЕНИЕ(Перечисление.ТипОплатыККМ.Кредит)
	|			ИЛИ ВТ_ТабличнаяЧасть.ВидыОплат.ТипОплатыККМ = ЗНАЧЕНИЕ(Перечисление.ТипОплатыККМ.ПлатежнаяКарта)
	|			ИЛИ ВТ_ТабличнаяЧасть.ВидыОплат.ТипОплатыККМ = ЗНАЧЕНИЕ(Перечисление.ТипОплатыККМ.ПлатежнаяКартаПЦ))";


	Запрос.УстановитьПараметр("ДокументСсылка", ДанныеИБ.Документ);
	ТаблицаОплатаПлатежнымиКартами = Запрос.Выполнить().Выгрузить(); 

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ОтчетОтделаОплатаСертификатами.Сертификат КАК ВидПодарочногоСертификата,
	|	ОтчетОтделаОплатаСертификатами.Сумма КАК Сумма,
	|	ОтчетОтделаОплатаСертификатами.Сертификат.Номер КАК СерийныйНомер
	|ИЗ
	|	Документ.ОтчетОтдела.ОплатаСертификатами КАК ОтчетОтделаОплатаСертификатами
	|ГДЕ
	|	ОтчетОтделаОплатаСертификатами.Ссылка = &ДокументСсылка";

	Запрос.УстановитьПараметр("ДокументСсылка", ДанныеИБ.Документ);
	ТаблицаОплатаСертификатами = Запрос.Выполнить().Выгрузить();    

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ОтчетОтделаПродажиСертификатов.Сертификат КАК ВидПодарочногоСертификата,
	|	ОтчетОтделаПродажиСертификатов.Всего КАК Сумма,
	|	ОтчетОтделаПродажиСертификатов.Сертификат.Номер КАК СерийныйНомер
	|ИЗ
	|	Документ.ОтчетОтдела.ПродажиСертификатов КАК ОтчетОтделаПродажиСертификатов
	|ГДЕ
	|	ОтчетОтделаПродажиСертификатов.Ссылка = &ДокументСсылка";

	Запрос.УстановитьПараметр("ДокументСсылка", ДанныеИБ.Документ);
	ТаблицаПодарочныеСертификаты = Запрос.Выполнить().Выгрузить(); 

	ТаблицаДопРеквизитов = Новый ТаблицаЗначений;
	ТаблицаДопРеквизитов.Колонки.Добавить("Свойство");
	ТаблицаДопРеквизитов.Колонки.Добавить("ЗначениеСвойства");

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Номер ТП7";
	НоваяСтрока.ЗначениеСвойства = ДанныеИБ.Документ.Номер;

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Вид документа ТП7";
	НоваяСтрока.ЗначениеСвойства = "Отчет отдела";

	Если КомпонентыОбмена.УзелКорреспондента.ВыгружатьНомерДокумента Тогда 
		ДанныеXDTO.Вставить("ДополнительныеРеквизиты", ТаблицаДопРеквизитов);
	КонецЕсли;

	Если ТаблицаПродаж.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("ТоварыПродажа", ТаблицаПродаж);
	КонецЕсли;	
	Если ТаблицаВозвратов.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("ТоварыВозвратПродажи", ТаблицаВозвратов);  
	КонецЕсли;	
	Если ТаблицаОплатаПлатежнымиКартами.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("ОплатаПлатежнымиКартами", ТаблицаОплатаПлатежнымиКартами);  
	КонецЕсли;	 
	Если ТаблицаОплатаСертификатами.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("ОплатаСертификатами", ТаблицаОплатаСертификатами);  
	КонецЕсли;	
	Если ТаблицаПодарочныеСертификаты.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("ПодарочныеСертификаты", ТаблицаПодарочныеСертификаты);  
	КонецЕсли;	
	ДанныеXDTO.КлючевыеСвойства.Вставить("Дата", ДатаДокумента);
	ДанныеXDTO.КлючевыеСвойства.Вставить("Номер", НомерДокумента);
	ДанныеXDTO.Вставить("СуммаВключаетНДС", СуммаВключаетНДС);
	ДанныеXDTO.Вставить("Подразделение", Подразделение);       
	ДанныеXDTO.Вставить("Налогообложение", Налогообложение);       
	ДанныеXDTO.Вставить("КассаККМ", КассаККМ);       
	ДанныеXDTO.Вставить("Валюта", Валюта);       
	ДанныеXDTO.Вставить("Сумма", Сумма);       
	ДанныеXDTO.Вставить("Патент", Патент);       
	ДанныеXDTO.Вставить("Ответственный", Ответственный);       
	ДанныеXDTO.Вставить("Комментарий", Комментарий);       
	ДанныеXDTO.Вставить("Склад", Склад);
КонецПроцедуры

&ИзменениеИКонтроль("ПКО_ПересортицаОприходование_ПриОтправкеДанных")
Процедура ИО_ПКО_ПересортицаОприходование_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	ДатаДокумента = ДанныеИБ.Документ.Дата;

	НомерБезПрефикса = Прав(ДанныеИБ.Документ.Номер, 6);
	НомерДокумента = КомпонентыОбмена.УзелКорреспондента.ПрефиксНомераДокументов + Лев(ДанныеИБ.Организация.Префикс, 2) + "-" + НомерБезПрефикса;  

	Если ЗначениеЗаполнено(ДанныеИБ.Документ.Склад.Подразделение) Тогда 
		Подразделение = ДанныеИБ.Документ.Склад.Подразделение;
	Иначе
		Подразделение = КомпонентыОбмена.УзелКорреспондента.Подразделение;
	КонецЕсли;

	Склад = ДанныеИБ.Документ.Склад;
	Ответственный = ДанныеИБ.Документ.Автор;
	Комментарий = ДанныеИБ.Документ.Комментарий;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.ЯвляетсяПлательщикомНДС КАК ЯвляетсяПлательщикомНДС
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&Период, ) КАК УчетнаяПолитикаОрганизацийСрезПоследних
	|ГДЕ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.Организация = &Организация";

	Запрос.УстановитьПараметр("Период", ДанныеИБ.Документ.Дата);
	Запрос.УстановитьПараметр("Организация", ДанныеИБ.Организация);

	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если Выборка.ЯвляетсяПлательщикомНДС Тогда
			Налогообложение = "ПродажаОблагаетсяНДС";
		Иначе
			Налогообложение = "ПродажаНеОблагаетсяНДС";
		КонецЕсли;	
	Иначе
		Налогообложение = "ПродажаОблагаетсяНДС";
	КонецЕсли;	    

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ОстаткиНоменклатуры.Номенклатура КАК Номенклатура,
	|	ОстаткиНоменклатуры.Номенклатура.БазоваяЕдиницаПоКлассификатору КАК ЕдиницаИзмерения,
	|	СУММА(ОстаткиНоменклатуры.Количество) КАК Количество,
	|	ВЫБОР
	|		КОГДА &ЭтоНТТ
	|			ТОГДА ВЫРАЗИТЬ(СУММА(ОстаткиНоменклатуры.РозничнаяСуммаВРеглВал) / СУММА(ОстаткиНоменклатуры.Количество) КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ ВЫРАЗИТЬ(СУММА(ОстаткиНоменклатуры.ПриходнаяСуммаВРеглВал) / СУММА(ОстаткиНоменклатуры.Количество) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК Цена,
	|	СУММА(ВЫБОР
	|			КОГДА &ЭтоНТТ
	|				ТОГДА ОстаткиНоменклатуры.РозничнаяСуммаВРеглВал
	|			ИНАЧЕ ОстаткиНоменклатуры.ПриходнаяСуммаВРеглВал
	|		КОНЕЦ) КАК Сумма,
	|	ВЫБОР
	|		КОГДА ОстаткиНоменклатуры.Партия.НаРеализации = ИСТИНА
	|			ТОГДА ""КомиссионныеТовары""
	|		ИНАЧЕ ""СобственныеТовары""
	|	КОНЕЦ КАК ТипЗапасов,
	|	ОстаткиНоменклатуры.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента,
	|	ОстаткиНоменклатуры.Номенклатура.ЕдиницаПрослеживаемости КАК ЕдиницаИзмеренияПрослеживаемости,
	|	ОстаткиНоменклатуры.Номенклатура.ПодлежитПрослеживаемости КАК ПрослеживаемыйТовар,
	|	ОстаткиНоменклатуры.Партия.ГТД КАК ГТД,
	|	ОстаткиНоменклатуры.Партия.СтранаПроисхождения КАК СтранаПроисхождения,
	|	0 КАК КоличествоРНПТ
	|ПОМЕСТИТЬ ВТ_Промежуточная
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|ГДЕ
	|	ОстаткиНоменклатуры.Фирма = &Организация
	|	И ОстаткиНоменклатуры.Регистратор = &Ссылка
	|	И ОстаткиНоменклатуры.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОпераций.ОприходованиеИзлишков)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатуры.Номенклатура,
	|	ОстаткиНоменклатуры.Номенклатура.БазоваяЕдиницаПоКлассификатору,
	|	ВЫБОР
	|		КОГДА ОстаткиНоменклатуры.Партия.НаРеализации = ИСТИНА
	|			ТОГДА ""КомиссионныеТовары""
	|		ИНАЧЕ ""СобственныеТовары""
	|	КОНЕЦ,
	|	ОстаткиНоменклатуры.ХарактеристикаНоменклатуры,
	|	ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента,
	|	ОстаткиНоменклатуры.Партия.ГТД,
	|	ОстаткиНоменклатуры.Партия.СтранаПроисхождения,
	|	ОстаткиНоменклатуры.Номенклатура.ЕдиницаПрослеживаемости,
	|	ОстаткиНоменклатуры.Номенклатура.ПодлежитПрослеживаемости
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Промежуточная.Номенклатура КАК Номенклатура,
	|	ВТ_Промежуточная.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_Промежуточная.Количество КАК Количество,
	|	ВТ_Промежуточная.Цена КАК Цена,
	|	ВТ_Промежуточная.Сумма КАК Сумма,
	|	ВТ_Промежуточная.ТипЗапасов КАК ТипЗапасов,
	|	ВТ_Промежуточная.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ВТ_Промежуточная.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента,
	|	ВТ_Промежуточная.ЕдиницаИзмеренияПрослеживаемости КАК ЕдиницаИзмеренияПрослеживаемости,
	|	ВТ_Промежуточная.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар,
	|	ВТ_Промежуточная.ГТД КАК ГТД,
	|	ВТ_Промежуточная.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВТ_Промежуточная.КоличествоРНПТ КАК КоличествоРНПТ
	|ИЗ
	|	ВТ_Промежуточная КАК ВТ_Промежуточная
	|ГДЕ
	|	ВТ_Промежуточная.Количество > 0
	|	И ВТ_Промежуточная.Сумма > 0";

	Запрос.УстановитьПараметр("Организация", ДанныеИБ.Организация);
	Запрос.УстановитьПараметр("ЭтоНТТ", ЭтоНТТ(ДанныеИБ.Документ.Склад, ДанныеИБ.Документ.Дата));
	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Документ);

	ТаблицаТоварыПромежуточная = Запрос.Выполнить().Выгрузить();

	ТаблицаТоварыПромежуточная.Колонки.Добавить("НомерГТД");

	ТаблицаТовары = ТаблицаТоварыПромежуточная.СкопироватьКолонки();

	ТаблицаПрослеживаемости = ДанныеИБ.Документ.Прослеживаемости.Выгрузить();

	Для Каждого СторокаТаблицы Из ТаблицаТоварыПромежуточная Цикл

		СуммаПоПозиции = СторокаТаблицы.Сумма;
		НарастающийИтогСумма = 0;
		КоличествоПоПозиции = СторокаТаблицы.Количество; 
		УбывающийИтогКоличество = СторокаТаблицы.Количество;

		Если СторокаТаблицы.ПрослеживаемыйТовар = Истина Тогда
			СтрокиПрослеживаемости = ТаблицаПрослеживаемости.НайтиСтроки(Новый Структура("УникальныйНомерСтрокиДокумента", СторокаТаблицы.УникальныйНомерСтрокиДокумента));

			Для Каждого СтрокаТаблицыПрослежеваемости Из СтрокиПрослеживаемости Цикл

				Если СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0 Тогда
					Продолжить;
				КонецЕсли;	
				Если УбывающийИтогКоличество = 0 Тогда
					Прервать;
				КонецЕсли;	
				Если УбывающийИтогКоличество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					УбывающийИтогКоличество = 0;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
				ИначеЕсли УбывающийИтогКоличество > СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					УбывающийИтогКоличество = УбывающийИтогКоличество - СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
				ИначеЕсли УбывающийИтогКоличество < СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда	
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = УбывающийИтогКоличество;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = СтрокаТаблицыПрослежеваемости.КоличествоБазовое - УбывающийИтогКоличество; 
					УбывающийИтогКоличество = 0;
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
				КонецЕсли;
			КонецЦикла;	
		Иначе	
			НоваяСтрока = ТаблицаТовары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
			#Удаление
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СторокаТаблицы.ГТД, СторокаТаблицы.ГТД.НомерГТД, СторокаТаблицы.ГТД.СтранаПроисхождения, СторокаТаблицы.ГТД.ЭтоРНПТ)); 
			#КонецУдаления
			#Вставка
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ," 
													,?(СторокаТаблицы.ГТД = Null, Справочники.ГТД.ПустаяСсылка(), СторокаТаблицы.ГТД)
													,?(СторокаТаблицы.ГТД = Null, "", СторокаТаблицы.ГТД.НомерГТД), 
													,?(СторокаТаблицы.ГТД = Null, Справочники.СтраныМира.ПустаяСсылка(), СторокаТаблицы.ГТД.СтранаПроисхождения)
													,?(СторокаТаблицы.ГТД = Null, Ложь, СторокаТаблицы.ГТД.ЭтоРНПТ)));
			#КонецВставки
		КонецЕсли;	
	КонецЦикла;	

	Если КомпонентыОбмена.УзелКорреспондента.СворачиватьТЧДокументовПоТоварамИзСтавокНДС Или ЭтоНТТ(ДанныеИБ.Документ.Склад, ДанныеИБ.Документ.Дата) Тогда
		КолонкиГруппировок = "Номенклатура, ЕдиницаИзмерения, ТипЗапасов";
		КолонкиСуммирования = "Количество, Цена, Сумма";
		ТаблицаТовары = ПроизвестиСверткуКоллекцииОбъектовПоНоменклатуре(ТаблицаТовары, КолонкиГруппировок, КолонкиСуммирования, "ПересортицаОприходование", Неопределено);
	КонецЕсли;

	Сумма = ТаблицаТовары.Итог("Сумма");

	ТаблицаДопРеквизитов = Новый ТаблицаЗначений;
	ТаблицаДопРеквизитов.Колонки.Добавить("Свойство");
	ТаблицаДопРеквизитов.Колонки.Добавить("ЗначениеСвойства");

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Номер ТП7";
	НоваяСтрока.ЗначениеСвойства = ДанныеИБ.Документ.Номер;

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Вид документа ТП7";
	НоваяСтрока.ЗначениеСвойства = "Пересортица";

	Если КомпонентыОбмена.УзелКорреспондента.ВыгружатьНомерДокумента Тогда 
		ДанныеXDTO.Вставить("ДополнительныеРеквизиты", ТаблицаДопРеквизитов);
	КонецЕсли;

	Если ТаблицаТовары.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("Товары", ТаблицаТовары);
	КонецЕсли;	
	ДанныеXDTO.Вставить("Сумма", Сумма);
	ДанныеXDTO.КлючевыеСвойства.Вставить("Номер", НомерДокумента);
	ДанныеXDTO.Вставить("Подразделение", Подразделение);
	ДанныеXDTO.Вставить("Налогообложение", Налогообложение);
	ДанныеXDTO.КлючевыеСвойства.Вставить("Дата", ДатаДокумента);
	ДанныеXDTO.Вставить("Склад", Склад);
	ДанныеXDTO.Вставить("Ответственный", Ответственный);
	ДанныеXDTO.Вставить("Комментарий", Комментарий);
КонецПроцедуры

&ИзменениеИКонтроль("ПКО_ПересортицаСписание_ПриОтправкеДанных")
Процедура ИО_ПКО_ПересортицаСписание_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	ДатаДокумента = ДанныеИБ.Документ.Дата;

	НомерБезПрефикса = Прав(ДанныеИБ.Документ.Номер, 6);
	НомерДокумента = КомпонентыОбмена.УзелКорреспондента.ПрефиксНомераДокументов + Лев(ДанныеИБ.Организация.Префикс, 2) + "-" + НомерБезПрефикса;  

	Если ЗначениеЗаполнено(ДанныеИБ.Документ.Склад.Подразделение) Тогда 
		Подразделение = ДанныеИБ.Документ.Склад.Подразделение;
	Иначе
		Подразделение = КомпонентыОбмена.УзелКорреспондента.Подразделение;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.ЯвляетсяПлательщикомНДС КАК ЯвляетсяПлательщикомНДС
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&Период, ) КАК УчетнаяПолитикаОрганизацийСрезПоследних
	|ГДЕ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.Организация = &Организация";

	Запрос.УстановитьПараметр("Период", ДатаДокумента);
	Запрос.УстановитьПараметр("Организация", ДанныеИБ.Организация);

	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если Выборка.ЯвляетсяПлательщикомНДС Тогда
			Налогообложение = "ПродажаОблагаетсяНДС";
		Иначе
			Налогообложение = "ПродажаНеОблагаетсяНДС";
		КонецЕсли;	
	Иначе
		Налогообложение = "ПродажаОблагаетсяНДС";
	КонецЕсли;

	Склад = ДанныеИБ.Документ.Склад;
	Ответственный = ДанныеИБ.Документ.Автор;
	Комментарий = ДанныеИБ.Документ.Комментарий;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ОстаткиНоменклатуры.Номенклатура КАК Номенклатура,
	|	ОстаткиНоменклатуры.Номенклатура.БазоваяЕдиницаПоКлассификатору КАК ЕдиницаИзмерения,
	|	СУММА(ОстаткиНоменклатуры.Количество) КАК Количество,
	|	ВЫБОР
	|		КОГДА &ЭтоНТТ
	|			ТОГДА ВЫРАЗИТЬ(СУММА(ОстаткиНоменклатуры.РозничнаяСуммаВРеглВал) / СУММА(ОстаткиНоменклатуры.Количество) КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ ВЫРАЗИТЬ(СУММА(ОстаткиНоменклатуры.ПриходнаяСуммаВРеглВал) / СУММА(ОстаткиНоменклатуры.Количество) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК Цена,
	|	СУММА(ВЫБОР
	|			КОГДА &ЭтоНТТ
	|				ТОГДА ОстаткиНоменклатуры.РозничнаяСуммаВРеглВал
	|			ИНАЧЕ ОстаткиНоменклатуры.ПриходнаяСуммаВРеглВал
	|		КОНЕЦ) КАК Сумма,
	|	ВЫБОР
	|		КОГДА ОстаткиНоменклатуры.Партия.НаРеализации = ИСТИНА
	|			ТОГДА ""КомиссионныеТовары""
	|		ИНАЧЕ ""СобственныеТовары""
	|	КОНЕЦ КАК ТипЗапасов,
	|	ОстаткиНоменклатуры.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента,
	|	ОстаткиНоменклатуры.Партия.ГТД КАК ГТД,
	|	ОстаткиНоменклатуры.Партия.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ОстаткиНоменклатуры.Номенклатура.ЕдиницаПрослеживаемости КАК ЕдиницаИзмеренияПрослеживаемости,
	|	ОстаткиНоменклатуры.Номенклатура.ПодлежитПрослеживаемости КАК ПрослеживаемыйТовар,
	|	0 КАК КоличествоРНПТ
	|ПОМЕСТИТЬ ВТ_Промежуточная
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
	|ГДЕ
	|	ОстаткиНоменклатуры.Фирма = &Организация
	|	И ОстаткиНоменклатуры.Регистратор = &Ссылка
	|	И ОстаткиНоменклатуры.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОпераций.Списание)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиНоменклатуры.Номенклатура,
	|	ОстаткиНоменклатуры.Номенклатура.БазоваяЕдиницаПоКлассификатору,
	|	ВЫБОР
	|		КОГДА ОстаткиНоменклатуры.Партия.НаРеализации = ИСТИНА
	|			ТОГДА ""КомиссионныеТовары""
	|		ИНАЧЕ ""СобственныеТовары""
	|	КОНЕЦ,
	|	ОстаткиНоменклатуры.ХарактеристикаНоменклатуры,
	|	ОстаткиНоменклатуры.УникальныйНомерСтрокиДокумента,
	|	ОстаткиНоменклатуры.Партия.ГТД,
	|	ОстаткиНоменклатуры.Партия.СтранаПроисхождения,
	|	ОстаткиНоменклатуры.Номенклатура.ЕдиницаПрослеживаемости,
	|	ОстаткиНоменклатуры.Номенклатура.ПодлежитПрослеживаемости
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Промежуточная.Номенклатура КАК Номенклатура,
	|	ВТ_Промежуточная.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВТ_Промежуточная.Количество КАК Количество,
	|	ВТ_Промежуточная.Цена КАК Цена,
	|	ВТ_Промежуточная.Сумма КАК Сумма,
	|	ВТ_Промежуточная.ТипЗапасов КАК ТипЗапасов,
	|	ВТ_Промежуточная.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ВТ_Промежуточная.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента,
	|	ВТ_Промежуточная.ГТД КАК ГТД,
	|	ВТ_Промежуточная.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВТ_Промежуточная.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар,
	|	ВТ_Промежуточная.КоличествоРНПТ КАК КоличествоРНПТ,
	|	ВТ_Промежуточная.ЕдиницаИзмеренияПрослеживаемости КАК ЕдиницаИзмеренияПрослеживаемости
	|ИЗ
	|	ВТ_Промежуточная КАК ВТ_Промежуточная
	|ГДЕ
	|	ВТ_Промежуточная.Количество > 0";   

	Запрос.УстановитьПараметр("Организация", ДанныеИБ.Организация);
	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Документ);
	Запрос.УстановитьПараметр("ЭтоНТТ", ЭтоНТТ(ДанныеИБ.Документ.Склад, ДанныеИБ.Документ.Дата));
	ТаблицаТоварыПромежуточная = Запрос.Выполнить().Выгрузить();

	ТаблицаТоварыПромежуточная.Колонки.Добавить("НомерГТД");     

	ТаблицаТовары = ТаблицаТоварыПромежуточная.СкопироватьКолонки();

	ТаблицаПрослеживаемости = ДанныеИБ.Документ.Прослеживаемости.Выгрузить();

	Для Каждого СторокаТаблицы Из ТаблицаТоварыПромежуточная Цикл    

		СуммаПоПозиции = СторокаТаблицы.Сумма;
		НарастающийИтогСумма = 0;
		КоличествоПоПозиции = СторокаТаблицы.Количество; 
		УбывающийИтогКоличество = СторокаТаблицы.Количество;

		Если СторокаТаблицы.ПрослеживаемыйТовар = Истина Тогда
			СтрокиПрослеживаемости = ТаблицаПрослеживаемости.НайтиСтроки(Новый Структура("УникальныйНомерСтрокиДокумента", СторокаТаблицы.УникальныйНомерСтрокиДокумента));

			Для Каждого СтрокаТаблицыПрослежеваемости Из СтрокиПрослеживаемости Цикл

				Если СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0 Тогда
					Продолжить;
				КонецЕсли;	
				Если УбывающийИтогКоличество = 0 Тогда
					Прервать;
				КонецЕсли;	
				Если УбывающийИтогКоличество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					УбывающийИтогКоличество = 0;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
				ИначеЕсли УбывающийИтогКоличество > СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					УбывающийИтогКоличество = УбывающийИтогКоличество - СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
				ИначеЕсли УбывающийИтогКоличество < СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда	
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = УбывающийИтогКоличество;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = СтрокаТаблицыПрослежеваемости.КоличествоБазовое - УбывающийИтогКоличество; 
					УбывающийИтогКоличество = 0;
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
				КонецЕсли;
			КонецЦикла;	
		Иначе	
			НоваяСтрока = ТаблицаТовары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
			#Удаление
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СторокаТаблицы.ГТД, СторокаТаблицы.ГТД.НомерГТД, СторокаТаблицы.ГТД.СтранаПроисхождения, СторокаТаблицы.ГТД.ЭтоРНПТ)); 
			#КонецУдаления
			#Вставка
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ," 
													,?(СторокаТаблицы.ГТД = Null, Справочники.ГТД.ПустаяСсылка(), СторокаТаблицы.ГТД)
													,?(СторокаТаблицы.ГТД = Null, "", СторокаТаблицы.ГТД.НомерГТД), 
													,?(СторокаТаблицы.ГТД = Null, Справочники.СтраныМира.ПустаяСсылка(), СторокаТаблицы.ГТД.СтранаПроисхождения)
													,?(СторокаТаблицы.ГТД = Null, Ложь, СторокаТаблицы.ГТД.ЭтоРНПТ)));
			#КонецВставки
		КонецЕсли;	
	КонецЦикла;	

	Если КомпонентыОбмена.УзелКорреспондента.СворачиватьТЧДокументовПоТоварамИзСтавокНДС Или ЭтоНТТ(ДанныеИБ.Документ.Склад, ДанныеИБ.Документ.Дата) Тогда
		КолонкиГруппировок = "Номенклатура, ЕдиницаИзмерения, ТипЗапасов";
		КолонкиСуммирования = "Количество, Цена, Сумма";
		ТаблицаТовары = ПроизвестиСверткуКоллекцииОбъектовПоНоменклатуре(ТаблицаТовары, КолонкиГруппировок, КолонкиСуммирования, "ПересортицаСписание", Неопределено);
	КонецЕсли;

	Сумма = ТаблицаТовары.Итог("Сумма");

	ТаблицаДопРеквизитов = Новый ТаблицаЗначений;
	ТаблицаДопРеквизитов.Колонки.Добавить("Свойство");
	ТаблицаДопРеквизитов.Колонки.Добавить("ЗначениеСвойства");

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Номер ТП7";
	НоваяСтрока.ЗначениеСвойства = ДанныеИБ.Документ.Номер;

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Вид документа ТП7";
	НоваяСтрока.ЗначениеСвойства = "Пересортица";

	Если КомпонентыОбмена.УзелКорреспондента.ВыгружатьНомерДокумента Тогда 
		ДанныеXDTO.Вставить("ДополнительныеРеквизиты", ТаблицаДопРеквизитов);
	КонецЕсли;

	Если ТаблицаТовары.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("Товары", ТаблицаТовары);
	КонецЕсли;	
	ДанныеXDTO.Вставить("Сумма", Сумма);
	ДанныеXDTO.КлючевыеСвойства.Вставить("Номер", НомерДокумента);
	ДанныеXDTO.КлючевыеСвойства.Вставить("Дата", ДатаДокумента);
	ДанныеXDTO.Вставить("Подразделение", Подразделение);
	ДанныеXDTO.Вставить("Налогообложение", Налогообложение);
	ДанныеXDTO.Вставить("Склад", Склад);
	ДанныеXDTO.Вставить("Ответственный", Ответственный);
	ДанныеXDTO.Вставить("Комментарий", Комментарий);
КонецПроцедуры

&ИзменениеИКонтроль("ПКО_ПриходнаяНакладнаяРеализации_ПриОтправкеДанных")
Процедура ИО_ПКО_ПриходнаяНакладнаяРеализации_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	НомерБезПрефикса = Прав(ДанныеИБ.Номер, 6);
	НомерДокумента = КомпонентыОбмена.УзелКорреспондента.ПрефиксНомераДокументов + "ПР-" + НомерБезПрефикса;
	ВидОперации = "ПриемНаКомиссию"; 
	ВалютаВзаиморасчетов = ДанныеИБ.Договор.ВалютаВзаиморасчетов;

	Если ЗначениеЗаполнено(ДанныеИБ.Склад.Подразделение) Тогда 
		Подразделение = ДанныеИБ.Склад.Подразделение;
	Иначе
		Подразделение = КомпонентыОбмена.УзелКорреспондента.Подразделение;
	КонецЕсли;

	Если ДанныеИБ.ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.ВСумме Тогда
		СуммаВключаетНДС = Истина;
	Иначе
		СуммаВключаетНДС = Ложь;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПриходнаяНакладнаяРеализацииТовары.Номенклатура КАК Номенклатура,
	|	ПриходнаяНакладнаяРеализацииТовары.Номенклатура.БазоваяЕдиницаПоКлассификатору КАК ЕдиницаИзмерения,
	|	ПриходнаяНакладнаяРеализацииТовары.ПриходнаяЦена КАК Цена,
	|	ПриходнаяНакладнаяРеализацииТовары.Количество * ПриходнаяНакладнаяРеализацииТовары.Коэффициент КАК Количество,
	|	ВЫБОР
	|		КОГДА ПриходнаяНакладнаяРеализацииТовары.Ссылка.ВариантРасчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаНДС.БезНДС)
	|			ТОГДА ""БезНДС""
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПриходнаяНакладнаяРеализацииТовары.СтавкаНДС.ПроцентНДС = 20
	|						ИЛИ ПриходнаяНакладнаяРеализацииТовары.СтавкаНДС.ПроцентНДС = 18
	|					ТОГДА ""НДС20""
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ПриходнаяНакладнаяРеализацииТовары.СтавкаНДС.ПроцентНДС = 10
	|							ТОГДА ""НДС10""
	|						ИНАЧЕ ""БезНДС""
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ПриходнаяНакладнаяРеализацииТовары.Ссылка.ВариантРасчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаНДС.БезНДС)
	|			ТОГДА 0
	|		ИНАЧЕ ПриходнаяНакладнаяРеализацииТовары.СуммаНДС
	|	КОНЕЦ КАК СуммаНДС,
	|	ПриходнаяНакладнаяРеализацииТовары.РозничнаяЦена КАК ЦенаВРознице,
	|	ПриходнаяНакладнаяРеализацииТовары.РозничнаяСумма КАК СуммаВРознице,
	|	ПриходнаяНакладнаяРеализацииТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПриходнаяНакладнаяРеализацииТовары.ГТД КАК ГТД,
	|	ПриходнаяНакладнаяРеализацииТовары.УникальныйНомерСтрокиДокумента КАК УникальныйНомерСтрокиДокумента,
	|	ПриходнаяНакладнаяРеализацииТовары.Номенклатура.ЕдиницаПрослеживаемости КАК ЕдиницаИзмеренияПрослеживаемости,
	|	ПриходнаяНакладнаяРеализацииТовары.Номенклатура.ПодлежитПрослеживаемости КАК ПрослеживаемыйТовар,
	|	0 КАК КоличествоРНПТ,
	|	ПриходнаяНакладнаяРеализацииТовары.ПриходнаяСумма КАК Сумма,
	|	ПриходнаяНакладнаяРеализацииТовары.ХарактеристикаНоменклатуры КАК Характеристика
	|ИЗ
	|	Документ.ПриходнаяНакладнаяРеализации.Товары КАК ПриходнаяНакладнаяРеализацииТовары
	|ГДЕ
	|	ПриходнаяНакладнаяРеализацииТовары.Ссылка = &Ссылка
	|	И ПриходнаяНакладнаяРеализацииТовары.Количество > 0";

	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	ТаблицаТоварыПромежуточная = Запрос.Выполнить().Выгрузить();
	ТаблицаТоварыПромежуточная.Колонки.Добавить("НомерГТД");

	ТаблицаТовары = ТаблицаТоварыПромежуточная.СкопироватьКолонки();

	ТаблицаПрослеживаемости = ДанныеИБ.Ссылка.Прослеживаемости.Выгрузить();

	Для Каждого СторокаТаблицы Из ТаблицаТоварыПромежуточная Цикл

		СуммаПоПозиции = СторокаТаблицы.Сумма;
		НДСПоПозиции = СторокаТаблицы.СуммаНДС;
		СуммаВРозницеПоПозиции = СторокаТаблицы.СуммаВРознице; 
		НарастающийИтогНДС = 0;
		НарастающийИтогСумма = 0;
		НарастающийИтогСуммаВРознице = 0;
		КоличествоПоПозиции = СторокаТаблицы.Количество; 
		УбывающийИтогКоличество = СторокаТаблицы.Количество;

		Если СторокаТаблицы.ПрослеживаемыйТовар = Истина Тогда
			СтрокиПрослеживаемости = ТаблицаПрослеживаемости.НайтиСтроки(Новый Структура("УникальныйНомерСтрокиДокумента", СторокаТаблицы.УникальныйНомерСтрокиДокумента));

			Для Каждого СтрокаТаблицыПрослежеваемости Из СтрокиПрослеживаемости Цикл

				Если СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0 Тогда
					Продолжить;
				КонецЕсли;	
				Если УбывающийИтогКоличество = 0 Тогда
					Прервать;
				КонецЕсли;	
				Если УбывающийИтогКоличество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НоваяСтрока.СуммаВРознице = НоваяСтрока.Количество * НоваяСтрока.ЦенаВРознице;
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					НарастающийИтогСуммаВРознице = НарастающийИтогСуммаВРознице + НоваяСтрока.СуммаВРознице;
					УбывающийИтогКоличество = 0;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
					Если НарастающийИтогНДС <> НДСПоПозиции Тогда
						ДельтаНДС = НДСПоПозиции - НарастающийИтогНДС;
						НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2) + ДельтаНДС; 
					КонецЕсли;	
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
					Если НарастающийИтогСуммаВРознице <> СуммаВРозницеПоПозиции Тогда
						ДельтаСуммаВРознице = СуммаВРозницеПоПозиции - НарастающийИтогСуммаВРознице;
						НоваяСтрока.СуммаВРознице = НоваяСтрока.Количество * НоваяСтрока.ЦенаВРознице + ДельтаСуммаВРознице; 
					КонецЕсли;	
				ИначеЕсли УбывающийИтогКоличество > СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НоваяСтрока.СуммаВРознице = НоваяСтрока.Количество * НоваяСтрока.ЦенаВРознице;
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					НарастающийИтогСуммаВРознице = НарастающийИтогСуммаВРознице + НоваяСтрока.СуммаВРознице;
					УбывающийИтогКоличество = УбывающийИтогКоличество - СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
				ИначеЕсли УбывающийИтогКоличество < СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда	
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = УбывающийИтогКоличество;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НоваяСтрока.СуммаВРознице = НоваяСтрока.Количество * НоваяСтрока.ЦенаВРознице;
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					НарастающийИтогСуммаВРознице = НарастающийИтогСуммаВРознице + НоваяСтрока.СуммаВРознице;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = СтрокаТаблицыПрослежеваемости.КоличествоБазовое - УбывающийИтогКоличество; 
					УбывающийИтогКоличество = 0;
					Если НарастающийИтогНДС <> НДСПоПозиции Тогда
						ДельтаНДС = НДСПоПозиции - НарастающийИтогНДС;
						НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2) + ДельтаНДС; 
					КонецЕсли;	
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
					Если НарастающийИтогСуммаВРознице <> СуммаВРозницеПоПозиции Тогда
						ДельтаСуммаВРознице = СуммаВРозницеПоПозиции - НарастающийИтогСуммаВРознице;
						НоваяСтрока.СуммаВРознице = НоваяСтрока.Количество * НоваяСтрока.ЦенаВРознице + ДельтаСуммаВРознице; 
					КонецЕсли;	
				КонецЕсли;
			КонецЦикла;	
		Иначе	
			НоваяСтрока = ТаблицаТовары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
			#Удаление
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СторокаТаблицы.ГТД, СторокаТаблицы.ГТД.НомерГТД, СторокаТаблицы.ГТД.СтранаПроисхождения, СторокаТаблицы.ГТД.ЭтоРНПТ)); 
			#КонецУдаления
			#Вставка
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ," 
													,?(СторокаТаблицы.ГТД = Null, Справочники.ГТД.ПустаяСсылка(), СторокаТаблицы.ГТД)
													,?(СторокаТаблицы.ГТД = Null, "", СторокаТаблицы.ГТД.НомерГТД), 
													,?(СторокаТаблицы.ГТД = Null, Справочники.СтраныМира.ПустаяСсылка(), СторокаТаблицы.ГТД.СтранаПроисхождения)
													,?(СторокаТаблицы.ГТД = Null, Ложь, СторокаТаблицы.ГТД.ЭтоРНПТ)));
			#КонецВставки
		КонецЕсли;	
	КонецЦикла;	  

	Если КомпонентыОбмена.УзелКорреспондента.СворачиватьТЧДокументовПоТоварамИзСтавокНДС Или ЭтоНТТ(ДанныеИБ.Склад, ДанныеИБ.Дата) Тогда
		КолонкиГруппировок = "Номенклатура, ЕдиницаИзмерения, СтавкаНДС";
		КолонкиСуммирования = "Количество, Цена, Сумма, СуммаНДС, ЦенаВРознице, СуммаВРознице";
		ТаблицаТовары = ПроизвестиСверткуКоллекцииОбъектовПоНоменклатуре(ТаблицаТовары, КолонкиГруппировок, КолонкиСуммирования, "ПриходнаяНакладнаяРеализации", Неопределено);
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПриходнаяНакладнаяРеализацииДопРасходы.Услуга КАК Номенклатура,
	|	ПриходнаяНакладнаяРеализацииДопРасходы.Услуга.Наименование КАК Содержание,
	|	ПриходнаяНакладнаяРеализацииДопРасходы.Количество КАК Количество,
	|	ПриходнаяНакладнаяРеализацииДопРасходы.Цена КАК Цена,
	|	ПриходнаяНакладнаяРеализацииДопРасходы.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ПриходнаяНакладнаяРеализацииДопРасходы.Ссылка.ВариантРасчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаНДС.БезНДС)
	|			ТОГДА ""БезНДС""
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПриходнаяНакладнаяРеализацииДопРасходы.СтавкаНДС.ПроцентНДС = 20
	|						ИЛИ ПриходнаяНакладнаяРеализацииДопРасходы.СтавкаНДС.ПроцентНДС = 18
	|					ТОГДА ""НДС20""
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ПриходнаяНакладнаяРеализацииДопРасходы.СтавкаНДС.ПроцентНДС = 10
	|							ТОГДА ""НДС10""
	|						ИНАЧЕ ""БезНДС""
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ПриходнаяНакладнаяРеализацииДопРасходы.Ссылка.ВариантРасчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаНДС.БезНДС)
	|			ТОГДА 0
	|		ИНАЧЕ ПриходнаяНакладнаяРеализацииДопРасходы.СуммаНДС
	|	КОНЕЦ КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА ПриходнаяНакладнаяРеализацииДопРасходы.ОтноситьНаПрихСумму = ЛОЖЬ
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоДопРасходы
	|ИЗ
	|	Документ.ПриходнаяНакладнаяРеализации.ДопРасходы КАК ПриходнаяНакладнаяРеализацииДопРасходы
	|ГДЕ
	|	ПриходнаяНакладнаяРеализацииДопРасходы.Ссылка = &Ссылка
	|	И ПриходнаяНакладнаяРеализацииДопРасходы.Количество > 0
	|	И ВЫБОР
	|			КОГДА &ЭтоНТТ
	|				ТОГДА ПриходнаяНакладнаяРеализацииДопРасходы.ОтноситьНаПрихСумму = ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";

	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	Запрос.УстановитьПараметр("ЭтоНТТ", ЭтоНТТ(ДанныеИБ.Склад, ДанныеИБ.Дата));
	ТаблицаУслуги = Запрос.Выполнить().Выгрузить();

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ИсточникДанных.Номенклатура КАК Номенклатура,
	|	ИсточникДанных.ПризнакДвижения КАК ПризнакДвижения,
	|	СУММА(ИсточникДанных.Количество) КАК Количество,
	|	СУММА(ИсточникДанных.ПриходнаяСуммаВРеглВал) КАК Сумма,
	|	ИсточникДанных.ПриходнаяСуммаВРеглВал - ИсточникДанных.ПриходнаяСуммаБезНДСВРеглВал КАК СуммаНДС
	|ПОМЕСТИТЬ ДвиженияДокумента
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры КАК ИсточникДанных
	|ГДЕ
	|	ИсточникДанных.Регистратор = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ИсточникДанных.Номенклатура,
	|	ИсточникДанных.ПризнакДвижения,
	|	ИсточникДанных.Регистратор,
	|	ИсточникДанных.ПриходнаяСуммаВРеглВал - ИсточникДанных.ПриходнаяСуммаБезНДСВРеглВал
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПризнакДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДвиженияДокумента.Номенклатура КАК Номенклатура,
	|	ДвиженияДокумента.Сумма КАК Сумма,
	|	ДвиженияДокумента.СуммаНДС КАК СуммаНДС
	|ПОМЕСТИТЬ ДопРасходы
	|ИЗ
	|	ДвиженияДокумента КАК ДвиженияДокумента
	|ГДЕ
	|	ДвиженияДокумента.ПризнакДвижения = ЗНАЧЕНИЕ(Перечисление.ПризнакиДвижения.НачислениеДопРасходов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДвиженияДокумента.Номенклатура КАК Номенклатура,
	|	ДвиженияДокумента.Количество КАК Количество,
	|	ДвиженияДокумента.Сумма КАК Сумма
	|ПОМЕСТИТЬ ОстальныеДвижения
	|ИЗ
	|	ДвиженияДокумента КАК ДвиженияДокумента
	|ГДЕ
	|	ДвиженияДокумента.ПризнакДвижения <> ЗНАЧЕНИЕ(Перечисление.ПризнакиДвижения.НачислениеДопРасходов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДопРасходы.Номенклатура КАК Номенклатура,
	|	ДопРасходы.Сумма КАК Сумма,
	|	ЕСТЬNULL(ОстальныеДвижения.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(ОстальныеДвижения.Сумма, 0) КАК СтоимостьТоваров,
	|	ДопРасходы.СуммаНДС КАК СуммаНДС
	|ИЗ
	|	ДопРасходы КАК ДопРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстальныеДвижения КАК ОстальныеДвижения
	|		ПО ДопРасходы.Номенклатура = ОстальныеДвижения.Номенклатура";

	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	ТаблицаДопРасходы = Запрос.Выполнить().Выгрузить();

	Если ЭтоНТТ(ДанныеИБ.Склад, ДанныеИБ.Дата) Тогда  
		Если ТаблицаДопРасходы.Количество() > 0 Тогда   
			ТаблицаДопРасходы.Свернуть(, "Сумма, СуммаНДС");  
			Если ТаблицаТовары.Количество() > 0 Тогда  
				ТаблицаТовары[0].СуммаНДС = ТаблицаТовары[0].СуммаНДС + ТаблицаДопРасходы[0].СуммаНДС;
				ТаблицаТовары[0].Сумма = ТаблицаТовары[0].Сумма + ТаблицаДопРасходы[0].Сумма;
				Если ТаблицаТовары[0].Количество <> 0 Тогда 
					ТаблицаТовары[0].Цена = ТаблицаТовары[0].Сумма / ТаблицаТовары[0].Количество; 
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
		ТаблицаДопРасходы.Очистить();
	Иначе
		Если ТаблицаДопРасходы.Количество() > 0 Тогда
			ТаблицаДопРасходы.Колонки.Добавить("ДокументПоступления", Новый ОписаниеТипов("Структура"));
			ИнструкцияКонвертации = Новый Структура("Значение, ИмяПКО");
			ИнструкцияКонвертации.Значение = ДанныеИБ.Ссылка;
			ИнструкцияКонвертации.ИмяПКО = "ПриходнаяНакладная";
			Для Каждого СтрокаТаблицы Из ТаблицаДопРасходы Цикл
				СтрокаТаблицы.ДокументПоступления = ИнструкцияКонвертации;
			КонецЦикла;    
		КонецЕсли;	
	КонецЕсли;

	ТаблицаДопРеквизитов = Новый ТаблицаЗначений;
	ТаблицаДопРеквизитов.Колонки.Добавить("Свойство");
	ТаблицаДопРеквизитов.Колонки.Добавить("ЗначениеСвойства");

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Номер ТП7";
	НоваяСтрока.ЗначениеСвойства = ДанныеИБ.Номер;

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Вид документа ТП7";
	НоваяСтрока.ЗначениеСвойства = "Приходная накладная реализации";

	Если КомпонентыОбмена.УзелКорреспондента.ВыгружатьНомерДокумента Тогда 
		ДанныеXDTO.Вставить("ДополнительныеРеквизиты", ТаблицаДопРеквизитов);
	КонецЕсли;

	Если ТаблицаТовары.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("Товары", ТаблицаТовары);
	КонецЕсли;	
	Если ТаблицаУслуги.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("Услуги", ТаблицаУслуги);
	КонецЕсли;	
	Если ТаблицаДопРасходы.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("РасшифровкаДопРасходов", ТаблицаДопРасходы);
	КонецЕсли;	
	ДанныеXDTO.КлючевыеСвойства.Вставить("Номер", НомерДокумента);
	ДанныеXDTO.Вставить("ВидОперации", ВидОперации);
	ДанныеXDTO.Вставить("ВалютаВзаиморасчетов", ВалютаВзаиморасчетов);
	ДанныеXDTO.Вставить("Подразделение", Подразделение);
	ДанныеXDTO.Вставить("СуммаВключаетНДС", СуммаВключаетНДС);

	Если ДанныеИБ.Договор.Владелец = Справочники.Контрагенты.РозничныйПокупатель Тогда  
		Если ДанныеXDTO.Свойство("Договор") Тогда
			ДанныеXDTO.Договор.Организация = ДанныеXDTO.КлючевыеСвойства.Организация; 
			ДанныеXDTO.Договор.ВидДоговора = "СПоставщиком";   
			ДанныеXDTO.Договор.Наименование = "Основной договор";
		КонецЕсли;	
	КонецЕсли;	

	Если Не ЗначениеЗаполнено(ДанныеИБ.Курс) Тогда
		ДанныеXDTO.Вставить("КурсВзаиморасчетов", 1);  
	КонецЕсли;	
	Если Не ЗначениеЗаполнено(ДанныеИБ.Кратность) Тогда
		ДанныеXDTO.Вставить("КратностьВзаиморасчетов", 1);  
	КонецЕсли;
КонецПроцедуры

&ИзменениеИКонтроль("ПКО_РасходнаяНакладная_ПриОтправкеДанных")
Процедура ИО_ПКО_РасходнаяНакладная_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	НомерБезПрефикса = Прав(ДанныеИБ.Номер, 6);
	НомерДокумента = КомпонентыОбмена.УзелКорреспондента.ПрефиксНомераДокументов + "РН-" + НомерБезПрефикса;
	ВидОперации = "РеализацияКлиенту";   

	ВалютаВзаиморасчетов = ДанныеИБ.Договор.ВалютаВзаиморасчетов;

	Если ДанныеИБ.ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.ВСумме Тогда
		СуммаВключаетНДС = Истина;
	Иначе
		СуммаВключаетНДС = Ложь;
	КонецЕсли;

	Если ЗначениеЗаполнено(ДанныеИБ.Склад.Подразделение) Тогда 
		Подразделение = ДанныеИБ.Склад.Подразделение;
	Иначе
		Подразделение = КомпонентыОбмена.УзелКорреспондента.Подразделение;
	КонецЕсли;

	ПодготовитьДанныеНалогообложение(КомпонентыОбмена, ДанныеИБ, ДанныеXDTO);

	Если ТипЗнч(ДанныеИБ.Грузоотправитель) = Тип("СправочникСсылка.Контрагенты") Тогда
		Грузоотправитель = ДанныеИБ.Грузоотправитель;
	Иначе
		Грузоотправитель = Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;

	Если ТипЗнч(ДанныеИБ.Грузополучатель) = Тип("СправочникСсылка.Контрагенты") Тогда
		Грузополучатель = ДанныеИБ.Грузополучатель;
	Иначе
		Грузополучатель = Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;

	ТаблицаДопРеквизитов = Новый ТаблицаЗначений;
	ТаблицаДопРеквизитов.Колонки.Добавить("Свойство");
	ТаблицаДопРеквизитов.Колонки.Добавить("ЗначениеСвойства");

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Номер ТП7";
	НоваяСтрока.ЗначениеСвойства = ДанныеИБ.Номер;

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Вид документа ТП7";
	НоваяСтрока.ЗначениеСвойства = "Реализация товаров и услуг";

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.ЯвляетсяПлательщикомНДС КАК ЯвляетсяПлательщикомНДС
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&Период, ) КАК УчетнаяПолитикаОрганизацийСрезПоследних
	|ГДЕ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.Организация = &Организация";

	Запрос.УстановитьПараметр("Период", ДанныеИБ.Дата);
	Запрос.УстановитьПараметр("Организация", ДанныеИБ.Фирма);

	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если Выборка.ЯвляетсяПлательщикомНДС Тогда
			Налогообложение = "ПродажаОблагаетсяНДС";
		Иначе
			Налогообложение = "ПродажаНеОблагаетсяНДС";
		КонецЕсли;	
	Иначе
		Налогообложение = "ПродажаОблагаетсяНДС";
	КонецЕсли;	

	ТаблицаТоварыПромежуточная = Запрос_РасходнаяНакладная_Товары(ДанныеИБ.Ссылка);
	ТаблицаТоварыПромежуточная.Колонки.Добавить("НомерГТД"); 
	Если КомпонентыОбмена.УзелКорреспондента.ВыгружатьТаруКакВозвратнуюТару Тогда
		ТаблицаТоварыПромежуточная.Колонки.Добавить("Свертка");   
	КонецЕсли;	

	ТаблицаТовары = ТаблицаТоварыПромежуточная.СкопироватьКолонки();

	ТаблицаПрослеживаемости = ДанныеИБ.Ссылка.Прослеживаемости.Выгрузить();

	Для Каждого СторокаТаблицы Из ТаблицаТоварыПромежуточная Цикл

		Если КомпонентыОбмена.УзелКорреспондента.ВыгружатьТаруКакВозвратнуюТару Тогда   
			Если СторокаТаблицы.Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Тара Тогда  
				СторокаТаблицы.ТипЗапасов = "ВозвратнаяТара";  
				СторокаТаблицы.Свертка = Ложь;
			Иначе
				СторокаТаблицы.Свертка = Истина;
			КонецЕсли;
		КонецЕсли; 

		СуммаПоПозиции = СторокаТаблицы.Сумма;
		НДСПоПозиции = СторокаТаблицы.СуммаНДС;
		НарастающийИтогНДС = 0;
		НарастающийИтогСумма = 0;
		КоличествоПоПозиции = СторокаТаблицы.Количество; 
		УбывающийИтогКоличество = СторокаТаблицы.Количество;

		Если СторокаТаблицы.ПрослеживаемыйТовар = Истина И СторокаТаблицы.ЭтоТовар = Истина Тогда
			СтрокиПрослеживаемости = ТаблицаПрослеживаемости.НайтиСтроки(Новый Структура("УникальныйНомерСтрокиДокумента", СторокаТаблицы.УникальныйНомерСтрокиДокумента));

			Для Каждого СтрокаТаблицыПрослежеваемости Из СтрокиПрослеживаемости Цикл

				Если СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0 Тогда
					Продолжить;
				КонецЕсли;	
				Если УбывающийИтогКоличество = 0 Тогда
					Прервать;
				КонецЕсли;	
				Если УбывающийИтогКоличество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					УбывающийИтогКоличество = 0;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
					Если НарастающийИтогНДС <> НДСПоПозиции Тогда
						ДельтаНДС = НДСПоПозиции - НарастающийИтогНДС;
						НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2) + ДельтаНДС; 
					КонецЕсли;	
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
				ИначеЕсли УбывающийИтогКоличество > СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					УбывающийИтогКоличество = УбывающийИтогКоличество - СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
				ИначеЕсли УбывающийИтогКоличество < СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда	
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = УбывающийИтогКоличество;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = СтрокаТаблицыПрослежеваемости.КоличествоБазовое - УбывающийИтогКоличество; 
					УбывающийИтогКоличество = 0;
					Если НарастающийИтогНДС <> НДСПоПозиции Тогда
						ДельтаНДС = НДСПоПозиции - НарастающийИтогНДС;
						НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2) + ДельтаНДС; 
					КонецЕсли;	
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
				КонецЕсли;
			КонецЦикла;	
		Иначе	
			НоваяСтрока = ТаблицаТовары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
			#Удаление
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СторокаТаблицы.ГТД, СторокаТаблицы.ГТД.НомерГТД, СторокаТаблицы.ГТД.СтранаПроисхождения, СторокаТаблицы.ГТД.ЭтоРНПТ)); 
			#КонецУдаления
			#Вставка
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ," 
													,?(СторокаТаблицы.ГТД = Null, Справочники.ГТД.ПустаяСсылка(), СторокаТаблицы.ГТД)
													,?(СторокаТаблицы.ГТД = Null, "", СторокаТаблицы.ГТД.НомерГТД), 
													,?(СторокаТаблицы.ГТД = Null, Справочники.СтраныМира.ПустаяСсылка(), СторокаТаблицы.ГТД.СтранаПроисхождения)
													,?(СторокаТаблицы.ГТД = Null, Ложь, СторокаТаблицы.ГТД.ЭтоРНПТ)));
			#КонецВставки
		КонецЕсли;	
	КонецЦикла;	 

	Если КомпонентыОбмена.УзелКорреспондента.СворачиватьТЧДокументовПоТоварамИзСтавокНДС Или ЭтоНТТ(ДанныеИБ.Склад, ДанныеИБ.Дата) Тогда
		КолонкиГруппировок = "Номенклатура, ЕдиницаИзмерения, СтавкаНДС, ТипЗапасов";
		КолонкиСуммирования = "Количество, Цена, Сумма, СуммаНДС";
		ТаблицаТовары = ПроизвестиСверткуКоллекцииОбъектовПоНоменклатуре(ТаблицаТовары, КолонкиГруппировок, КолонкиСуммирования, "РасходнаяНакладная", Неопределено);
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	РасходнаяНакладнаяУслуги.Услуга КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА РасходнаяНакладнаяУслуги.Содержание = """"
	|			ТОГДА РасходнаяНакладнаяУслуги.Услуга.Наименование
	|		ИНАЧЕ РасходнаяНакладнаяУслуги.Содержание
	|	КОНЕЦ КАК Содержание,
	|	РасходнаяНакладнаяУслуги.Количество КАК Количество,
	|	РасходнаяНакладнаяУслуги.РозничнаяЦена КАК Цена,
	|	РасходнаяНакладнаяУслуги.РозничнаяСумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА РасходнаяНакладнаяУслуги.СтавкаНДС.ПроцентНДС = 20
	|				ИЛИ РасходнаяНакладнаяУслуги.СтавкаНДС.ПроцентНДС = 18
	|			ТОГДА ""НДС20""
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РасходнаяНакладнаяУслуги.СтавкаНДС.ПроцентНДС = 10
	|					ТОГДА ""НДС10""
	|				ИНАЧЕ ""БезНДС""
	|			КОНЕЦ
	|	КОНЕЦ КАК СтавкаНДС,
	|	РасходнаяНакладнаяУслуги.СуммаНДС КАК СуммаНДС
	|ИЗ
	|	Документ.РасходнаяНакладная.Услуги КАК РасходнаяНакладнаяУслуги
	|ГДЕ
	|	РасходнаяНакладнаяУслуги.Ссылка = &Ссылка
	|	И РасходнаяНакладнаяУслуги.Количество > 0";	

	Запрос.УстановитьПараметр("Ссылка", ДанныеИБ.Ссылка);
	ТаблицаУслуги = Запрос.Выполнить().Выгрузить();

	Если ТаблицаТовары.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("Товары", ТаблицаТовары);
	КонецЕсли;	
	Если ТаблицаУслуги.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("Услуги", ТаблицаУслуги);
	КонецЕсли;	
	ДанныеXDTO.КлючевыеСвойства.Вставить("Номер", НомерДокумента);
	ДанныеXDTO.Вставить("ВидОперации", ВидОперации);
	ДанныеXDTO.Вставить("ВалютаВзаиморасчетов", ВалютаВзаиморасчетов);
	ДанныеXDTO.Вставить("СуммаВключаетНДС", СуммаВключаетНДС);
	ДанныеXDTO.Вставить("Подразделение", Подразделение);
	ДанныеXDTO.Вставить("Грузоотправитель", Грузоотправитель);
	ДанныеXDTO.Вставить("Грузополучатель", Грузополучатель);
	ДанныеXDTO.Вставить("Налогообложение", Налогообложение);
	Если КомпонентыОбмена.УзелКорреспондента.ВыгружатьНомерДокумента Тогда 
		ДанныеXDTO.Вставить("ДополнительныеРеквизиты", ТаблицаДопРеквизитов);
	КонецЕсли; 

	Если ДанныеИБ.Договор.Владелец = Справочники.Контрагенты.РозничныйПокупатель Тогда  
		Если ДанныеXDTO.Свойство("Договор") Тогда
			ДанныеXDTO.Договор.Организация = ДанныеXDTO.КлючевыеСвойства.Организация; 
			ДанныеXDTO.Договор.ВидДоговора = "СПокупателем";   
			ДанныеXDTO.Договор.Наименование = "Основной договор";
		КонецЕсли;	
	КонецЕсли;	

	Если Не ЗначениеЗаполнено(ДанныеИБ.КурсВзаиморасчетов) Тогда
		ДанныеXDTO.Вставить("КурсВзаиморасчетов", 1);  
	КонецЕсли;	
	Если Не ЗначениеЗаполнено(ДанныеИБ.КратностьВзаиморасчетов) Тогда
		ДанныеXDTO.Вставить("КратностьВзаиморасчетов", 1);  
	КонецЕсли;
КонецПроцедуры

&ИзменениеИКонтроль("ПКО_РасходнаяНакладнаяРеализации_ПриОтправкеДанных")
Процедура ИО_ПКО_РасходнаяНакладнаяРеализации_ПриОтправкеДанных(ДанныеИБ, ДанныеXDTO, КомпонентыОбмена, СтекВыгрузки)
	НомерБезПрефикса = Прав(ДанныеИБ.Номер, 6);
	НомерДокумента = КомпонентыОбмена.УзелКорреспондента.ПрефиксНомераДокументов + "РР-" + НомерБезПрефикса;
	ВидОперации = "ПередачаНаКомиссию"; 
	ВалютаВзаиморасчетов = ДанныеИБ.Договор.ВалютаВзаиморасчетов;

	Если ДанныеИБ.ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.ВСумме Тогда
		СуммаВключаетНДС = Истина;
	Иначе
		СуммаВключаетНДС = Ложь;
	КонецЕсли;

	Если ЗначениеЗаполнено(ДанныеИБ.Склад.Подразделение) Тогда 
		Подразделение = ДанныеИБ.Склад.Подразделение;
	Иначе
		Подразделение = КомпонентыОбмена.УзелКорреспондента.Подразделение;
	КонецЕсли;

	Если ТипЗнч(ДанныеИБ.Грузоотправитель) = Тип("СправочникСсылка.Контрагенты") Тогда
		Грузоотправитель = ДанныеИБ.Грузоотправитель;
	Иначе
		Грузоотправитель = Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;

	Если ТипЗнч(ДанныеИБ.Грузополучатель) = Тип("СправочникСсылка.Контрагенты") Тогда
		Грузополучатель = ДанныеИБ.Грузополучатель;
	Иначе
		Грузополучатель = Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;	

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.ЯвляетсяПлательщикомНДС КАК ЯвляетсяПлательщикомНДС
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&Период, ) КАК УчетнаяПолитикаОрганизацийСрезПоследних
	|ГДЕ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.Организация = &Организация";

	Запрос.УстановитьПараметр("Период", ДанныеИБ.Дата);
	Запрос.УстановитьПараметр("Организация", ДанныеИБ.Фирма);

	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если Выборка.ЯвляетсяПлательщикомНДС Тогда
			Налогообложение = "ПродажаОблагаетсяНДС";
		Иначе
			Налогообложение = "ПродажаНеОблагаетсяНДС";
		КонецЕсли;	
	Иначе
		Налогообложение = "ПродажаОблагаетсяНДС";
	КонецЕсли;	

	ТаблицаТоварыПромежуточная = Запрос_РасходнаяНакладнаяРеализации_Товары(ДанныеИБ.Ссылка);  

	ТаблицаТоварыПромежуточная.Колонки.Добавить("НомерГТД"); 
	Если КомпонентыОбмена.УзелКорреспондента.ВыгружатьТаруКакВозвратнуюТару Тогда
		ТаблицаТоварыПромежуточная.Колонки.Добавить("Свертка");   
	КонецЕсли;	

	ТаблицаТовары = ТаблицаТоварыПромежуточная.СкопироватьКолонки();

	ТаблицаПрослеживаемости = ДанныеИБ.Ссылка.Прослеживаемости.Выгрузить();

	Для Каждого СторокаТаблицы Из ТаблицаТоварыПромежуточная Цикл

		Если КомпонентыОбмена.УзелКорреспондента.ВыгружатьТаруКакВозвратнуюТару Тогда   
			Если СторокаТаблицы.Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Тара Тогда  
				СторокаТаблицы.ТипЗапасов = "ВозвратнаяТара";  
				СторокаТаблицы.Свертка = Ложь;
			Иначе
				СторокаТаблицы.Свертка = Истина;
			КонецЕсли;
		КонецЕсли; 

		СуммаПоПозиции = СторокаТаблицы.Сумма;
		НДСПоПозиции = СторокаТаблицы.СуммаНДС;
		НарастающийИтогНДС = 0;
		НарастающийИтогСумма = 0;
		КоличествоПоПозиции = СторокаТаблицы.Количество; 
		УбывающийИтогКоличество = СторокаТаблицы.Количество;

		Если СторокаТаблицы.ПрослеживаемыйТовар = Истина Тогда
			СтрокиПрослеживаемости = ТаблицаПрослеживаемости.НайтиСтроки(Новый Структура("УникальныйНомерСтрокиДокумента", СторокаТаблицы.УникальныйНомерСтрокиДокумента));

			Для Каждого СтрокаТаблицыПрослежеваемости Из СтрокиПрослеживаемости Цикл

				Если СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0 Тогда
					Продолжить;
				КонецЕсли;	
				Если УбывающийИтогКоличество = 0 Тогда
					Прервать;
				КонецЕсли;	
				Если УбывающийИтогКоличество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					УбывающийИтогКоличество = 0;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
					Если НарастающийИтогНДС <> НДСПоПозиции Тогда
						ДельтаНДС = НДСПоПозиции - НарастающийИтогНДС;
						НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2) + ДельтаНДС; 
					КонецЕсли;	
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
				ИначеЕсли УбывающийИтогКоличество > СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					УбывающийИтогКоличество = УбывающийИтогКоличество - СтрокаТаблицыПрослежеваемости.КоличествоБазовое;
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = 0; 
				ИначеЕсли УбывающийИтогКоличество < СтрокаТаблицыПрослежеваемости.КоличествоБазовое Тогда	
					НоваяСтрока = ТаблицаТовары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
					НоваяСтрока.КоличествоРНПТ = УбывающийИтогКоличество;
					НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СтрокаТаблицыПрослежеваемости.РНПТ, СтрокаТаблицыПрослежеваемости.РНПТ.НомерГТД, СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения, СтрокаТаблицыПрослежеваемости.РНПТ.ЭтоРНПТ)); 
					НоваяСтрока.СтранаПроисхождения = СтрокаТаблицыПрослежеваемости.РНПТ.СтранаПроисхождения;
					НоваяСтрока.Количество = УбывающийИтогКоличество;
					НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена;
					НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2); 
					НарастающийИтогНДС = НарастающийИтогНДС + НоваяСтрока.СуммаНДС;
					НарастающийИтогСумма = НарастающийИтогСумма + НоваяСтрока.Сумма; 
					СтрокаТаблицыПрослежеваемости.КоличествоБазовое = СтрокаТаблицыПрослежеваемости.КоличествоБазовое - УбывающийИтогКоличество; 
					УбывающийИтогКоличество = 0;
					Если НарастающийИтогНДС <> НДСПоПозиции Тогда
						ДельтаНДС = НДСПоПозиции - НарастающийИтогНДС;
						НоваяСтрока.СуммаНДС = Окр(НДСПоПозиции / КоличествоПоПозиции * НоваяСтрока.КоличествоРНПТ, 2) + ДельтаНДС; 
					КонецЕсли;	
					Если НарастающийИтогСумма <> СуммаПоПозиции Тогда
						ДельтаСумма = СуммаПоПозиции - НарастающийИтогСумма;
						НоваяСтрока.Сумма = НоваяСтрока.Количество * НоваяСтрока.Цена + ДельтаСумма; 
					КонецЕсли;	
				КонецЕсли;
			КонецЦикла;	
		Иначе	
			НоваяСтрока = ТаблицаТовары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СторокаТаблицы);
			#Удаление
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ,", СторокаТаблицы.ГТД, СторокаТаблицы.ГТД.НомерГТД, СторокаТаблицы.ГТД.СтранаПроисхождения, СторокаТаблицы.ГТД.ЭтоРНПТ)); 
			#КонецУдаления
			#Вставка
			НоваяСтрока.НомерГТД = Новый Структура("ИмяПКО,Значение", "СправочникНомерГТД", Новый Структура("Ссылка, НомерГТД, СтранаПроисхождения, ЯвляетсяРНПТ," 
													,?(СторокаТаблицы.ГТД = Null, Справочники.ГТД.ПустаяСсылка(), СторокаТаблицы.ГТД)
													,?(СторокаТаблицы.ГТД = Null, "", СторокаТаблицы.ГТД.НомерГТД), 
													,?(СторокаТаблицы.ГТД = Null, Справочники.СтраныМира.ПустаяСсылка(), СторокаТаблицы.ГТД.СтранаПроисхождения)
													,?(СторокаТаблицы.ГТД = Null, Ложь, СторокаТаблицы.ГТД.ЭтоРНПТ)));
			#КонецВставки
		КонецЕсли;	
	КонецЦикла;	 

	Если КомпонентыОбмена.УзелКорреспондента.СворачиватьТЧДокументовПоТоварамИзСтавокНДС Или ЭтоНТТ(ДанныеИБ.Склад, ДанныеИБ.Дата) Тогда
		КолонкиГруппировок = "Номенклатура, ЕдиницаИзмерения, СтавкаНДС, ТипЗапасов";
		КолонкиСуммирования = "Количество, Цена, Сумма, СуммаНДС";
		ТаблицаТовары = ПроизвестиСверткуКоллекцииОбъектовПоНоменклатуре(ТаблицаТовары, КолонкиГруппировок, КолонкиСуммирования, "РасходнаяНакладнаяРеализации", Неопределено);
	КонецЕсли;

	ТаблицаДопРеквизитов = Новый ТаблицаЗначений;
	ТаблицаДопРеквизитов.Колонки.Добавить("Свойство");
	ТаблицаДопРеквизитов.Колонки.Добавить("ЗначениеСвойства");

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Номер ТП7";
	НоваяСтрока.ЗначениеСвойства = ДанныеИБ.Номер;

	НоваяСтрока = ТаблицаДопРеквизитов.Добавить();
	НоваяСтрока.Свойство = "Вид документа ТП7";
	НоваяСтрока.ЗначениеСвойства = "Расходная накладная реализации";

	Если КомпонентыОбмена.УзелКорреспондента.ВыгружатьНомерДокумента Тогда 
		ДанныеXDTO.Вставить("ДополнительныеРеквизиты", ТаблицаДопРеквизитов);
	КонецЕсли;

	Если ТаблицаТовары.Количество() > 0 Тогда
		ДанныеXDTO.Вставить("Товары", ТаблицаТовары);
	КонецЕсли;	
	ДанныеXDTO.КлючевыеСвойства.Вставить("Номер", НомерДокумента);
	ДанныеXDTO.Вставить("ВидОперации", ВидОперации);
	ДанныеXDTO.Вставить("ВалютаВзаиморасчетов", ВалютаВзаиморасчетов);
	ДанныеXDTO.Вставить("СуммаВключаетНДС", СуммаВключаетНДС);
	ДанныеXDTO.Вставить("Подразделение", Подразделение);
	ДанныеXDTO.Вставить("Налогообложение", Налогообложение);
	ДанныеXDTO.Вставить("Грузоотправитель", Грузоотправитель);
	ДанныеXDTO.Вставить("Грузополучатель", Грузополучатель); 

	Если ДанныеИБ.Договор.Владелец = Справочники.Контрагенты.РозничныйПокупатель Тогда  
		Если ДанныеXDTO.Свойство("Договор") Тогда
			ДанныеXDTO.Договор.Организация = ДанныеXDTO.КлючевыеСвойства.Организация; 
			ДанныеXDTO.Договор.ВидДоговора = "СПокупателем";   
			ДанныеXDTO.Договор.Наименование = "Основной договор";
		КонецЕсли;	
	КонецЕсли;	

	Если Не ЗначениеЗаполнено(ДанныеИБ.КурсВзаиморасчетов) Тогда
		ДанныеXDTO.Вставить("КурсВзаиморасчетов", 1);  
	КонецЕсли;	
	Если Не ЗначениеЗаполнено(ДанныеИБ.КратностьВзаиморасчетов) Тогда
		ДанныеXDTO.Вставить("КратностьВзаиморасчетов", 1);  
	КонецЕсли;
КонецПроцедуры
